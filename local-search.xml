<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>MHA高可用+Atlas读写分离</title>
    <link href="/2024/10/18/MHA%E9%AB%98%E5%8F%AF%E7%94%A8+Atlas%E8%AF%BB%E5%86%99%E5%88%86%E7%A6%BB/"/>
    <url>/2024/10/18/MHA%E9%AB%98%E5%8F%AF%E7%94%A8+Atlas%E8%AF%BB%E5%86%99%E5%88%86%E7%A6%BB/</url>
    
    <content type="html"><![CDATA[<h3 id="高可用架构方案"><a href="#高可用架构方案" class="headerlink" title="高可用架构方案"></a>高可用架构方案</h3><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs makefile"><span class="hljs-section">负载均衡:有一定的高可用性 </span><br>LVS  Nginx<br><span class="hljs-section">主备系统:有高可用性,需要切换,单活架构</span><br>keepalived,  MHA, MMM<br><span class="hljs-section">真正高可用(多活-并发): </span><br>NDB Cluster  Oracle RAC  Sysbase cluster   , InnoDB Cluster（MGR）,PXC , MGC<br></code></pre></td></tr></table></figure><h3 id="主从架构演变介绍"><a href="#主从架构演变介绍" class="headerlink" title="主从架构演变介绍"></a>主从架构演变介绍</h3><h4 id="基础架构"><a href="#基础架构" class="headerlink" title="基础架构"></a>基础架构</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs">一主一从<br>一主多从<br>双主<br>多级主从<br>循环复制<br>MGR<br></code></pre></td></tr></table></figure><h4 id="高级应用架构"><a href="#高级应用架构" class="headerlink" title="高级应用架构"></a>高级应用架构</h4><h5 id="高性能架构"><a href="#高性能架构" class="headerlink" title="高性能架构"></a>高性能架构</h5><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs scss">读写分离架构(读性能较高)：<br>Atlas;Mysql Router;Cobar;proxySQL;Maxcale;Mycat<br><br>分布式架构(读写性能都提高)：<br>Atlas；<span class="hljs-built_in">Mycat</span>(开源)；TDDL；Innodb Cluster<br></code></pre></td></tr></table></figure><h5 id="高可用架构"><a href="#高可用架构" class="headerlink" title="高可用架构"></a>高可用架构</h5><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs scss">单活(可切换):MMM架构——Keepalived+<span class="hljs-number">2</span>主+<span class="hljs-number">1</span>从;MHA架构(<span class="hljs-number">1</span>主<span class="hljs-number">2</span>从);<span class="hljs-built_in">TMHA</span>(<span class="hljs-number">1</span>主<span class="hljs-number">1</span>从) <br>多活:Innodb Cluster;<span class="hljs-built_in">MGC</span>(MariaDB Galera Cluster)架构;PXC)(Percona XtraDB Cluster);MySQL <span class="hljs-built_in">Cluster</span>(Oracle rac)架构<br></code></pre></td></tr></table></figure><h3 id="高可用MHA"><a href="#高可用MHA" class="headerlink" title="高可用MHA"></a>高可用MHA</h3><h4 id="工作原理"><a href="#工作原理" class="headerlink" title="工作原理"></a>工作原理</h4><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">主库宕机处理过程<br><span class="hljs-number">1</span>. 监控节点 (通过配置文件获取所有节点信息)<br>   系统,网络,SSH连接性<br>   主从状态,重点是主库<br><br><span class="hljs-number">2</span>. 选主<br>(<span class="hljs-number">1</span>) 如果判断从库(position或者GTID),数据有差异,最接近于<span class="hljs-literal">Master</span>的<span class="hljs-literal">slave</span>,成为备选主<br>(<span class="hljs-number">2</span>) 如果判断从库(position或者GTID),数据一致,按照配置文件顺序,选主.<br>(<span class="hljs-number">3</span>) 如果设定有权重(<span class="hljs-attr">candidate_master=</span><span class="hljs-number">1</span>),按照权重强制指定备选主.<br>    <span class="hljs-number">1</span>. 默认情况下如果一个<span class="hljs-literal">slave</span>落后<span class="hljs-keyword">master</span> <span class="hljs-title">100M</span>的relay logs的话，即使有权重,也会失效.<br>    <span class="hljs-number">2</span>. 如果<span class="hljs-attr">check_repl_delay=</span><span class="hljs-number">0</span>的化,即使落后很多日志,也强制选择其为备选主<br><span class="hljs-number">3</span>. 数据补偿<br>(<span class="hljs-number">1</span>) 当SSH能连接,从库对比主库GTID 或者position号,立即将二进制日志保存至各个从节点并且应用(save_binary_logs )<br>(<span class="hljs-number">2</span>) 当SSH不能连接, 对比从库之间的relaylog的差异(apply_diff_relay_logs) <br><span class="hljs-number">4</span>. Failover<br>将备选主进行身份切换,对外提供服务<br>其余从库和新主库确认新的主从关系<br><span class="hljs-number">5</span>. 应用透明(VIP)<br>MHA自带<br><span class="hljs-number">6</span>. 故障切换通知(send_reprt)<br><span class="hljs-number">7</span>. 二次数据补偿(binlog_server)<br></code></pre></td></tr></table></figure><h4 id="软件包构成"><a href="#软件包构成" class="headerlink" title="软件包构成"></a>软件包构成</h4><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs autohotkey">Manager工具包主要包括以下几个工具：<br>masterh<span class="hljs-built_in">a_manger</span>             启动MHA的脚本<br>masterh<span class="hljs-built_in">a_stop</span>               关闭Manager<br>masterh<span class="hljs-built_in">a_check</span>_ssh          检查MHA的SSH配置状况 <br>masterh<span class="hljs-built_in">a_check</span>_repl         检查MySQL复制状况 <br>masterh<span class="hljs-built_in">a_master</span>_monitor     检测master是否宕机 <br>masterh<span class="hljs-built_in">a_check</span>_status       检测当前MHA运行状态 <br>masterh<span class="hljs-built_in">a_master</span>_switch      控制故障转移（自动或者手动）<br>masterh<span class="hljs-built_in">a_conf</span>_host          添加或删除配置的server信息<br><br>Node工具包主要包括以下几个工具：<br>这些工具通常由MHA Manager的脚本触发，无需人为操作<br>save_binary_logs            保存和复制master的二进制日志 <br>apply_diff_relay_logs       识别差异的中继日志事件并将其差异的事件应用于其他的<br>purge_relay_logs            清除中继日志（不会阻塞SQL线程）<br></code></pre></td></tr></table></figure><h3 id="搭建"><a href="#搭建" class="headerlink" title="搭建"></a>搭建</h3><h4 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h4><table><thead><tr><th>主库</th><th>从库1</th><th>从库2</th><th>MySQL版本</th></tr></thead><tbody><tr><td>192.168.177.200</td><td>192.168.177.201</td><td>192.168.177.202</td><td>5.7.41</td></tr><tr><td>node</td><td>node</td><td>node、manager、binlogserver</td><td></td></tr></tbody></table><h4 id="配置关键程序软链接"><a href="#配置关键程序软链接" class="headerlink" title="配置关键程序软链接"></a>配置关键程序软链接</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">ln -s <span class="hljs-regexp">/web/</span>soft<span class="hljs-regexp">/mysql/</span>bin<span class="hljs-regexp">/mysqlbinlog    /u</span>sr<span class="hljs-regexp">/bin/my</span>sqlbinlog<br>ln -s <span class="hljs-regexp">/web/</span>soft<span class="hljs-regexp">/mysql/</span>bin<span class="hljs-regexp">/mysql          /u</span>sr<span class="hljs-regexp">/bin/my</span>sql<br></code></pre></td></tr></table></figure><p>一主两从开启GTID</p><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs accesslog">主库：<br><span class="hljs-number">192.168.177.200</span>    node<br>从库：<br><span class="hljs-number">192.168.177.201</span>    node  <br><span class="hljs-number">192.168.177.202</span>    node manager<br></code></pre></td></tr></table></figure><h4 id="配置各节点互信"><a href="#配置各节点互信" class="headerlink" title="配置各节点互信"></a>配置各节点互信</h4><p>主</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">rm</span> -rf /root/.ssh <br>ssh-keygen<br><span class="hljs-built_in">cd</span> /root/.ssh <br><span class="hljs-built_in">mv</span> id_rsa.pub authorized_keys<br>scp -r /root/.ssh 192.168.177.201:/root <br>scp -r /root/.ssh 192.168.177.202:/root<br></code></pre></td></tr></table></figure><h5 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h5><p>主</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">ssh</span> <span class="hljs-number">192.168.177.200</span> date<br>ssh <span class="hljs-number">192.168.177.201</span> date<br>ssh <span class="hljs-number">192.168.177.202</span> date<br></code></pre></td></tr></table></figure><p>从1</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">ssh</span> <span class="hljs-number">192.168.177.200</span> date<br>ssh <span class="hljs-number">192.168.177.201</span> date<br>ssh <span class="hljs-number">192.168.177.202</span> date<br></code></pre></td></tr></table></figure><p>从2</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">ssh</span> <span class="hljs-number">192.168.177.200</span> date<br>ssh <span class="hljs-number">192.168.177.201</span> date<br>ssh <span class="hljs-number">192.168.177.202</span> date<br></code></pre></td></tr></table></figure><h3 id="安装软件"><a href="#安装软件" class="headerlink" title="安装软件"></a>安装软件</h3><h4 id="所有节点"><a href="#所有节点" class="headerlink" title="所有节点"></a>所有节点</h4><p>下载MHA软件</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/yoshinorim/m</span>ha4mysql-manager<span class="hljs-regexp">/wiki/</span>Downloads<br></code></pre></td></tr></table></figure><p><img src="/2024/10/18/MHA%E9%AB%98%E5%8F%AF%E7%94%A8+Atlas%E8%AF%BB%E5%86%99%E5%88%86%E7%A6%BB/image-20241016150436973.png"></p><figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sas">node:<br>http://www.mysql.gr.jp/frame/modules/bwiki/<span class="hljs-keyword">index</span>.php?plugin=attach<span class="hljs-variable">&amp;pcmd</span>=open<span class="hljs-variable">&amp;file</span>=mha4mysql-node-0.56-0.el6.noarch.rpm<span class="hljs-variable">&amp;refer</span>=matsunobu<br>manager:<br>http://www.mysql.gr.jp/frame/modules/bwiki/<span class="hljs-keyword">index</span>.php?plugin=attach<span class="hljs-variable">&amp;pcmd</span>=open<span class="hljs-variable">&amp;file</span>=mha4mysql-manager-0.56-0.el6.noarch.rpm<span class="hljs-variable">&amp;refer</span>=matsunobu<br></code></pre></td></tr></table></figure><p>Node软件安装</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">yum</span> install perl-DBD-MySQL -y<br><span class="hljs-attribute">rpm</span> -ivh mha4mysql-node-<span class="hljs-number">0</span>.<span class="hljs-number">56</span>-<span class="hljs-number">0</span>.el6.noarch.rpm<br></code></pre></td></tr></table></figure><h4 id="主库"><a href="#主库" class="headerlink" title="主库"></a>主库</h4><p>创建MHA专用用户</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">GRANT</span> <span class="hljs-keyword">ALL</span> <span class="hljs-keyword">PRIVILEGES</span> <span class="hljs-keyword">ON</span> *.* <span class="hljs-keyword">TO</span> <span class="hljs-string">&#x27;mha&#x27;</span>@<span class="hljs-string">&#x27;192.168.177.%&#x27;</span> IDENTIFIED <span class="hljs-keyword">BY</span> <span class="hljs-string">&#x27;123456&#x27;</span>;<br>flush <span class="hljs-keyword">privileges</span>;<br><br>创建好用户后三个节点查询用户是否创建成功：<br><span class="hljs-keyword">select</span> <span class="hljs-keyword">user</span>,host <span class="hljs-keyword">from</span> mysql.<span class="hljs-keyword">user</span>;<br></code></pre></td></tr></table></figure><h4 id="从库2"><a href="#从库2" class="headerlink" title="从库2"></a>从库2</h4><p>Manager软件安装</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs vim">yum install -<span class="hljs-keyword">y</span> <span class="hljs-keyword">perl</span>-Config-Tiny epel-release <span class="hljs-keyword">perl</span>-Log-Dispatch <span class="hljs-keyword">perl</span>-Parallel-ForkManager <span class="hljs-keyword">perl</span>-Time-HiRes<br>rpm -ivh mha4mysql-manager-<span class="hljs-number">0.56</span>-<span class="hljs-number">0</span>.el6.noarch.rpm<br></code></pre></td></tr></table></figure><p>Manager配置</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs routeros">创建配置文件目录<br>mkdir -p /etc/mha/<br>创建日志目录<br>mkdir -p /web/logs/mysql/mha/<br>编辑mha配置文件<br>vim /etc/mha/mha.cnf<br><br>[server default]<br><span class="hljs-comment">#Manager工作日志</span><br><span class="hljs-attribute">manager_log</span>=/web/logs/mysql/mha/manager<br><span class="hljs-comment">#存放日志位置</span><br><span class="hljs-attribute">manager_workdir</span>=/web/logs/mysql/mha <br><span class="hljs-comment">#主库二进制日志位置</span><br><span class="hljs-attribute">master_binlog_dir</span>=/web/logs/mysql/binlog/   <br><span class="hljs-attribute">user</span>=mha                                   <br><span class="hljs-attribute">password</span>=123456<br><span class="hljs-comment">#探测节点状态时间间隔(s)探测3次</span><br><span class="hljs-attribute">ping_interval</span>=2<br><span class="hljs-attribute">repl_user</span>=repl<br><span class="hljs-attribute">repl_password</span>=123456<br><span class="hljs-attribute">ssh_user</span>=root                               <br>[server1]                                   <br><span class="hljs-attribute">hostname</span>=192.168.177.200<br><span class="hljs-attribute">port</span>=3306                                  <br>[server2]            <br><span class="hljs-attribute">hostname</span>=192.168.177.201<br><span class="hljs-attribute">port</span>=3306<br>[server3]<br><span class="hljs-attribute">hostname</span>=192.168.177.202<br><span class="hljs-attribute">port</span>=3306<br></code></pre></td></tr></table></figure><p>额外参数</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs routeros">说明：<br>主库宕机谁来接管？<br>1. 所有从节点日志都是一致的，默认会以配置文件的顺序去选择一个新主。<br>2. 从节点日志不一致，自动选择最接近于主库的从库<br>3. 如果对于某节点设定了权重（<span class="hljs-attribute">candidate_master</span>=1），权重节点会优先选择。<br>但是此节点日志量落后主库100M日志的话，也不会被选择。可以配合<span class="hljs-attribute">check_repl_delay</span>=0，关闭日志量的检查，强制选择候选节点。<br><br><span class="hljs-comment">#设置监控逐鹿，发送ping包的时间间隔，尝试三次没有回应的时候自动进行failover</span><br><span class="hljs-attribute">ping_interval</span>=2<br><span class="hljs-comment">#设置候选master，设置该参数后，发生主从切换以后将会将此库提升为主库即使这个主库不是集群中事件最新的</span><br><span class="hljs-attribute">canditate_master</span>=1<br><span class="hljs-comment">#默认情况下如果一个slave落后master 100M的relay-logs的话，MHA将不会选择该slave作为一个新的master，因为对于这个slave的恢复需要花费很长时间，通过设置check_repl_delay=0,MHA触发切换在选择一个新的master的时候将会忽略复制延时，这个参数对于设置了candidate_master=1的主机非常有用，因为这个候选主在切换的过程中一定是新的master.</span><br><span class="hljs-attribute">check_repl_delay</span>=0<br></code></pre></td></tr></table></figure><p>互信检查</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs routeros">masterha_check_ssh  <span class="hljs-attribute">--conf</span>=/etc/mha/mha.cnf<br><br>[root@localhost mha]# masterha_check_ssh  <span class="hljs-attribute">--conf</span>=/etc/mha/mha.cnf<br>Wed Oct 16 15:36:56 2024 - [<span class="hljs-built_in">warning</span>] Global configuration file /etc/masterha_default.cnf <span class="hljs-keyword">not</span> found. Skipping.<br>Wed Oct 16 15:36:56 2024 - [<span class="hljs-built_in">info</span>] Reading application<span class="hljs-built_in"> default </span>configuration <span class="hljs-keyword">from</span> /etc/mha/mha.cnf<span class="hljs-built_in">..</span><br>Wed Oct 16 15:36:56 2024 - [<span class="hljs-built_in">info</span>] Reading<span class="hljs-built_in"> server </span>configuration <span class="hljs-keyword">from</span> /etc/mha/mha.cnf<span class="hljs-built_in">..</span><br>Wed Oct 16 15:36:56 2024 - [<span class="hljs-built_in">info</span>] Starting SSH<span class="hljs-built_in"> connection </span>tests<span class="hljs-built_in">..</span><br>Wed Oct 16 15:36:58 2024 - [<span class="hljs-built_in">debug</span>] <br>Wed Oct 16 15:36:56 2024 - [<span class="hljs-built_in">debug</span>]  Connecting via SSH <span class="hljs-keyword">from</span> root@192.168.177.200(192.168.177.200:22) <span class="hljs-keyword">to</span> root@192.168.177.201(192.168.177.201:22)<span class="hljs-built_in">..</span><br>Wed Oct 16 15:36:57 2024 - [<span class="hljs-built_in">debug</span>]   ok.<br>Wed Oct 16 15:36:57 2024 - [<span class="hljs-built_in">debug</span>]  Connecting via SSH <span class="hljs-keyword">from</span> root@192.168.177.200(192.168.177.200:22) <span class="hljs-keyword">to</span> root@192.168.177.202(192.168.177.202:22)<span class="hljs-built_in">..</span><br>Wed Oct 16 15:36:58 2024 - [<span class="hljs-built_in">debug</span>]   ok.<br>Wed Oct 16 15:36:59 2024 - [<span class="hljs-built_in">debug</span>] <br>Wed Oct 16 15:36:57 2024 - [<span class="hljs-built_in">debug</span>]  Connecting via SSH <span class="hljs-keyword">from</span> root@192.168.177.202(192.168.177.202:22) <span class="hljs-keyword">to</span> root@192.168.177.200(192.168.177.200:22)<span class="hljs-built_in">..</span><br>Wed Oct 16 15:36:58 2024 - [<span class="hljs-built_in">debug</span>]   ok.<br>Wed Oct 16 15:36:58 2024 - [<span class="hljs-built_in">debug</span>]  Connecting via SSH <span class="hljs-keyword">from</span> root@192.168.177.202(192.168.177.202:22) <span class="hljs-keyword">to</span> root@192.168.177.201(192.168.177.201:22)<span class="hljs-built_in">..</span><br>Wed Oct 16 15:36:59 2024 - [<span class="hljs-built_in">debug</span>]   ok.<br>Wed Oct 16 15:36:59 2024 - [<span class="hljs-built_in">debug</span>] <br>Wed Oct 16 15:36:56 2024 - [<span class="hljs-built_in">debug</span>]  Connecting via SSH <span class="hljs-keyword">from</span> root@192.168.177.201(192.168.177.201:22) <span class="hljs-keyword">to</span> root@192.168.177.200(192.168.177.200:22)<span class="hljs-built_in">..</span><br>Wed Oct 16 15:36:57 2024 - [<span class="hljs-built_in">debug</span>]   ok.<br>Wed Oct 16 15:36:57 2024 - [<span class="hljs-built_in">debug</span>]  Connecting via SSH <span class="hljs-keyword">from</span> root@192.168.177.201(192.168.177.201:22) <span class="hljs-keyword">to</span> root@192.168.177.202(192.168.177.202:22)<span class="hljs-built_in">..</span><br>Wed Oct 16 15:36:58 2024 - [<span class="hljs-built_in">debug</span>]   ok.<br>Wed Oct 16 15:36:59 2024 - [<span class="hljs-built_in">info</span>] All SSH<span class="hljs-built_in"> connection </span>tests passed successfully.[root@localhost mha]# masterha_check_ssh  <span class="hljs-attribute">--conf</span>=/etc/mha/mha.cnf<br>Wed Oct 16 15:47:19 2024 - [<span class="hljs-built_in">warning</span>] Global configuration file /etc/masterha_default.cnf <span class="hljs-keyword">not</span> found. Skipping.<br>Wed Oct 16 15:47:19 2024 - [<span class="hljs-built_in">info</span>] Reading application<span class="hljs-built_in"> default </span>configuration <span class="hljs-keyword">from</span> /etc/mha/mha.cnf<span class="hljs-built_in">..</span><br>Wed Oct 16 15:47:19 2024 - [<span class="hljs-built_in">info</span>] Reading<span class="hljs-built_in"> server </span>configuration <span class="hljs-keyword">from</span> /etc/mha/mha.cnf<span class="hljs-built_in">..</span><br>Wed Oct 16 15:47:19 2024 - [<span class="hljs-built_in">info</span>] Starting SSH<span class="hljs-built_in"> connection </span>tests<span class="hljs-built_in">..</span><br>Wed Oct 16 15:47:22 2024 - [<span class="hljs-built_in">debug</span>] <br>Wed Oct 16 15:47:19 2024 - [<span class="hljs-built_in">debug</span>]  Connecting via SSH <span class="hljs-keyword">from</span> root@192.168.177.200(192.168.177.200:22) <span class="hljs-keyword">to</span> root@192.168.177.201(192.168.177.201:22)<span class="hljs-built_in">..</span><br>Wed Oct 16 15:47:20 2024 - [<span class="hljs-built_in">debug</span>]   ok.<br>Wed Oct 16 15:47:20 2024 - [<span class="hljs-built_in">debug</span>]  Connecting via SSH <span class="hljs-keyword">from</span> root@192.168.177.200(192.168.177.200:22) <span class="hljs-keyword">to</span> root@192.168.177.202(192.168.177.202:22)<span class="hljs-built_in">..</span><br>Wed Oct 16 15:47:22 2024 - [<span class="hljs-built_in">debug</span>]   ok.<br>Wed Oct 16 15:47:23 2024 - [<span class="hljs-built_in">debug</span>] <br>Wed Oct 16 15:47:20 2024 - [<span class="hljs-built_in">debug</span>]  Connecting via SSH <span class="hljs-keyword">from</span> root@192.168.177.201(192.168.177.201:22) <span class="hljs-keyword">to</span> root@192.168.177.200(192.168.177.200:22)<span class="hljs-built_in">..</span><br>Wed Oct 16 15:47:21 2024 - [<span class="hljs-built_in">debug</span>]   ok.<br>Wed Oct 16 15:47:21 2024 - [<span class="hljs-built_in">debug</span>]  Connecting via SSH <span class="hljs-keyword">from</span> root@192.168.177.201(192.168.177.201:22) <span class="hljs-keyword">to</span> root@192.168.177.202(192.168.177.202:22)<span class="hljs-built_in">..</span><br>Wed Oct 16 15:47:22 2024 - [<span class="hljs-built_in">debug</span>]   ok.<br>Wed Oct 16 15:47:23 2024 - [<span class="hljs-built_in">debug</span>] <br>Wed Oct 16 15:47:20 2024 - [<span class="hljs-built_in">debug</span>]  Connecting via SSH <span class="hljs-keyword">from</span> root@192.168.177.202(192.168.177.202:22) <span class="hljs-keyword">to</span> root@192.168.177.200(192.168.177.200:22)<span class="hljs-built_in">..</span><br>Wed Oct 16 15:47:21 2024 - [<span class="hljs-built_in">debug</span>]   ok.<br>Wed Oct 16 15:47:21 2024 - [<span class="hljs-built_in">debug</span>]  Connecting via SSH <span class="hljs-keyword">from</span> root@192.168.177.202(192.168.177.202:22) <span class="hljs-keyword">to</span> root@192.168.177.201(192.168.177.201:22)<span class="hljs-built_in">..</span><br>Wed Oct 16 15:47:22 2024 - [<span class="hljs-built_in">debug</span>]   ok.<br>Wed Oct 16 15:47:23 2024 - [<span class="hljs-built_in">info</span>] All SSH<span class="hljs-built_in"> connection </span>tests passed successfully.<br></code></pre></td></tr></table></figure><p>主从状态检查</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs routeros"> masterha_check_repl  <span class="hljs-attribute">--conf</span>=/etc/mha/mha.cnf<br> <br>[root@localhost mha]# masterha_check_repl  <span class="hljs-attribute">--conf</span>=/etc/mha/mha.cnf<br>Wed Oct 16 15:46:48 2024 - [<span class="hljs-built_in">warning</span>] Global configuration file /etc/masterha_default.cnf <span class="hljs-keyword">not</span> found. Skipping.<br>Wed Oct 16 15:46:48 2024 - [<span class="hljs-built_in">info</span>] Reading application<span class="hljs-built_in"> default </span>configuration <span class="hljs-keyword">from</span> /etc/mha/mha.cnf<span class="hljs-built_in">..</span><br>Wed Oct 16 15:46:48 2024 - [<span class="hljs-built_in">info</span>] Reading<span class="hljs-built_in"> server </span>configuration <span class="hljs-keyword">from</span> /etc/mha/mha.cnf<span class="hljs-built_in">..</span><br>Wed Oct 16 15:46:48 2024 - [<span class="hljs-built_in">info</span>] MHA::MasterMonitor version 0.56.<br>Wed Oct 16 15:46:49 2024 - [<span class="hljs-built_in">info</span>] GTID failover mode = 1<br>Wed Oct 16 15:46:49 2024 - [<span class="hljs-built_in">info</span>] Dead Servers:<br>Wed Oct 16 15:46:49 2024 - [<span class="hljs-built_in">info</span>] Alive Servers:<br>Wed Oct 16 15:46:49 2024 - [<span class="hljs-built_in">info</span>]   192.168.177.200(192.168.177.200:3306)<br>Wed Oct 16 15:46:49 2024 - [<span class="hljs-built_in">info</span>]   192.168.177.201(192.168.177.201:3306)<br>Wed Oct 16 15:46:49 2024 - [<span class="hljs-built_in">info</span>]   192.168.177.202(192.168.177.202:3306)<br>Wed Oct 16 15:46:49 2024 - [<span class="hljs-built_in">info</span>] Alive Slaves:<br>Wed Oct 16 15:46:49 2024 - [<span class="hljs-built_in">info</span>]   192.168.177.201(192.168.177.201:3306)  <span class="hljs-attribute">Version</span>=5.7.41-log (oldest major version between slaves) log-bin:enabled<br>Wed Oct 16 15:46:49 2024 - [<span class="hljs-built_in">info</span>]     GTID ON<br>Wed Oct 16 15:46:49 2024 - [<span class="hljs-built_in">info</span>]     Replicating <span class="hljs-keyword">from</span> 192.168.177.200(192.168.177.200:3306)<br>Wed Oct 16 15:46:49 2024 - [<span class="hljs-built_in">info</span>]   192.168.177.202(192.168.177.202:3306)  <span class="hljs-attribute">Version</span>=5.7.41-log (oldest major version between slaves) log-bin:enabled<br>Wed Oct 16 15:46:49 2024 - [<span class="hljs-built_in">info</span>]     GTID ON<br>Wed Oct 16 15:46:49 2024 - [<span class="hljs-built_in">info</span>]     Replicating <span class="hljs-keyword">from</span> 192.168.177.200(192.168.177.200:3306)<br>Wed Oct 16 15:46:49 2024 - [<span class="hljs-built_in">info</span>] Current Alive Master: 192.168.177.200(192.168.177.200:3306)<br>Wed Oct 16 15:46:49 2024 - [<span class="hljs-built_in">info</span>] Checking slave configurations<span class="hljs-built_in">..</span><br>Wed Oct 16 15:46:49 2024 - [<span class="hljs-built_in">info</span>]  <span class="hljs-attribute">read_only</span>=1 is <span class="hljs-keyword">not</span> <span class="hljs-built_in">set</span> on slave 192.168.177.201(192.168.177.201:3306).<br>Wed Oct 16 15:46:49 2024 - [<span class="hljs-built_in">info</span>]  <span class="hljs-attribute">read_only</span>=1 is <span class="hljs-keyword">not</span> <span class="hljs-built_in">set</span> on slave 192.168.177.202(192.168.177.202:3306).<br>Wed Oct 16 15:46:49 2024 - [<span class="hljs-built_in">info</span>] Checking replication filtering settings<span class="hljs-built_in">..</span><br>Wed Oct 16 15:46:49 2024 - [<span class="hljs-built_in">info</span>]  binlog_do_db= , binlog_ignore_db= <br>Wed Oct 16 15:46:49 2024 - [<span class="hljs-built_in">info</span>]  Replication filtering check ok.<br>Wed Oct 16 15:46:49 2024 - [<span class="hljs-built_in">info</span>] GTID (with auto-pos) is supported. Skipping all SSH <span class="hljs-keyword">and</span> Node package checking.<br>Wed Oct 16 15:46:49 2024 - [<span class="hljs-built_in">info</span>] Checking SSH publickey authentication<span class="hljs-built_in"> settings </span>on the current master<span class="hljs-built_in">..</span><br>Wed Oct 16 15:46:50 2024 - [<span class="hljs-built_in">info</span>] HealthCheck: SSH <span class="hljs-keyword">to</span> 192.168.177.200 is reachable.<br>Wed Oct 16 15:46:50 2024 - [<span class="hljs-built_in">info</span>] <br>192.168.177.200(192.168.177.200:3306) (current master)<br> +--192.168.177.201(192.168.177.201:3306)<br> +--192.168.177.202(192.168.177.202:3306)<br><br>Wed Oct 16 15:46:50 2024 - [<span class="hljs-built_in">info</span>] Checking replication<span class="hljs-built_in"> health </span>on 192.168.177.201<span class="hljs-built_in">..</span><br>Wed Oct 16 15:46:50 2024 - [<span class="hljs-built_in">info</span>]  ok.<br>Wed Oct 16 15:46:50 2024 - [<span class="hljs-built_in">info</span>] Checking replication<span class="hljs-built_in"> health </span>on 192.168.177.202<span class="hljs-built_in">..</span><br>Wed Oct 16 15:46:50 2024 - [<span class="hljs-built_in">info</span>]  ok.<br>Wed Oct 16 15:46:50 2024 - [<span class="hljs-built_in">warning</span>] master_ip_failover_script is <span class="hljs-keyword">not</span> defined.<br>Wed Oct 16 15:46:50 2024 - [<span class="hljs-built_in">warning</span>] shutdown_script is <span class="hljs-keyword">not</span> defined.<br>Wed Oct 16 15:46:50 2024 - [<span class="hljs-built_in">info</span>] Got exit code 0 (<span class="hljs-keyword">Not</span> master dead).<br><br>MySQL Replication<span class="hljs-built_in"> Health </span>is OK.<br></code></pre></td></tr></table></figure><p>开启MHA</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arcade">nohup masterha_manager --conf=<span class="hljs-regexp">/etc/m</span>ha/mha.cnf --remove_dead_master_conf --ignore_last_failover  &lt; <span class="hljs-regexp">/dev/</span><span class="hljs-literal">null</span>&gt; <span class="hljs-regexp">/web/</span>logs/mysql/mha/manager.<span class="hljs-built_in">log</span> <span class="hljs-number">2</span>&gt;&amp;<span class="hljs-number">1</span> &amp;<br></code></pre></td></tr></table></figure><p>查看MHA工作状态</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">masterha_check_status --conf=/etc/mha/mha.cnf<br><br>[root@localhost mha]# masterha<span class="hljs-emphasis">_check_status --conf=/etc/mha/mha.cnf</span><br><span class="hljs-emphasis">mha (pid:7022) is running(0:PING_</span>OK), master:192.168.177.200<br><br>[root@localhost mha]# mysql -umha -p123456 -h 192.168.177.200 -e &quot;show variables like <span class="hljs-emphasis">&#x27;server_id&#x27;</span>&quot;<br>mysql: [Warning] Using a password on the command line interface can be insecure.<br><span class="hljs-code">+---------------+</span>-------+<br><span class="hljs-section">| Variable_name | Value |</span><br><span class="hljs-section">+---------------+-------+</span><br><span class="hljs-section">| server_id     | 1     |</span><br><span class="hljs-section">+---------------+-------+</span><br>[root@localhost mha]# mysql -umha -p123456 -h 192.168.177.201 -e &quot;show variables like <span class="hljs-emphasis">&#x27;server_id&#x27;</span>&quot;<br>mysql: [Warning] Using a password on the command line interface can be insecure.<br><span class="hljs-code">+---------------+</span>-------+<br><span class="hljs-section">| Variable_name | Value |</span><br><span class="hljs-section">+---------------+-------+</span><br><span class="hljs-section">| server_id     | 2     |</span><br><span class="hljs-section">+---------------+-------+</span><br>[root@localhost mha]# mysql -umha -p123456 -h 192.168.177.202 -e &quot;show variables like <span class="hljs-emphasis">&#x27;server_id&#x27;</span>&quot;<br>mysql: [Warning] Using a password on the command line interface can be insecure.<br><span class="hljs-code">+---------------+</span>-------+<br><span class="hljs-section">| Variable_name | Value |</span><br><span class="hljs-section">+---------------+-------+</span><br><span class="hljs-section">| server_id     | 3     |</span><br><span class="hljs-section">+---------------+-------+</span><br></code></pre></td></tr></table></figure><h3 id="故障模拟及处理"><a href="#故障模拟及处理" class="headerlink" title="故障模拟及处理"></a>故障模拟及处理</h3><p>停主库</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-regexp">/etc/</span><span class="hljs-keyword">init</span>.d<span class="hljs-operator">/</span>mysql stop<br><br>观察manager的日志 tail <span class="hljs-operator">-</span>100f <span class="hljs-regexp">/web/</span>logs<span class="hljs-regexp">/mysql/</span>mha<span class="hljs-operator">/</span>manager.log<br>末尾必须显示successfully，才算正常切换成功<span class="hljs-operator">。</span>  <br></code></pre></td></tr></table></figure><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs routeros">root@localhost mha]# cat /etc/mha/mha.cnf <br>[server default]<br><span class="hljs-attribute">manager_log</span>=/web/logs/mysql/mha/manager<br><span class="hljs-attribute">manager_workdir</span>=/web/logs/mysql/mha<br><span class="hljs-attribute">master_binlog_dir</span>=/web/logs/mysql/binlog/<br><span class="hljs-attribute">password</span>=123456<br><span class="hljs-attribute">ping_interval</span>=2<br><span class="hljs-attribute">repl_password</span>=123456<br><span class="hljs-attribute">repl_user</span>=repl<br><span class="hljs-attribute">ssh_user</span>=root<br><span class="hljs-attribute">user</span>=mha<br><br>[server2]<br><span class="hljs-attribute">hostname</span>=192.168.177.201<br><span class="hljs-attribute">port</span>=3306<br><br>[server3]<br><span class="hljs-attribute">hostname</span>=192.168.177.202<br><span class="hljs-attribute">port</span>=3306<br><br>mysql&gt; show slave status \G<br>*************************** 1. row ***************************<br>               Slave_IO_State: Waiting <span class="hljs-keyword">for</span> master <span class="hljs-keyword">to</span> send event<br>                  Master_Host: 192.168.177.201<br>                  Master_User: repl<br>                  Master_Port: 3306<br>                Connect_Retry: 60<br>              Master_Log_File: mysql-bin.000005<br>          Read_Master_Log_Pos: 1713<br>               Relay_Log_File: localhost-relay-bin.000002<br>                Relay_Log_Pos: 414<br>        Relay_Master_Log_File: mysql-bin.000005<br>             Slave_IO_Running: <span class="hljs-literal">Yes</span><br>            Slave_SQL_Running: <span class="hljs-literal">Yes</span><br>            <br>[root@localhost mha]# tail -f /web/logs/mysql/mha/manager<br>Master 192.168.177.200(192.168.177.200:3306) is down!<br><br>Check MHA Manager logs at localhost.localdomain:/web/logs/mysql/mha/manager <span class="hljs-keyword">for</span> details.<br><br>Started automated(non-interactive) failover.<br>Selected 192.168.177.201(192.168.177.201:3306) as a new master.<br>192.168.177.201(192.168.177.201:3306): OK: Applying all logs succeeded.<br>192.168.177.202(192.168.177.202:3306): OK: Slave started, replicating <span class="hljs-keyword">from</span> 192.168.177.201(192.168.177.201:3306)<br>192.168.177.201(192.168.177.201:3306): Resetting slave <span class="hljs-built_in">info</span> succeeded.<br>Master failover <span class="hljs-keyword">to</span> 192.168.177.201(192.168.177.201:3306) completed successfully<br></code></pre></td></tr></table></figure><p>恢复主库</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-regexp">/etc/</span><span class="hljs-keyword">init</span>.d<span class="hljs-operator">/</span>mysql start<br></code></pre></td></tr></table></figure><p>恢复主从结构(主库执行)</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros">tail -200f /web/logs/mysql/mha/manager  可以查看到构建主从的语句<br>CHANGE MASTER <span class="hljs-keyword">TO</span> <span class="hljs-attribute">MASTER_HOST</span>=<span class="hljs-string">&#x27;192.168.177.201&#x27;</span>, <span class="hljs-attribute">MASTER_PORT</span>=3306, <span class="hljs-attribute">MASTER_AUTO_POSITION</span>=1, <span class="hljs-attribute">MASTER_USER</span>=<span class="hljs-string">&#x27;repl&#x27;</span>, <span class="hljs-attribute">MASTER_PASSWORD</span>=<span class="hljs-string">&#x27;123456&#x27;</span>;<br></code></pre></td></tr></table></figure><p>恢复Manager配置文件</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs abnf">vim /etc/mha/mha.cnf <br>[server1]                                   <br><span class="hljs-attribute">hostname</span><span class="hljs-operator">=</span><span class="hljs-number">192.168</span>.<span class="hljs-number">177.200</span><br><span class="hljs-attribute">port</span><span class="hljs-operator">=</span><span class="hljs-number">3306</span> <br></code></pre></td></tr></table></figure><p>启动MHA</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arcade">nohup masterha_manager --conf=<span class="hljs-regexp">/etc/m</span>ha/mha.cnf --remove_dead_master_conf --ignore_last_failover  &lt; <span class="hljs-regexp">/dev/</span><span class="hljs-literal">null</span>&gt; <span class="hljs-regexp">/web/</span>logs/mysql/mha/manager.<span class="hljs-built_in">log</span> <span class="hljs-number">2</span>&gt;&amp;<span class="hljs-number">1</span> &amp;<br></code></pre></td></tr></table></figure><h3 id="主从库已变更"><a href="#主从库已变更" class="headerlink" title="主从库已变更"></a>主从库已变更</h3><table><thead><tr><th>从库1</th><th>主库</th><th>从库2</th><th>MySQL版本</th></tr></thead><tbody><tr><td>192.168.177.200</td><td>192.168.177.201</td><td>192.168.177.202</td><td>5.7.41</td></tr></tbody></table><h3 id="MHA-vip配置"><a href="#MHA-vip配置" class="headerlink" title="MHA vip配置"></a>MHA vip配置</h3><p>参数</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs crystal">master_ip_failover_script=<span class="hljs-regexp">/etc/mha</span><span class="hljs-regexp">/master_ip_failover</span><br><span class="hljs-regexp">注意：/etc</span><span class="hljs-regexp">/mha/master</span>_ip_failover，必须事先准备好<br></code></pre></td></tr></table></figure><p>添加脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim  /etc/mha/master_ip_failover<br><br><span class="hljs-built_in">chmod</span> +x /etc/mha/master_ip_failover<br>dos2unix /etc/mha/master_ip_failover    转换中文字符<br></code></pre></td></tr></table></figure><p>vip漂移脚本</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><code class="hljs perl"><span class="hljs-comment">#!/usr/bin/env perl</span><br><br><span class="hljs-keyword">use</span> strict;<br><span class="hljs-keyword">use</span> warnings <span class="hljs-string">FATAL =&gt;</span> <span class="hljs-string">&#x27;all&#x27;</span>;<br><span class="hljs-keyword">use</span> Getopt::Long;<br><br><span class="hljs-keyword">my</span> (<br>    $command,          $ssh_user,        $orig_master_host, $orig_master_ip,<br>    $orig_master_port, $new_master_host, $new_master_ip,    $new_master_port<br>);<br><br><span class="hljs-keyword">my</span> $vip = <span class="hljs-string">&#x27;192.168.177.218/24&#x27;</span>;<br><span class="hljs-keyword">my</span> $key = <span class="hljs-string">&#x27;1&#x27;</span>;<br><span class="hljs-keyword">my</span> $ssh_start_vip = <span class="hljs-string">&quot;/sbin/ifconfig ens33:$key $vip&quot;</span>;<br><span class="hljs-keyword">my</span> $ssh_stop_vip = <span class="hljs-string">&quot;/sbin/ifconfig ens33:$key down&quot;</span>; <span class="hljs-comment"># 确保接口名称一致</span><br><br>GetOptions(<br>    <span class="hljs-string">&#x27;command=s&#x27;</span>          =&gt; \$command,<br>    <span class="hljs-string">&#x27;ssh_user=s&#x27;</span>         =&gt; \$ssh_user,<br>    <span class="hljs-string">&#x27;orig_master_host=s&#x27;</span> =&gt; \$orig_master_host,<br>    <span class="hljs-string">&#x27;orig_master_ip=s&#x27;</span>   =&gt; \$orig_master_ip,<br>    <span class="hljs-string">&#x27;orig_master_port=i&#x27;</span> =&gt; \$orig_master_port,<br>    <span class="hljs-string">&#x27;new_master_host=s&#x27;</span>  =&gt; \$new_master_host,<br>    <span class="hljs-string">&#x27;new_master_ip=s&#x27;</span>    =&gt; \$new_master_ip,<br>    <span class="hljs-string">&#x27;new_master_port=i&#x27;</span>  =&gt; \$new_master_port,<br>);<br><br><span class="hljs-keyword">exit</span> &amp;main();<br><br><span class="hljs-function"><span class="hljs-keyword">sub</span> <span class="hljs-title">main</span> </span>&#123;<br>    <span class="hljs-keyword">print</span> <span class="hljs-string">&quot;\n\nIN SCRIPT TEST====$ssh_stop_vip==$ssh_start_vip===\n\n&quot;</span>;<br>    <span class="hljs-keyword">print</span> <span class="hljs-string">&quot;\n\nIN Master_ip_failover_command:====$command===\n\n&quot;</span>;<br><br>    <span class="hljs-keyword">if</span> ( $command eq <span class="hljs-string">&quot;stop&quot;</span> || $command eq <span class="hljs-string">&quot;stopssh&quot;</span> ) &#123;<br>        <span class="hljs-keyword">my</span> $exit_code = <span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">eval</span> &#123;<br>            <span class="hljs-keyword">print</span> <span class="hljs-string">&quot;Disabling the VIP on old master: $orig_master_host \n&quot;</span>;<br>            stop_vip();<br>            $exit_code = <span class="hljs-number">0</span>;<br>        &#125;;<br>        <span class="hljs-keyword">if</span> ($@) &#123;<br>            <span class="hljs-keyword">warn</span> <span class="hljs-string">&quot;Got Error: $@\n&quot;</span>;<br>            <span class="hljs-keyword">exit</span> $exit_code;<br>        &#125;<br>        <span class="hljs-keyword">exit</span> $exit_code;<br>    &#125;<br>    <span class="hljs-keyword">elsif</span> ( $command eq <span class="hljs-string">&quot;start&quot;</span> ) &#123;<br>        <span class="hljs-keyword">my</span> $exit_code = <span class="hljs-number">10</span>;<br>        <span class="hljs-keyword">eval</span> &#123;<br>            <span class="hljs-keyword">print</span> <span class="hljs-string">&quot;Enabling the VIP - $vip on the new master - $new_master_host \n&quot;</span>;<br>            start_vip();<br>            $exit_code = <span class="hljs-number">0</span>;<br>        &#125;;<br>        <span class="hljs-keyword">if</span> ($@) &#123;<br>            <span class="hljs-keyword">warn</span> $@;<br>            <span class="hljs-keyword">exit</span> $exit_code;<br>        &#125;<br>        <span class="hljs-keyword">exit</span> $exit_code;<br>    &#125;<br>    <span class="hljs-keyword">elsif</span> ( $command eq <span class="hljs-string">&quot;status&quot;</span> ) &#123;<br>        <span class="hljs-keyword">print</span> <span class="hljs-string">&quot;Checking the Status of the script.. OK \n&quot;</span>;<br>        <span class="hljs-keyword">exit</span> <span class="hljs-number">0</span>;<br>    &#125;<br>    <span class="hljs-keyword">else</span> &#123;<br>        usage();<br>        <span class="hljs-keyword">exit</span> <span class="hljs-number">1</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">sub</span> <span class="hljs-title">start_vip</span> </span>&#123;<br>    <span class="hljs-keyword">my</span> $output = <span class="hljs-string">qx&#123;ssh $ssh_user\@$new_master_host &quot;$ssh_start_vip&quot;&#125;</span>;<br>    <span class="hljs-keyword">if</span> ($?) &#123;<br>        <span class="hljs-keyword">die</span> <span class="hljs-string">&quot;Failed to start VIP: $output&quot;</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">sub</span> <span class="hljs-title">stop_vip</span> </span>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span> <span class="hljs-keyword">unless</span> ($ssh_user);<br>    <span class="hljs-keyword">my</span> $output = <span class="hljs-string">qx&#123;ssh $ssh_user\@$orig_master_host &quot;$ssh_stop_vip&quot;&#125;</span>;<br>    <span class="hljs-keyword">if</span> ($?) &#123;<br>        <span class="hljs-keyword">die</span> <span class="hljs-string">&quot;Failed to stop VIP: $output&quot;</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">sub</span> <span class="hljs-title">usage</span> </span>&#123;<br>    <span class="hljs-keyword">print</span> <span class="hljs-string">&quot;Usage: master_ip_failover --command=start|stop|stopssh|status --orig_master_host=host --orig_master_ip=ip --orig_master_port=port --new_master_host=host --new_master_ip=ip --new_master_port=port\n&quot;</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>更改Manager配置文件 添加脚本</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs gradle">vim <span class="hljs-regexp">/etc/m</span>ha/mha.cnf<br>[server <span class="hljs-keyword">default</span>]<br>master_ip_failover_script=<span class="hljs-regexp">/etc/m</span>ha/master_ip_failover<br></code></pre></td></tr></table></figure><p>第一次配置vip时候，需要在主库手工生成vip</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs dns">手工在主库上绑定vip，注意一定要和配置文件中的ethN一致，eth33:<span class="hljs-number">1</span>(<span class="hljs-number">1</span>是key指定的值)<br>yum install net-tools -y                 #没有ifconfig命令执行<br>ifconfig ens<span class="hljs-number">33:1 192.168</span>.<span class="hljs-number">177.218/24</span><br>ip address add <span class="hljs-number">192.168.228.218</span>/<span class="hljs-number">24</span> dev ens33:<span class="hljs-number">1</span><br>ifconfig<br></code></pre></td></tr></table></figure><p>重启Manager</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs stylus">masterha_stop <span class="hljs-attr">--conf</span>=/etc/mha/mha<span class="hljs-selector-class">.cnf</span><br>nohup masterha_manager <span class="hljs-attr">--conf</span>=/etc/mha/mha<span class="hljs-selector-class">.cnf</span> <span class="hljs-attr">--remove_dead_master_conf</span> <span class="hljs-attr">--ignore_last_failover</span>  &lt; /dev/null&gt; /web/logs/mysql/mha/manager<span class="hljs-selector-class">.log</span> <span class="hljs-number">2</span>&gt;&amp;<span class="hljs-number">1</span> &amp;<br><br>检查状态<br>masterha_check_status <span class="hljs-attr">--conf</span>=/etc/mha/mha<span class="hljs-selector-class">.cnf</span><br>mha (pid:<span class="hljs-number">8652</span>) is <span class="hljs-built_in">running</span>(<span class="hljs-number">0</span>:PING_OK), master:<span class="hljs-number">192.168</span>.<span class="hljs-number">177.201</span><br></code></pre></td></tr></table></figure><h4 id="验证-1"><a href="#验证-1" class="headerlink" title="验证"></a>验证</h4><p>查看主库vip</p><p><img src="/2024/10/18/MHA%E9%AB%98%E5%8F%AF%E7%94%A8+Atlas%E8%AF%BB%E5%86%99%E5%88%86%E7%A6%BB/image-20241017113416352.png"></p><p>停止主库</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-regexp">/etc/</span><span class="hljs-keyword">init</span>.d<span class="hljs-operator">/</span>mysql stop<br></code></pre></td></tr></table></figure><p>查看主库vip及从库vip</p><p><img src="/2024/10/18/MHA%E9%AB%98%E5%8F%AF%E7%94%A8+Atlas%E8%AF%BB%E5%86%99%E5%88%86%E7%A6%BB/image-20241017113503674.png"></p><p><img src="/2024/10/18/MHA%E9%AB%98%E5%8F%AF%E7%94%A8+Atlas%E8%AF%BB%E5%86%99%E5%88%86%E7%A6%BB/image-20241017113517921.png"></p><p>恢复主库</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs routeros">启动<br>/etc/init.d/mysql stop<br>构建主从关系<br>CHANGE MASTER <span class="hljs-keyword">TO</span> <span class="hljs-attribute">MASTER_HOST</span>=<span class="hljs-string">&#x27;192.168.177.200&#x27;</span>, <span class="hljs-attribute">MASTER_PORT</span>=3306, <span class="hljs-attribute">MASTER_AUTO_POSITION</span>=1, <span class="hljs-attribute">MASTER_USER</span>=<span class="hljs-string">&#x27;repl&#x27;</span>, <span class="hljs-attribute">MASTER_PASSWORD</span>=<span class="hljs-string">&#x27;123456&#x27;</span>;<br>启动slave<br>start slave;<br></code></pre></td></tr></table></figure><p>启动Manager并查看状态</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs swift">[root<span class="hljs-meta">@localhost</span> mha]# nohup masterha_manager <span class="hljs-operator">--</span>conf<span class="hljs-operator">=/</span>etc<span class="hljs-regexp">/mha/</span>mha.cnf <span class="hljs-operator">--</span>remove_dead_master_conf <span class="hljs-operator">--</span>ignore_last_failover  <span class="hljs-operator">&lt;</span> <span class="hljs-regexp">/dev/</span>null<span class="hljs-operator">&gt;</span> <span class="hljs-regexp">/web/</span>logs<span class="hljs-regexp">/mysql/</span>mha<span class="hljs-operator">/</span>manager.log <span class="hljs-number">2</span><span class="hljs-operator">&gt;&amp;</span><span class="hljs-number">1</span> <span class="hljs-operator">&amp;</span><br>[<span class="hljs-number">1</span>] <span class="hljs-number">8652</span><br>[root<span class="hljs-meta">@localhost</span> mha]# masterha_check_status <span class="hljs-operator">--</span>conf<span class="hljs-operator">=/</span>etc<span class="hljs-regexp">/mha/</span>mha.cnf<br>mha (pid:<span class="hljs-number">8652</span>) <span class="hljs-keyword">is</span> running(<span class="hljs-number">0</span>:<span class="hljs-type">PING_OK</span>), master:<span class="hljs-number">192.168</span>.<span class="hljs-number">177.200</span><br></code></pre></td></tr></table></figure><h3 id="邮件提醒"><a href="#邮件提醒" class="headerlink" title="邮件提醒"></a>邮件提醒</h3><p>参数</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">report_script</span>=/etc/mha/mail<br></code></pre></td></tr></table></figure><p>Manager增加配置</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs gradle">mkdir -p <span class="hljs-regexp">/etc/m</span>ha<span class="hljs-regexp">/mail/</span><br>vim <span class="hljs-regexp">/etc/m</span>ha/mha.cnf<br>[server <span class="hljs-keyword">default</span>]<br>report_script=<span class="hljs-regexp">/etc/m</span>ha<span class="hljs-regexp">/mail/</span>send<br></code></pre></td></tr></table></figure><p>重启MHA</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stylus">masterha_stop <span class="hljs-attr">--conf</span>=/etc/mha/mha<span class="hljs-selector-class">.cnf</span><br>nohup masterha_manager <span class="hljs-attr">--conf</span>=/etc/mha/mha<span class="hljs-selector-class">.cnf</span> <span class="hljs-attr">--remove_dead_master_conf</span> <span class="hljs-attr">--ignore_last_failover</span>  &lt; /dev/null&gt; /web/logs/mysql/mha/manager<span class="hljs-selector-class">.log</span> <span class="hljs-number">2</span>&gt;&amp;<span class="hljs-number">1</span> &amp;<br></code></pre></td></tr></table></figure><h3 id="Binlog-Server"><a href="#Binlog-Server" class="headerlink" title="Binlog Server"></a>Binlog Server</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">避免主MHA连接不上主库，导致从库数据差异，数据丢失  需要配置额外服务器<br></code></pre></td></tr></table></figure><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs routeros">mkdir /web/data/mysql/binserver<br><br>vim /etc/mha/app1.cnf <br>[binlog1]<br><span class="hljs-attribute">no_master</span>=1<br><span class="hljs-attribute">hostname</span>=192.168.177.202<br><span class="hljs-comment">#不能跟原binlog目录一样</span><br><span class="hljs-attribute">master_binlog_dir</span>=/web/data/mysql/binserver/<br></code></pre></td></tr></table></figure><p>拉去主库binlog日志</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs markdown">将当前主库binlog拉过来（从00000X开始拉，之后的binlog会自动按顺序过来）<br>进入创建的目录<br>cd /web/data/mysql/binserver/<br>mysqlbinlog  -R --host=192.168.177.201 --user=mha --password=123456 --raw  --stop-never mysql-bin.000009 &amp;<br><br>注意：<br>拉取日志的起点,需要按照目前从库的已经获取到的二进制日志点为起点<br>mysql&gt; show slave status \G;<br><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">*** 1. row **</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span>*<br><span class="hljs-code">                  Master_Host: 192.168.177.201</span><br><span class="hljs-code">              Master_Log_File: mysql-bin.000009</span><br><span class="hljs-code"></span><br>-R：表示以只读模式执行，防止对日志文件进行写入操作。<br>--host=192.168.177.200：指定要连接的主库的 IP 地址。<br>--user=mha：连接主库服务器的用户名。<br>--password=123456：连接主库服务器的密码。<br>--raw：以原始格式输出二进制日志内容。<br>--stop-never：持续运行，不断读取新产生的日志内容，不会自动停止<br></code></pre></td></tr></table></figure><p>启动MHA</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arcade">nohup masterha_manager --conf=<span class="hljs-regexp">/etc/m</span>ha/mha.cnf --remove_dead_master_conf --ignore_last_failover  &lt; <span class="hljs-regexp">/dev/</span><span class="hljs-literal">null</span>&gt; <span class="hljs-regexp">/web/</span>logs/mysql/mha/manager.<span class="hljs-built_in">log</span> <span class="hljs-number">2</span>&gt;&amp;<span class="hljs-number">1</span> &amp;<br></code></pre></td></tr></table></figure><h4 id="故障处理"><a href="#故障处理" class="headerlink" title="故障处理"></a>故障处理</h4><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">主库宕机，<span class="hljs-keyword">binlogserver </span>自动停掉，manager 也会自动停止。<br>处理思路：<br><span class="hljs-number">1</span>、删除之前的<span class="hljs-keyword">binlog，重新获取新主库的binlog到binlogserver中</span><br><span class="hljs-keyword"></span><span class="hljs-number">2</span>、重新配置文件<span class="hljs-keyword">binlog </span>server信息<br><span class="hljs-number">3</span>、最后再启动MHA<br></code></pre></td></tr></table></figure><p>设置从库多线程并发复制</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">指定从库用于并行执行 <span class="hljs-keyword">SQL</span> 线程的数量<br><span class="hljs-keyword">SET</span> <span class="hljs-keyword">GLOBAL</span> slave_parallel_workers = <span class="hljs-number">4</span>;<br>slave_parallel_type：设置并行复制的类型<br><span class="hljs-keyword">SET</span> <span class="hljs-keyword">GLOBAL</span> slave_parallel_type=<span class="hljs-string">&#x27;LOGICAL_CLOCK&#x27;</span>;<br>重启复制线程<br>STOP SLAVE;<br><span class="hljs-keyword">START</span> SLAVE;<br></code></pre></td></tr></table></figure><h3 id="Atlas读写分离"><a href="#Atlas读写分离" class="headerlink" title="Atlas读写分离"></a>Atlas读写分离</h3><p>MHA+Atlas</p><h4 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h4><p><img src="/2024/10/18/MHA%E9%AB%98%E5%8F%AF%E7%94%A8+Atlas%E8%AF%BB%E5%86%99%E5%88%86%E7%A6%BB/image-20241018105629154.png"></p><p><img src="/2024/10/18/MHA%E9%AB%98%E5%8F%AF%E7%94%A8+Atlas%E8%AF%BB%E5%86%99%E5%88%86%E7%A6%BB/image-20241018105634345.png"></p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs stylus">Atlas是由 Qihoo <span class="hljs-number">360</span>, Web平台部基础架构团队开发维护的一个基于MySQL协议的数据中间层项目。它是在mysql-proxy <span class="hljs-number">0.8</span>.<span class="hljs-number">2</span>版本的基础上，对其进行了优化，增加了一些新的功能特性。<br><span class="hljs-number">360</span>内部使用Atlas运行的mysql业务，每天承载的读写请求数达几十亿条。<br>下载地址<br>https:<span class="hljs-comment">//github.com/Qihoo360/Atlas/releases</span><br>注意：<br><span class="hljs-number">1</span>、Atlas只能安装运行在<span class="hljs-number">64</span>位的系统上<br><span class="hljs-number">2</span>、Centos <span class="hljs-number">5</span>.X安装 Atlas-XX<span class="hljs-selector-class">.el5</span><span class="hljs-selector-class">.x86_64</span>.rpm，Centos <span class="hljs-number">6</span>.X安装Atlas-XX<span class="hljs-selector-class">.el6</span><span class="hljs-selector-class">.x86_64</span>.rpm。<br><span class="hljs-number">3</span>、后端mysql版本应大于<span class="hljs-number">5.1</span>，建议使用Mysql <span class="hljs-number">5.6</span>以上<br></code></pre></td></tr></table></figure><p>下载</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">https</span>://objects.githubusercontent.com/github-production-release-asset-<span class="hljs-number">2</span>e65be/<span class="hljs-number">15279980</span>/<span class="hljs-number">39</span>ac0594-<span class="hljs-number">8600</span>-<span class="hljs-number">11</span>e4-<span class="hljs-number">9</span>ad6-<span class="hljs-number">7</span>fc203cad2de?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=releaseassetproduction%<span class="hljs-number">2</span>F20241018%<span class="hljs-number">2</span>Fus-east-<span class="hljs-number">1</span>%<span class="hljs-number">2</span>Fs3%<span class="hljs-number">2</span>Faws4_request&amp;X-Amz-Date=<span class="hljs-number">20241018</span>T030903Z&amp;X-Amz-Expires=<span class="hljs-number">300</span>&amp;X-Amz-Signature=<span class="hljs-number">5</span>bfd9678cb16fee876e6f6a3af89b858a41f5840485524604c559ab8da9bc290&amp;X-Amz-SignedHeaders=host&amp;response-content-disposition=attachment%<span class="hljs-number">3</span>B%<span class="hljs-number">20</span>filename%<span class="hljs-number">3</span>DAtlas-<span class="hljs-number">2</span>.<span class="hljs-number">2</span>.<span class="hljs-number">1</span>.el6.x86_64.rpm&amp;response-content-type=application%<span class="hljs-number">2</span>Foctet-stream<br></code></pre></td></tr></table></figure><h4 id="安装配置"><a href="#安装配置" class="headerlink" title="安装配置"></a>安装配置</h4><p>安装</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs stylus">rpm -ivh Atlas-<span class="hljs-number">2.2</span>.<span class="hljs-number">1</span><span class="hljs-selector-class">.el6</span><span class="hljs-selector-class">.x86_64</span><span class="hljs-selector-class">.rpm</span><br><br>创建日志文件夹<br>mkdir -<span class="hljs-selector-tag">p</span> /web/logs/mysql/mysql-proxy/<br><br>cd /usr/local/mysql-proxy/<br>mv test<span class="hljs-selector-class">.cnf</span> test<span class="hljs-selector-class">.cnf</span>.bak<br></code></pre></td></tr></table></figure><table><thead><tr><th>主库</th><th>从库1</th><th>从库2</th></tr></thead><tbody><tr><td>192.168.177.200</td><td>192.168.177.201</td><td>192.168.177.202</td></tr></tbody></table><p>密码加密</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">进入Atlas下<span class="hljs-built_in">bin</span>目录<br>加密密码<br>[root@localhost <span class="hljs-built_in">bin</span>]<span class="hljs-comment"># ./encrypt 123456</span><br>/iZxz+0GRoA=<br></code></pre></td></tr></table></figure><p>配置</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">vim test.cnf<br><br>[mysql-proxy]<br>#管理Atlas用户名密码<br><span class="hljs-keyword">admin</span>-username = atlas<br><span class="hljs-keyword">admin</span>-<span class="hljs-keyword">password</span> = <span class="hljs-number">123456</span><br>#负责写入的服务器iP<br>proxy-backend-addresses = <span class="hljs-number">192.168</span><span class="hljs-number">.177</span><span class="hljs-number">.218</span>:<span class="hljs-number">3306</span><br>#负责读的节点(从库)<br>proxy-<span class="hljs-keyword">read</span>-<span class="hljs-keyword">only</span>-backend-addresses = <span class="hljs-number">192.168</span><span class="hljs-number">.177</span><span class="hljs-number">.201</span>:<span class="hljs-number">3306</span>,<span class="hljs-number">192.168</span><span class="hljs-number">.177</span><span class="hljs-number">.202</span>:<span class="hljs-number">3306</span><br>pwds = repl:/iZxz+<span class="hljs-number">0</span>GRoA=,mha:/iZxz+<span class="hljs-number">0</span>GRoA=<br>daemon = <span class="hljs-keyword">true</span><br>keepalive = <span class="hljs-keyword">true</span><br>event-threads = <span class="hljs-number">8</span><br><span class="hljs-keyword">log</span>-<span class="hljs-keyword">level</span> = message<br><span class="hljs-keyword">log</span>-<span class="hljs-type">path</span> = /web/logs/mysql/mysql-proxy/<br>#是否记录操作日志<br><span class="hljs-keyword">sql</span>-<span class="hljs-keyword">log</span>=<span class="hljs-keyword">ON</span><br>proxy-address = <span class="hljs-number">0.0</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span>:<span class="hljs-number">33060</span><br><span class="hljs-keyword">admin</span>-address = <span class="hljs-number">0.0</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span>:<span class="hljs-number">2345</span><br>charset=utf8<br></code></pre></td></tr></table></figure><p>启动</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/mysql-proxy/</span>bin/mysql-proxyd test start<br></code></pre></td></tr></table></figure><p>验证</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">ps</span> -ef |grep proxy<br><span class="hljs-attribute">netstat</span> -lntp |grep <span class="hljs-number">33060</span><br><span class="hljs-attribute">tcp</span>        <span class="hljs-number">0</span>      <span class="hljs-number">0</span> <span class="hljs-number">0.0.0.0:33060</span>           <span class="hljs-number">0.0.0.0</span>:*               LISTEN      <span class="hljs-number">55015</span>/mysql-proxy <br><br><span class="hljs-attribute">netstat</span> -lntp |grep <span class="hljs-number">2345</span><br><span class="hljs-attribute">tcp</span>        <span class="hljs-number">0</span>      <span class="hljs-number">0</span> <span class="hljs-number">0.0.0.0:2345</span>            <span class="hljs-number">0.0.0.0</span>:*               LISTEN      <span class="hljs-number">55015</span>/mysql-proxy <br></code></pre></td></tr></table></figure><p>测试</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">mysql</span> -u mha -p123456 -h <span class="hljs-number">192.168.177.202</span> -P <span class="hljs-number">33060</span><br>查询<br><span class="hljs-literal">select</span> @<span class="hljs-variable">@server_id</span>;<br></code></pre></td></tr></table></figure><p><img src="/2024/10/18/MHA%E9%AB%98%E5%8F%AF%E7%94%A8+Atlas%E8%AF%BB%E5%86%99%E5%88%86%E7%A6%BB/image-20241018155325464.png"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql">写入<br><span class="hljs-keyword">begin</span>;<span class="hljs-keyword">select</span> @<span class="hljs-variable">@server_id</span>;<span class="hljs-keyword">commit</span>;<br></code></pre></td></tr></table></figure><p><img src="/2024/10/18/MHA%E9%AB%98%E5%8F%AF%E7%94%A8+Atlas%E8%AF%BB%E5%86%99%E5%88%86%E7%A6%BB/image-20241018160652891.png"></p><h4 id="生产用户要求"><a href="#生产用户要求" class="headerlink" title="生产用户要求"></a>生产用户要求</h4><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">开发人员申请一个应用用户 deploy(  <span class="hljs-keyword">select</span>  <span class="hljs-keyword">update</span>  <span class="hljs-keyword">insert</span>)  密码<span class="hljs-number">123456</span>,要通过<span class="hljs-number">192</span>网段登录<br><span class="hljs-number">1.</span> 在主库中,创建用户<br><span class="hljs-keyword">grant</span> <span class="hljs-keyword">select</span> ,<span class="hljs-keyword">update</span>,<span class="hljs-keyword">insert</span> <span class="hljs-keyword">on</span> *.* <span class="hljs-keyword">to</span> deploy@<span class="hljs-string">&#x27;192.168.177.%&#x27;</span> identified <span class="hljs-keyword">by</span> <span class="hljs-string">&#x27;123456&#x27;</span>;<br><span class="hljs-number">2.</span> 在atlas中添加生产用户<br>/usr/<span class="hljs-keyword">local</span>/mysql-proxy/bin/encrypt  <span class="hljs-number">123456</span>      <span class="hljs-comment">----&gt;制作加密密码</span><br>vim test.cnf<br>pwds = repl:/iZxz+<span class="hljs-number">0</span>GRoA=,mha:/iZxz+<span class="hljs-number">0</span>GRoA=,deploy:/iZxz+<span class="hljs-number">0</span>GRoA=<br><br>/usr/<span class="hljs-keyword">local</span>/mysql-proxy/bin/mysql-proxyd test <span class="hljs-keyword">restart</span><br>mysql -u deploy -p123456 -h <span class="hljs-number">192.168</span><span class="hljs-number">.177</span><span class="hljs-number">.202</span> -P <span class="hljs-number">33060</span><br></code></pre></td></tr></table></figure><h3 id="Atlas基本管理"><a href="#Atlas基本管理" class="headerlink" title="Atlas基本管理"></a>Atlas基本管理</h3><p>连接管理接口</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs"><br></code></pre></td></tr></table></figure><p>打印帮助</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs gherkin">mysql&gt; select <span class="hljs-symbol">*</span> from help;<br>+----------------------------+---------------------------------------------------------+<br>|<span class="hljs-string"> command                    </span>|<span class="hljs-string"> description                                             </span>|<br>+----------------------------+---------------------------------------------------------+<br>|<span class="hljs-string"> SELECT * FROM help         </span>|<span class="hljs-string"> shows this help                                         </span>|<br>|<span class="hljs-string"> SELECT * FROM backends     </span>|<span class="hljs-string"> lists the backends and their state                      </span>|<br>|<span class="hljs-string"> SET OFFLINE $backend_id    </span>|<span class="hljs-string"> offline backend server, $backend_id is backend_ndx&#x27;s id </span>|<br>|<span class="hljs-string"> SET ONLINE $backend_id     </span>|<span class="hljs-string"> online backend server, ...                              </span>|<br>|<span class="hljs-string"> ADD MASTER $backend        </span>|<span class="hljs-string"> example: &quot;add master 127.0.0.1:3306&quot;, ...               </span>|<br>|<span class="hljs-string"> ADD SLAVE $backend         </span>|<span class="hljs-string"> example: &quot;add slave 127.0.0.1:3306&quot;, ...                </span>|<br>|<span class="hljs-string"> REMOVE BACKEND $backend_id </span>|<span class="hljs-string"> example: &quot;remove backend 1&quot;, ...                        </span>|<br>|<span class="hljs-string"> SELECT * FROM clients      </span>|<span class="hljs-string"> lists the clients                                       </span>|<br>|<span class="hljs-string"> ADD CLIENT $client         </span>|<span class="hljs-string"> example: &quot;add client 192.168.1.2&quot;, ...                  </span>|<br>|<span class="hljs-string"> REMOVE CLIENT $client      </span>|<span class="hljs-string"> example: &quot;remove client 192.168.1.2&quot;, ...               </span>|<br>|<span class="hljs-string"> SELECT * FROM pwds         </span>|<span class="hljs-string"> lists the pwds                                          </span>|<br>|<span class="hljs-string"> ADD PWD $pwd               </span>|<span class="hljs-string"> example: &quot;add pwd user:raw_password&quot;, ...               </span>|<br>|<span class="hljs-string"> ADD ENPWD $pwd             </span>|<span class="hljs-string"> example: &quot;add enpwd user:encrypted_password&quot;, ...       </span>|<br>|<span class="hljs-string"> REMOVE PWD $pwd            </span>|<span class="hljs-string"> example: &quot;remove pwd user&quot;, ...                         </span>|<br>|<span class="hljs-string"> SAVE CONFIG                </span>|<span class="hljs-string"> save the backends to config file                        </span>|<br>|<span class="hljs-string"> SELECT VERSION             </span>|<span class="hljs-string"> display the version of Atlas                            </span>|<br>+----------------------------+---------------------------------------------------------+<br></code></pre></td></tr></table></figure><p>查询后端所有节点信息</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"><span class="hljs-section">mysql&gt;  SELECT * FROM backends    ;</span><br><span class="hljs-section">+-------------+----------------------+-------+------+</span><br><span class="hljs-section">| backend_ndx | address              | state | type |</span><br><span class="hljs-section">+-------------+----------------------+-------+------+</span><br>|           1 | 192.168.177.218:3306 | up    | rw   |<br>|           2 | 192.168.177.201:3306 | up    | ro   |<br><span class="hljs-section">|           3 | 192.168.177.202:3306 | up    | ro   |</span><br><span class="hljs-section">+-------------+----------------------+-------+------+</span><br></code></pre></td></tr></table></figure><p>动态删除节点</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-comment">REMOVE BACKEND 3;</span><br></code></pre></td></tr></table></figure><p>动态添加节点</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">ADD</span> SLAVE <span class="hljs-number">192.168.177.202:3306</span>;<br></code></pre></td></tr></table></figure><p>保存</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf">SAVE CONFIG<span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>MySQL</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>MySQL</tag>
      
      <tag>MHA</tag>
      
      <tag>Atlas</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MySQL主从搭建</title>
    <link href="/2024/10/15/MySQL%E4%B8%BB%E4%BB%8E%E6%90%AD%E5%BB%BA/"/>
    <url>/2024/10/15/MySQL%E4%B8%BB%E4%BB%8E%E6%90%AD%E5%BB%BA/</url>
    
    <content type="html"><![CDATA[<h3 id="主从复制简介"><a href="#主从复制简介" class="headerlink" title="主从复制简介"></a>主从复制简介</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql">主从复制时基于二进制日志进行复制的<br>主库的修改会记录二进制日志<br>从库请求二进制日志解析<span class="hljs-keyword">SQL</span>语句并执行，从而达到主从数据同步<br></code></pre></td></tr></table></figure><h3 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h3><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">两台以上mysql实例 ,server_id,server_uuid不同<br>主库开启二进制日志<br>主库建立专用同步用户<br>主从开启时间点，主从数据需要一致 <br>告诉从库复制IP，user，passwd，以及二进制文件和复制起点<br>开启复制线程  (<span class="hljs-literal">start</span> <span class="hljs-literal">slave</span>;)<br></code></pre></td></tr></table></figure><h3 id="搭建环境："><a href="#搭建环境：" class="headerlink" title="搭建环境："></a>搭建环境：</h3><table><thead><tr><th>主库</th><th>从库</th><th align="center">mysql版本</th></tr></thead><tbody><tr><td>192.168.177.200</td><td>192.168.177.201</td><td align="center">5.7.41</td></tr></tbody></table><h3 id="主库"><a href="#主库" class="headerlink" title="主库"></a>主库</h3><hr><h4 id="设置主库server-id并开启主库二进制"><a href="#设置主库server-id并开启主库二进制" class="headerlink" title="设置主库server-id并开启主库二进制"></a>设置主库server-id并开启主库二进制</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs routeros">vim /etc/my.cnf<br><span class="hljs-comment">#开启二进制日志指定文件路径</span><br><span class="hljs-attribute">log-bin</span>=/web/logs/mysql/binlog/mysql-bin<br><span class="hljs-comment">#设置serverID</span><br><span class="hljs-attribute">server-id</span>=1<br></code></pre></td></tr></table></figure><p><img src="/2024/10/15/MySQL%E4%B8%BB%E4%BB%8E%E6%90%AD%E5%BB%BA/image-20241015090814751.png"></p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs applescript">主从server-<span class="hljs-built_in">id</span>不能相同<br>每个 MySQL 服务器在主从复制架构中需要有一个唯一的标识符。server_id用于区分不同的服务器实例。如果多个服务器具有相同的 server_id，那么在复制过程中会产生冲突和混乱。<br>如果主从服务器的 server_id 相同，可能会导致双主循环复制的问题，可能会使数据库陷入混乱或崩溃。<br></code></pre></td></tr></table></figure><h4 id="主库中创建专用复制用户"><a href="#主库中创建专用复制用户" class="headerlink" title="主库中创建专用复制用户"></a>主库中创建专用复制用户</h4><figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs oxygene">mysql -u root -p                                                 <span class="hljs-comment">//登录mysql终端</span><br><span class="hljs-keyword">CREATE</span> USER <span class="hljs-string">&#x27;repl&#x27;</span>@<span class="hljs-string">&#x27;192.168.177.%&#x27;</span> IDENTIFIED <span class="hljs-keyword">BY</span> <span class="hljs-string">&#x27;123456&#x27;</span><span class="hljs-punctuation">;</span>       <span class="hljs-comment">//创建用户</span><br>GRANT REPLICATION SLAVE <span class="hljs-keyword">ON</span> *.* <span class="hljs-keyword">TO</span> <span class="hljs-string">&#x27;repl&#x27;</span>@<span class="hljs-string">&#x27;192.168.177.%&#x27;</span><span class="hljs-punctuation">;</span>        <span class="hljs-comment">//授予权限</span><br>flush privileges<span class="hljs-punctuation">;</span>                                                <span class="hljs-comment">//刷新权限</span><br></code></pre></td></tr></table></figure><h4 id="查看二进制文件"><a href="#查看二进制文件" class="headerlink" title="查看二进制文件"></a>查看二进制文件</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs markdown">mysql&gt;  show master status\G;<br><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">*** 1. row **</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span>*<br><span class="hljs-code">             File: mysql-bin.000003</span><br><span class="hljs-code">         Position: 1059</span><br><span class="hljs-code">     Binlog_Do_DB: </span><br><span class="hljs-code"> Binlog_Ignore_DB: </span><br><span class="hljs-code">Executed_Gtid_Set: 6533bab9-8a0a-11ef-b891-000c299acf13:1-5</span><br></code></pre></td></tr></table></figure><h3 id="从库"><a href="#从库" class="headerlink" title="从库"></a>从库</h3><hr><h4 id="设置从库server-id"><a href="#设置从库server-id" class="headerlink" title="设置从库server-id"></a>设置从库server-id</h4><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs applescript">vim /etc/<span class="hljs-keyword">my</span>.cnf<br><span class="hljs-comment">#设置serverID</span><br>server-<span class="hljs-built_in">id</span>=<span class="hljs-number">2</span><br></code></pre></td></tr></table></figure><p><img src="/2024/10/15/MySQL%E4%B8%BB%E4%BB%8E%E6%90%AD%E5%BB%BA/image-20241015090949626.png"></p><h4 id="执行同步SQL语句"><a href="#执行同步SQL语句" class="headerlink" title="执行同步SQL语句"></a>执行同步SQL语句</h4><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs 1c">CHANGE MASTER TO<br>  MASTER_HOST=&#x27;192.168.177.200&#x27;,<br>  MASTER_USER=&#x27;repl&#x27;,<br>  MASTER_PASSWORD=&#x27;<span class="hljs-number">123456</span>&#x27;,<br>  MASTER_PORT=<span class="hljs-number">3306</span>,<br>  MASTER_LOG_FILE=&#x27;mysql-bin.<span class="hljs-number">000003</span>&#x27;,<br>  MASTER_LOG_POS=<span class="hljs-number">1059</span>,<br>  MASTER_CONNECT_RETRY=<span class="hljs-number">10</span>;<br>  <br>  CHANGE MASTER TO            <br>  MASTER_HOST                 <span class="hljs-comment">//主库的 IP 地址</span><br>  MASTER_USER                 <span class="hljs-comment">//连接主库进行复制的用户名</span><br>  MASTER_PASSWORD             <span class="hljs-comment">//连接主库的用户密码</span><br>  MASTER_PORT                 <span class="hljs-comment">//主库的端口号</span><br>  MASTER_LOG_FILE             <span class="hljs-comment">//指定主库同步二进制日志文件名</span><br>  MASTER_LOG_POS              <span class="hljs-comment">//二进制文件开始同步位置</span><br>  MASTER_CONNECT_RETRY        <span class="hljs-comment">//连接主库失败后重试时间间隔(s)</span><br></code></pre></td></tr></table></figure><h4 id="开启同步进程"><a href="#开启同步进程" class="headerlink" title="开启同步进程"></a>开启同步进程</h4><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh"><span class="hljs-literal">start</span> <span class="hljs-literal">slave</span>;<br></code></pre></td></tr></table></figure><h4 id="查看同步状态"><a href="#查看同步状态" class="headerlink" title="查看同步状态"></a>查看同步状态</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">mysql&gt;</span> <span class="hljs-string">show</span> <span class="hljs-string">slave</span> <span class="hljs-string">status\G;</span><br><span class="hljs-string">***************************</span> <span class="hljs-number">1</span><span class="hljs-string">.</span> <span class="hljs-string">row</span> <span class="hljs-string">***************************</span><br>               <span class="hljs-attr">Slave_IO_State:</span> <span class="hljs-string">Waiting</span> <span class="hljs-string">for</span> <span class="hljs-string">master</span> <span class="hljs-string">to</span> <span class="hljs-string">send</span> <span class="hljs-string">event</span><br>                  <span class="hljs-attr">Master_Host:</span> <span class="hljs-number">192.168</span><span class="hljs-number">.177</span><span class="hljs-number">.200</span><br>                  <span class="hljs-attr">Master_User:</span> <span class="hljs-string">repl</span><br>                  <span class="hljs-attr">Master_Port:</span> <span class="hljs-number">3306</span><br>                <span class="hljs-attr">Connect_Retry:</span> <span class="hljs-number">10</span><br>              <span class="hljs-attr">Master_Log_File:</span> <span class="hljs-string">mysql-bin.000003</span><br>          <span class="hljs-attr">Read_Master_Log_Pos:</span> <span class="hljs-number">1059</span><br>               <span class="hljs-attr">Relay_Log_File:</span> <span class="hljs-string">localhost-relay-bin.000002</span><br>                <span class="hljs-attr">Relay_Log_Pos:</span> <span class="hljs-number">320</span><br>        <span class="hljs-attr">Relay_Master_Log_File:</span> <span class="hljs-string">mysql-bin.000003</span><br>             <span class="hljs-attr">Slave_IO_Running:</span> <span class="hljs-literal">Yes</span><br>            <span class="hljs-attr">Slave_SQL_Running:</span> <span class="hljs-literal">Yes</span><br></code></pre></td></tr></table></figure><h3 id="主从复制原理"><a href="#主从复制原理" class="headerlink" title="主从复制原理"></a>主从复制原理</h3><p>线程</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs makefile"><span class="hljs-section">主:</span><br>Binlog_Dump_Thread<br><span class="hljs-section">从:</span><br>Slave_IO_Thread<br>Slave_SQL_Thread<br></code></pre></td></tr></table></figure><p>文件</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs routeros">主:<br>mysql-bin.000003             二进制日志<br>从: <br>dbname-relay-bin.000002      中继日志<br>master.<span class="hljs-built_in">info</span>                  主库信息记录日志<br>relay-log.<span class="hljs-built_in">info</span>               记录中继应用情况信息<br></code></pre></td></tr></table></figure><p>描述</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-number">1.</span>  change master <span class="hljs-keyword">to</span> 时，ip pot <span class="hljs-keyword">user</span> <span class="hljs-keyword">password</span> binlog position写入到从库master.<span class="hljs-keyword">info</span>进行记录<br><span class="hljs-number">2.</span>  <span class="hljs-keyword">start</span> slave 时，从库会启动IO线程和<span class="hljs-keyword">SQL</span>线程<br><span class="hljs-number">3.</span>  IO_T，读取master.<span class="hljs-keyword">info</span>信息，获取主库信息连接主库<br><span class="hljs-number">4.</span>  主库会生成一个准备binlog DUMP线程，来响应从库<br><span class="hljs-number">5.</span>  IO_T根据master.<span class="hljs-keyword">info</span>记录的binlog文件名和position号，请求主库DUMP最新日志<br><span class="hljs-number">6.</span>  DUMP线程检查主库的binlog日志，如果有新的，TP(传送)给从库的IO_T<br><span class="hljs-number">7.</span>  IO_T将收到的日志存储到了TCP/IP 缓存，立即返回ACK给主库 ，主库工作完成<br><span class="hljs-number">8.</span>  IO_T将缓存中的数据，存储到relay-<span class="hljs-keyword">log</span>日志文件,更新master.<span class="hljs-keyword">info</span>文件binlog 文件名和postion，IO_T工作完成<br><span class="hljs-number">9.</span>  SQL_T读取relay-<span class="hljs-keyword">log</span>.<span class="hljs-keyword">info</span>文件，获取到上次执行到的relay-<span class="hljs-keyword">log</span>的位置，作为起点，回放relay-<span class="hljs-keyword">log</span><br><span class="hljs-number">10.</span> SQL_T回放完成之后，会更新relay-<span class="hljs-keyword">log</span>.<span class="hljs-keyword">info</span>文件。<br><span class="hljs-number">11.</span> relay-<span class="hljs-keyword">log</span>会有自动清理的功能。<br>细节：<br><span class="hljs-number">1.</span>主库一旦有新的日志生成，会发送“信号”给binlog dump ，IO线程再请求<br></code></pre></td></tr></table></figure><h3 id="主从故障监控"><a href="#主从故障监控" class="headerlink" title="主从故障监控"></a>主从故障监控</h3><h4 id="线程监控"><a href="#线程监控" class="headerlink" title="线程监控"></a>线程监控</h4><h5 id="主库："><a href="#主库：" class="headerlink" title="主库："></a>主库：</h5><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs markdown">mysql&gt; show full processlist\G;<br>每一个从库都会有一行 Binlog Dump 相关的信息<br><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">*** 1. row **</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span>*<br><span class="hljs-code">     Id: 4</span><br><span class="hljs-code">   User: repl</span><br><span class="hljs-code">   Host: 192.168.177.201:45880</span><br><span class="hljs-code">     db: NULL</span><br><span class="hljs-code">Command: Binlog Dump</span><br><span class="hljs-code">   Time: 1450</span><br><span class="hljs-code">  State: Master has sent all binlog to slave; waiting for more updates</span><br><span class="hljs-code">   Info: NULL</span><br></code></pre></td></tr></table></figure><h5 id="从库："><a href="#从库：" class="headerlink" title="从库："></a>从库：</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">mysql&gt;</span> <span class="hljs-string">show</span> <span class="hljs-string">slave</span> <span class="hljs-string">status\G;</span><br><span class="hljs-string">***************************</span> <span class="hljs-number">1</span><span class="hljs-string">.</span> <span class="hljs-string">row</span> <span class="hljs-string">***************************</span><br><span class="hljs-string">主库相关信息：</span><br>                  <span class="hljs-attr">Master_Host:</span> <span class="hljs-number">192.168</span><span class="hljs-number">.177</span><span class="hljs-number">.200</span><br>                  <span class="hljs-attr">Master_User:</span> <span class="hljs-string">repl</span><br>                  <span class="hljs-attr">Master_Port:</span> <span class="hljs-number">3306</span><br>                <span class="hljs-attr">Connect_Retry:</span> <span class="hljs-number">10</span><br>              <span class="hljs-attr">Master_Log_File:</span> <span class="hljs-string">mysql-bin.000003</span><br>          <span class="hljs-attr">Read_Master_Log_Pos:</span> <span class="hljs-number">1636</span><br><span class="hljs-string">中继日志：</span><br>               <span class="hljs-attr">Relay_Log_File:</span> <span class="hljs-string">localhost-relay-bin.000002</span><br>                <span class="hljs-attr">Relay_Log_Pos:</span> <span class="hljs-number">897</span><br><span class="hljs-string">复制线程状态：</span><br>             <span class="hljs-attr">Slave_IO_Running:</span> <span class="hljs-literal">Yes</span><br>            <span class="hljs-attr">Slave_SQL_Running:</span> <span class="hljs-literal">Yes</span><br>                <span class="hljs-attr">Last_IO_Errno:</span> <span class="hljs-number">0</span><br>                <span class="hljs-attr">Last_IO_Error:</span> <br>               <span class="hljs-attr">Last_SQL_Errno:</span> <span class="hljs-number">0</span><br>               <span class="hljs-attr">Last_SQL_Error:</span> <br><span class="hljs-string">主从延时相关状态：(非人为)(单位：s)</span><br>        <span class="hljs-attr">Seconds_Behind_Master:</span> <span class="hljs-number">0</span>     <br><span class="hljs-string">延时从库有关的状态：(人为)</span><br>                    <span class="hljs-attr">SQL_Delay:</span> <span class="hljs-number">0</span><br>          <span class="hljs-attr">SQL_Remaining_Delay:</span> <span class="hljs-literal">NULL</span><br><span class="hljs-string">GTID</span> <span class="hljs-string">复制有关的状态：</span><br>           <span class="hljs-attr">Retrieved_Gtid_Set:</span> <span class="hljs-string">6533bab9-8a0a-11ef-b891-000c299acf13:6-8</span><br>            <span class="hljs-attr">Executed_Gtid_Set:</span> <span class="hljs-string">6533bab9-8a0a-11ef-b891-000c299acf13:6-8,</span><br>                               <span class="hljs-string">65c5f12a-8a0a-11ef-8a2e-000c29c3145d:1-2</span><br>                <span class="hljs-attr">Auto_Position:</span> <span class="hljs-number">0</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>MySQL</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>MySQL</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Docker理解与安装</title>
    <link href="/2023/11/30/Docker%E7%90%86%E8%A7%A3%E4%B8%8E%E5%AE%89%E8%A3%85/"/>
    <url>/2023/11/30/Docker%E7%90%86%E8%A7%A3%E4%B8%8E%E5%AE%89%E8%A3%85/</url>
    
    <content type="html"><![CDATA[<h1 id="什么是Docker"><a href="#什么是Docker" class="headerlink" title="什么是Docker"></a>什么是Docker</h1><blockquote><p>Docker 图标鲸鱼背着集装箱，码头工人，整体搬运，是一种虚拟化技术，虚拟机，通过与操作系统协商独占硬件资源（磁盘内存等）独立一个进程，里面软件需要想普通软件一样安装，所谓运行软件，将文件中的内容搬运到内存中，让cpu进行运算（各个任务之间需要调度），以前虚拟出2个不干扰的程序（2个tomcat），除了tomcat本身需要的资源，还需要虚拟机的操作系统额外占用的资源，将虚拟任务 虚拟成线程让docker管理，真实机器操作系统只需要和docker交互就可以了。</p><p>实现所谓的虚拟技术，就是资源可用， 磁盘可访问（docker安装有自己的文件夹，安装的虚拟线程tomcat 也就在这个文件里面保存文件，cpu 虚拟线程找docker进程协调资源，docker的进程找操作系统协调资源，网络各个虚拟线程和docker进程之间是桥接关系，docker安装完成会装一个虚拟网卡）</p></blockquote><h1 id="Docker安装"><a href="#Docker安装" class="headerlink" title="Docker安装"></a>Docker安装</h1><h2 id="yum-安装"><a href="#yum-安装" class="headerlink" title="yum 安装"></a>yum 安装</h2><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">yum <span class="hljs-keyword">install</span> docker<br></code></pre></td></tr></table></figure><p>启动Docker</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">systemctl <span class="hljs-literal">start</span> docker<br></code></pre></td></tr></table></figure><p>安装好后 配置国内镜像源</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">curl -sSL https:<span class="hljs-regexp">//g</span>et.daocloud.io<span class="hljs-regexp">/daotools/</span>set_mirror.sh | sh -s http:<span class="hljs-regexp">//</span>f1361db2.m.daocloud.io<br></code></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs awk">vi  <span class="hljs-regexp">/etc/</span>docker/daemon.json<br><br>&#123;<br>     <span class="hljs-string">&quot;registry-mirrors&quot;</span>: [<br>         <span class="hljs-string">&quot;https://registry.docker-cn.com&quot;</span>,<br>         <span class="hljs-string">&quot;http://hub-mirror.c.163.com&quot;</span>,<br>         <span class="hljs-string">&quot;https://docker.mirrors.ustc.edu.cn&quot;</span><br>     ]<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/2023/11/30/Docker%E7%90%86%E8%A7%A3%E4%B8%8E%E5%AE%89%E8%A3%85/clip_image002-1712382897721-1.jpg"></p><p> 查看已下载的镜像（就是静态的模板软件）</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">docker images</span><br></code></pre></td></tr></table></figure><p>拉取Redis镜像</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">docker pull redis</span><br></code></pre></td></tr></table></figure><p><img src="/2023/11/30/Docker%E7%90%86%E8%A7%A3%E4%B8%8E%E5%AE%89%E8%A3%85/clip_image004.jpg"></p><blockquote><p>创建一个容器的时候，docker 会自动对它进行命名</p><p><strong>-P</strong> <strong>：</strong>是容器内部端口<strong>随机</strong>映射到主机的端口。</p><p><strong>-p</strong> <strong>：</strong>是容器内部端口绑定到<strong>指定</strong>的主机端口，默认都是绑定 tcp 端口，如果要绑定 UDP 端口，可以在端口后面加上 <strong>&#x2F;udp</strong>。</p><p><strong>–name</strong> <strong>：</strong>命名容器。</p><p><strong>-d</strong>：指定 docker 网络类型，有 bridge、overlay。</p><p>-v $PWD&#x2F;test：&#x2F;test：将主机中当前目录下的test 挂载到容器的 &#x2F;test。</p></blockquote><p>运行Redis容器</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">docker</span> run --name redis -d -p <span class="hljs-number">6379</span>:<span class="hljs-number">6379</span> redis:latest<br></code></pre></td></tr></table></figure><p>查看所有的容器</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">docker ps -<span class="hljs-selector-tag">a</span><br></code></pre></td></tr></table></figure><p>启动Redis容器</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">docker <span class="hljs-literal">start</span> redis<br></code></pre></td></tr></table></figure><p>物理机访问</p><p><img src="/2023/11/30/Docker%E7%90%86%E8%A7%A3%E4%B8%8E%E5%AE%89%E8%A3%85/clip_image006.jpg"></p><p>可以进入 运行中的容器 容器名字 不能进 就使用ID</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker <span class="hljs-built_in">exec</span> -it redis /bin/bash<br></code></pre></td></tr></table></figure><p>进入容器 没有vi命令 编辑需要安装vim</p><p>如果直接敲apt-get install vim命令则会有如下提示</p><p><img src="/2023/11/30/Docker%E7%90%86%E8%A7%A3%E4%B8%8E%E5%AE%89%E8%A3%85/clip_image008.jpg"></p><p>我们需要先敲入apt-get update命令，这个命令的作用是：同步 &#x2F;etc&#x2F;apt&#x2F;sources.list 和 &#x2F;etc&#x2F;apt&#x2F;sources.list.d 中列出的源的索引，这样才能获取到最新的软件包。</p><p><img src="/2023/11/30/Docker%E7%90%86%E8%A7%A3%E4%B8%8E%E5%AE%89%E8%A3%85/clip_image010.jpg"></p><p>然后使用apt-get install vim安装vim。</p><p>海外源 网络慢</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mv</span> /etc/apt/sources.list /etc/apt/sources.list.bak<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;deb http://mirrors.163.com/debian/ jessie main non-free contrib&quot;</span> &gt;&gt;<br>/etc/apt/sources.list<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;deb http://mirrors.163.com/debian/ jessie-proposed-updates main non-free contrib&quot;</span> &gt;&gt;/etc/apt/sources.list<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;deb-src http://mirrors.163.com/debian/ jessie main non-free contrib&quot;</span> &gt;&gt;/etc/apt/sources.list<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;deb-src http://mirrors.163.com/debian/ jessie-proposed-updates main non-free contrib&quot;</span> &gt;&gt;/etc/apt/sources.list<br></code></pre></td></tr></table></figure><p>如果要发布项目 建立好 test 项目与 html 文件 拷贝test目录到docker中的tomcat的webapps中，需要主要查看docker中 tomcat的安装路径（pwd）</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">docker cp <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/tomcat/</span>webapps tomcat:<span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/tomcat/</span>webapps/<br></code></pre></td></tr></table></figure><p><img src="/2023/11/30/Docker%E7%90%86%E8%A7%A3%E4%B8%8E%E5%AE%89%E8%A3%85/image-20221130173819977.png"></p><p>将容器中的文件拷贝出来</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">docker cp nginx:<span class="hljs-regexp">/etc/</span>nginx<span class="hljs-regexp">/nginx.conf /u</span>sr<span class="hljs-regexp">/ftp/</span>nginx.conf<br>docker cp <span class="hljs-regexp">/usr/</span>ftp<span class="hljs-regexp">/nginx.conf nginx:/</span>etc<span class="hljs-regexp">/nginx/</span>nginx.conf<br></code></pre></td></tr></table></figure><h1 id="私服搭建"><a href="#私服搭建" class="headerlink" title="私服搭建"></a>私服搭建</h1><p>为什么要搭建本地仓库？</p><blockquote><p>Docker 运行软件是由镜像 images 产生container 容器来运行，本来是从docker中央仓库或者镜像仓库。</p><p>如果自己在公司局域网中要快速搭建docker环境就需要搭建本地仓库，搭建本地仓库的电脑可以把公共仓库中的镜像直接上传到本地仓库，也可以把自己修改了配置的容器打包成自己的镜像上传到本地仓库就大大节约了下载和每一台都要重新配置的时间</p></blockquote><p>docker下载registry软件</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">docker pull daocloud.io<span class="hljs-regexp">/library/</span>registry:latest<br></code></pre></td></tr></table></figure><p>查看镜像</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">docker images</span><br></code></pre></td></tr></table></figure><p>生成容器和端口映射</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">docker <span class="hljs-built_in">run</span> -d -p 5000:5000 <span class="hljs-attribute">--restart</span>=always --name myregistry daocloud.io/library/registry:latest<br></code></pre></td></tr></table></figure><p>将容器打包贴自己的标签 例如 我设置自定义名字为 redis 标tag也可以理解为版本号my</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim">docker <span class="hljs-keyword">tag</span> docker.io/tomca<span class="hljs-variable">t:latest</span> localhos<span class="hljs-variable">t:5000</span>/<span class="hljs-keyword">redi</span><span class="hljs-variable">s:my</span><br></code></pre></td></tr></table></figure><p>推送到指定仓库</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim">docker push localhos<span class="hljs-variable">t:5000</span>/<span class="hljs-keyword">redi</span><span class="hljs-variable">s:my</span><br></code></pre></td></tr></table></figure><p>查看指定仓库的资源 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl http://localhost:5000/v2/_catalog<br></code></pre></td></tr></table></figure><p><img src="/2023/11/30/Docker%E7%90%86%E8%A7%A3%E4%B8%8E%E5%AE%89%E8%A3%85/clip_image012.jpg"></p><p>查看指定镜像的版本</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">curl http:<span class="hljs-regexp">//</span><span class="hljs-number">192.168</span>.<span class="hljs-number">139.123</span>:<span class="hljs-number">5000</span><span class="hljs-regexp">/v2/</span>redis<span class="hljs-regexp">/tags/</span>list<br></code></pre></td></tr></table></figure><p><img src="/2023/11/30/Docker%E7%90%86%E8%A7%A3%E4%B8%8E%E5%AE%89%E8%A3%85/clip_image014.jpg"></p><p>其他电脑如何获取资源</p><p>其他机器要从指定的仓库拉取镜像，首先要保证上述的网址能够打开</p><p><a href="http://192.168.139.123:5000/v2/redis/tags/list">http://192.168.139.123:5000/v2/redis/tags/list</a></p><p>修改本地docker deamon.json</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">vi <span class="hljs-regexp">/etc/</span>docker/daemon.json<br></code></pre></td></tr></table></figure><p>在默认资源的后面添加指定仓库</p><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs prolog">&#123;<br><span class="hljs-string">&quot;registry-mirrors&quot;</span>: [<br><span class="hljs-string">&quot;https://registry.docker-cn.com&quot;</span>,<br><span class="hljs-string">&quot;http://hub-mirror.c.163.com&quot;</span>,<br><span class="hljs-string">&quot;https://docker.mirrors.ustc.edu.cn&quot;</span><br>],<br><span class="hljs-string">&quot;insecure-registries&quot;</span>:[<span class="hljs-string">&quot;192.168.139.123:5000&quot;</span>]<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/2023/11/30/Docker%E7%90%86%E8%A7%A3%E4%B8%8E%E5%AE%89%E8%A3%85/clip_image016.jpg"></p><p>从指定仓库拉取 指定版本的指定镜像 ，名称要全部正确</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">docker</span> pull <span class="hljs-number">192.168.139.123</span>/redis:my<br></code></pre></td></tr></table></figure><p><strong>配置</strong> <strong>DNS</strong></p><p>我们可以在宿主机的 &#x2F;etc&#x2F;docker&#x2F;daemon.json 文件中增加以下内容来设置全部容器的 DNS：</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs ada">&#123;<br> <span class="hljs-string">&quot;dns&quot;</span> : [<br> <span class="hljs-string">&quot;114.114.114.114&quot;</span>,<br>  <span class="hljs-string">&quot;8.8.8.8&quot;</span><br> ]<br>&#125;<br></code></pre></td></tr></table></figure><p>设置后，启动容器的 DNS 会自动配置为 114.114.114.114 和 8.8.8.8。</p><p>配置完，需要重启 docker 才能生效。</p><p>查看容器的 DNS 是否生效可以使用以下命令，它会输出容器的 DNS 信息：</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile">docker <span class="hljs-keyword">run</span><span class="language-bash"> -it --<span class="hljs-built_in">rm</span> centos <span class="hljs-built_in">cat</span> etc/resolv.conf</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Docker</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>Docker</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Elasticsearch安装配置</title>
    <link href="/2023/11/29/Elasticsearch%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/"/>
    <url>/2023/11/29/Elasticsearch%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><p>上传 elasticsearch-7.9.3-linux-x86_64.tar 解压</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">tar</span> -zvxf elasticsearch-<span class="hljs-number">7</span>.<span class="hljs-number">9</span>.<span class="hljs-number">3</span>-linux-x86_64.tar.gz<br></code></pre></td></tr></table></figure><p>拷贝到 &#x2F;usr&#x2F;local&#x2F;es 目录下 </p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">cp</span> -r /usr/ftp/elasticsearch-<span class="hljs-number">7</span>.<span class="hljs-number">9</span>.<span class="hljs-number">3</span> /usr/local/es<br></code></pre></td></tr></table></figure><h1 id="安装配置"><a href="#安装配置" class="headerlink" title="安装配置"></a>安装配置</h1><p>修改配置</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">vi</span> /usr/local/es/elasticsearch-<span class="hljs-number">7</span>.<span class="hljs-number">9</span>.<span class="hljs-number">3</span>/config/elasticsearch.yml<br></code></pre></td></tr></table></figure><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">cluster.name:</span> my-ess <span class="hljs-meta">#修改集群名称</span><br><span class="hljs-symbol">node.name:</span> es<span class="hljs-number">-1</span> <span class="hljs-meta">#修改节点名称</span><br><span class="hljs-symbol">path.data:</span> /usr/local/es/elasticsearch<span class="hljs-number">-7.9</span><span class="hljs-number">.3</span>/data <span class="hljs-meta">#数据存储路径</span><br><span class="hljs-symbol">path.logs:</span> /usr/local/es/elasticsearch<span class="hljs-number">-7.9</span><span class="hljs-number">.3</span>/logs <span class="hljs-meta">#日志存储路径</span><br><span class="hljs-symbol">network.host:</span> <span class="hljs-number">0.0</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span> <span class="hljs-meta">#允许任意主机访问</span><br><span class="hljs-symbol">http.port:</span> <span class="hljs-number">9200</span> <span class="hljs-meta">#web访问端口</span><br><span class="hljs-symbol">discovery.seed_hosts:</span> [<span class="hljs-string">&quot;es-1&quot;</span>] <span class="hljs-meta">#发现的主机</span><br><span class="hljs-symbol">cluster.initial_master_nodes:</span> [<span class="hljs-string">&quot;es-1&quot;</span>] <span class="hljs-meta">#初始化主节点</span><br></code></pre></td></tr></table></figure><p>es为了安全考虑不允许使用root账号 或者root身份登录 所以需单独创建账号</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs x86asm">useradd <span class="hljs-built_in">es</span><br>passwd <span class="hljs-built_in">es</span><br></code></pre></td></tr></table></figure><p>修改es文件目录的所有者为es</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs x86asm">chown -R <span class="hljs-built_in">es</span>:<span class="hljs-built_in">es</span> /usr/local/<span class="hljs-built_in">es</span><br>su <span class="hljs-built_in">es</span><br></code></pre></td></tr></table></figure><p>启动程序</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/es/</span>elasticsearch-<span class="hljs-number">7.9</span>.<span class="hljs-number">3</span><span class="hljs-regexp">/bin/</span>elasticsearch<br></code></pre></td></tr></table></figure><p>需要选保证jdk正确安装     启动出现  低于最低大小配置</p><p><img src="/2023/11/29/Elasticsearch%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/image-20221129111307162.png"></p><p>切回root用户 编辑 &#x2F;etc&#x2F;security&#x2F;limits.conf，追加以下内容</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs stata">vi /etc/security/limits.<span class="hljs-keyword">conf</span><br><br><span class="hljs-comment">* soft nofile 65536</span><br><span class="hljs-comment">* hard nofile 65536</span><br></code></pre></td></tr></table></figure><p>此文件修改后需要重新登录用户，才会生效</p><p>编辑 &#x2F;etc&#x2F;sysctl.conf，追加以下内容</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">vi</span> /etc/sysctl.<span class="hljs-keyword">conf</span><br><br><span class="hljs-keyword">vm</span>.max_map_count=<span class="hljs-number">655360</span><br></code></pre></td></tr></table></figure><p>修改完成重启虚拟机   切换es用户启动</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/es/</span>elasticsearch-<span class="hljs-number">7.9</span>.<span class="hljs-number">3</span><span class="hljs-regexp">/bin/</span>elasticsearch -d<br></code></pre></td></tr></table></figure><p><img src="/2023/11/29/Elasticsearch%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/image-20221129112508345.png"></p><p>浏览器访问</p><p><img src="/2023/11/29/Elasticsearch%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/image-20221129112544470.png"></p><blockquote><p>Windows 谷歌浏览器安装head-master（需要去下载ocr文件，修改 headmaster_head文件夹中 vendor.js文件中关于请求方式从form 修改为 application&#x2F;json,具体修改位置见文末）插件方便查看json格式的查询结果</p></blockquote><h1 id="Windows插件安装"><a href="#Windows插件安装" class="headerlink" title="Windows插件安装"></a>Windows插件安装</h1><p>安装插件 谷歌浏览器设置  更多工具 扩展程序 添加插件</p><p><img src="/2023/11/29/Elasticsearch%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/image-20221129115009185.png"></p><p>可以使用图形界面或者命令添加索引 格式是索引&#x2F;类型 也可以在linux中使用  Curl命令来添加内容 添加使用的提交类型是POST</p><figure class="highlight scilab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs scilab">curl -H <span class="hljs-string">&quot;Content-Type: application/json&quot;</span> -XPOST <span class="hljs-string">&#x27;localhost:9200/team/player/1&#x27;</span> -d <span class="hljs-string">&#x27;</span><br><span class="hljs-string">&#123;</span><br><span class="hljs-string">    &quot;</span>name<span class="hljs-string">&quot;:&quot;</span>zs<span class="hljs-string">&quot;,</span><br><span class="hljs-string">    &quot;</span>high<span class="hljs-string">&quot;:&quot;</span><span class="hljs-number">175</span><span class="hljs-string">&quot;,</span><br><span class="hljs-string">    &quot;</span>val<span class="hljs-string">&quot;:90</span><br><span class="hljs-string">&#125;&#x27;</span><br>curl -H <span class="hljs-string">&quot;Content-Type: application/json&quot;</span> -XPOST <span class="hljs-string">&#x27;localhost:9200/team/player/2&#x27;</span> -d <span class="hljs-string">&#x27;</span><br><span class="hljs-string">&#123;</span><br><span class="hljs-string">    &quot;</span>name<span class="hljs-string">&quot;:&quot;</span>ls<span class="hljs-string">&quot;,</span><br><span class="hljs-string">    &quot;</span>high<span class="hljs-string">&quot;:&quot;</span><span class="hljs-number">166</span><span class="hljs-string">&quot;,</span><br><span class="hljs-string">    &quot;</span>val<span class="hljs-string">&quot;:85</span><br><span class="hljs-string">&#125;&#x27;</span><br>curl -H <span class="hljs-string">&quot;Content-Type: application/json&quot;</span> -XPOST <span class="hljs-string">&#x27;localhost:9200/team/player/3&#x27;</span> -d <span class="hljs-string">&#x27;</span><br><span class="hljs-string">&#123;</span><br><span class="hljs-string">    &quot;</span>name<span class="hljs-string">&quot;:&quot;</span>ww<span class="hljs-string">&quot;,</span><br><span class="hljs-string">    &quot;</span>high<span class="hljs-string">&quot;:&quot;</span><span class="hljs-number">180</span><span class="hljs-string">&quot;,</span><br><span class="hljs-string">    &quot;</span>val<span class="hljs-string">&quot;:77</span><br><span class="hljs-string">&#125;&#x27;</span><br></code></pre></td></tr></table></figure><p>执行完上面内容 插入 一个索引为球队 类型为球员的 三条数据</p><p><img src="/2023/11/29/Elasticsearch%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/image-20221129115633286.png"></p><p>查看可以使用图形界面也可以使用命令</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs ada">curl -XGET <span class="hljs-symbol">&#x27;http</span>://localhost:<span class="hljs-number">9200</span>/team/_search?pretty&#x27; -H <span class="hljs-symbol">&#x27;content</span>-<span class="hljs-keyword">Type</span>:application/json&#x27; -d &#x27;<br>&#123;<br>    <span class="hljs-string">&quot;query&quot;</span>: &#123;<br>        <span class="hljs-string">&quot;match_all&quot;</span>: &#123;&#125;<br>    &#125;<br>&#125;&#x27;<br></code></pre></td></tr></table></figure><p><img src="/2023/11/29/Elasticsearch%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/image-20221129120159174.png"></p><p><img src="/2023/11/29/Elasticsearch%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/image-20221129120321365.png"></p><p><img src="/2023/11/29/Elasticsearch%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/image-20221129120552869.png"></p><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs prolog">&#123;<br>  <span class="hljs-string">&quot;query&quot;</span>: &#123;<br>    <span class="hljs-string">&quot;bool&quot;</span>: &#123;<br>      <span class="hljs-string">&quot;must&quot;</span>: [<br>        &#123;<br>          <span class="hljs-string">&quot;query_string&quot;</span>: &#123;<br>            <span class="hljs-string">&quot;default_field&quot;</span>: <span class="hljs-string">&quot;high.keyword&quot;</span>,<br>            <span class="hljs-string">&quot;query&quot;</span>: <span class="hljs-string">&quot;&gt;170&quot;</span><br>          &#125;<br>        &#125;<br>      ],<br>      <span class="hljs-string">&quot;must_not&quot;</span>: [],<br>      <span class="hljs-string">&quot;should&quot;</span>: []<br>    &#125;<br>  &#125;,<br>  <span class="hljs-string">&quot;from&quot;</span>: <span class="hljs-number">0</span>,<br>  <span class="hljs-string">&quot;size&quot;</span>: <span class="hljs-number">10</span>,<br>  <span class="hljs-string">&quot;sort&quot;</span>: [],<br>  <span class="hljs-string">&quot;aggs&quot;</span>: &#123;&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/2023/11/29/Elasticsearch%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/image-20221129120606494.png"></p><h3 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h3><p>{“error”:”Content-Type header [application&#x2F;x-www-form-urlencoded] is not supported”,”status”:406}</p><p>解决办法：</p><p>进入head安装目录；</p><p>编辑vendor.js 共有两处</p><p>　　　　　　①、6886行  contentType: “application&#x2F;x-www-form-urlencoded，改成：contentType: “application&#x2F;json;charset&#x3D;UTF-8”</p><p>　　　　　　②、7574行 var inspectData &#x3D; s.contentType &#x3D;&#x3D;&#x3D; “application&#x2F;x-www-form-urlencoded” &amp;&amp;，改成：var inspectData &#x3D; s.contentType &#x3D;&#x3D;&#x3D; “application&#x2F;json;charset&#x3D;UTF-8” &amp;&amp;</p><p>原因2：在curl中，是在报文Content-type的参数：application&#x2F;x-www-form-urlencoded不支持Json发送。需要改成application&#x2F;Json。所以需要添加参数 ; -H ‘Content-Type: application&#x2F;json’或者直接在终端操作命令时修改操作命令</p><p>原命令：</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">curl -<span class="hljs-type">XGET</span> <span class="hljs-symbol">&#x27;http</span>:<span class="hljs-comment">//localhost:9200/_count?pretty&#x27; -d &#x27;</span><br>&#123;<br>    <span class="hljs-string">&quot;query&quot;</span>: &#123;<br>        <span class="hljs-string">&quot;match_all&quot;</span>: &#123;&#125;<br>    &#125;<br>&#125;<span class="hljs-string">&#x27;</span><br></code></pre></td></tr></table></figure><p>修改后命令：</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs ada">curl -XGET <span class="hljs-symbol">&#x27;localhost</span>:<span class="hljs-number">9200</span>/_count?pretty&#x27; -H <span class="hljs-symbol">&#x27;content</span>-<span class="hljs-keyword">Type</span>:application/json&#x27; -d &#x27;<br><br>&#123;<br><br><span class="hljs-string">&quot;query&quot;</span>:&#123;<br><br><span class="hljs-string">&quot;match_all&quot;</span>:&#123;&#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><p>或：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">curl</span> -H <span class="hljs-string">&quot;Content-Type: application/json&quot;</span> http://localhost:<span class="hljs-number">9200</span>/tmdb/_search?pretty -d &#x27; &#123;<span class="hljs-string">&quot;query&quot;</span>: &#123;<span class="hljs-string">&quot;match_all&quot;</span>: &#123;&#125;&#125;&#125;&#x27;<br></code></pre></td></tr></table></figure><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs ada">curl -XGET <span class="hljs-symbol">&#x27;http</span>://localhost:<span class="hljs-number">9200</span>/team/_search?pretty&#x27; -H <span class="hljs-symbol">&#x27;content</span>-<span class="hljs-keyword">Type</span>:application/json&#x27; -d &#x27;<br>&#123;<br>    <span class="hljs-string">&quot;query&quot;</span>: &#123;<br>        <span class="hljs-string">&quot;match_all&quot;</span>: &#123;&#125;<br>    &#125;<br>&#125;&#x27;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>中间件</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Easticsearch</tag>
      
      <tag>ELK</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MySQL安装及主从配置</title>
    <link href="/2023/11/28/MySQL%E5%AE%89%E8%A3%85%E5%8F%8A%E4%B8%BB%E4%BB%8E%E9%85%8D%E7%BD%AE/"/>
    <url>/2023/11/28/MySQL%E5%AE%89%E8%A3%85%E5%8F%8A%E4%B8%BB%E4%BB%8E%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><p>将mysql tar包上传到ftp 目录后解压，因为不是用zip算法压缩的所以不支持参数 z</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">tar</span> -vxf mysql-<span class="hljs-number">8</span>.<span class="hljs-number">0</span>.<span class="hljs-number">27</span>-linux-glibc2.<span class="hljs-number">17</span>-x86_64-minimal.tar<br></code></pre></td></tr></table></figure><p>解压后得到三个压缩文件，分别是主程序、、route路由、测试test</p><p><img src="/2023/11/28/MySQL%E5%AE%89%E8%A3%85%E5%8F%8A%E4%B8%BB%E4%BB%8E%E9%85%8D%E7%BD%AE/image-20221126143807259.png"></p><p>解压主程序</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">tar</span> -vxf mysql-<span class="hljs-number">8</span>.<span class="hljs-number">0</span>.<span class="hljs-number">27</span>-linux-glibc2.<span class="hljs-number">17</span>-x86_64-minimal.tar.xz<br></code></pre></td></tr></table></figure><p>得到解压后文件就是 已编译好的程序</p><p>在bin 目录中可以看见和window版本一一致的主程序 mysqld 和客户端程序 mysql</p><p><img src="/2023/11/28/MySQL%E5%AE%89%E8%A3%85%E5%8F%8A%E4%B8%BB%E4%BB%8E%E9%85%8D%E7%BD%AE/image-20221126144135187.png"></p><h1 id="安装配置"><a href="#安装配置" class="headerlink" title="安装配置"></a>安装配置</h1><p>将解压好的的mysql拷贝到local目录下重命名 并进入</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">cp -r <span class="hljs-regexp">/usr/</span>ftp<span class="hljs-regexp">/mysql-8.0.27-linux-glibc2.17-x86_64-minimal /u</span>sr<span class="hljs-regexp">/local/my</span>sql8<br>cd <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/mysql8/</span><br></code></pre></td></tr></table></figure><p>创建mysql用户</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs less"><span class="hljs-selector-tag">useradd</span> <span class="hljs-selector-tag">-r</span> <span class="hljs-selector-tag">-g</span> <span class="hljs-selector-tag">root</span> <span class="hljs-selector-tag">mysql</span><br><span class="hljs-selector-id">#chown</span> <span class="hljs-selector-tag">-R</span> <span class="hljs-selector-tag">mysql</span><span class="hljs-selector-pseudo">:root</span> ./<br></code></pre></td></tr></table></figure><p>修改mysql的安装目录设置</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">vim</span> /etc/my.<span class="hljs-keyword">cnf</span><br></code></pre></td></tr></table></figure><p>加入</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs abnf"><span class="hljs-attribute">basedir</span><span class="hljs-operator">=/</span>usr/local/mysql8<br><span class="hljs-attribute">datadir</span><span class="hljs-operator">=/</span>usr/local/mysql8/data<br><span class="hljs-attribute">socket</span><span class="hljs-operator">=/</span>tmp/mysql/mysql.sock<br></code></pre></td></tr></table></figure><p><img src="/2023/11/28/MySQL%E5%AE%89%E8%A3%85%E5%8F%8A%E4%B8%BB%E4%BB%8E%E9%85%8D%E7%BD%AE/image-20221126145142791.png"></p><p>进入local 下mysql 的安装目录 执行mysql主程序的初始化参数 指定数据目录 注意root@localhost后的密码</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros">./bin/mysqld --initialize <span class="hljs-attribute">--user</span>=mysql <span class="hljs-attribute">--basedir</span>=/usr/local/mysql8 <span class="hljs-attribute">--datadir</span>=/usr/local/mysql8/data<br>./bin/mysql_ssl_rsa_setup <span class="hljs-attribute">--datadir</span>=/usr/local/mysql8/data<br></code></pre></td></tr></table></figure><p><img src="/2023/11/28/MySQL%E5%AE%89%E8%A3%85%E5%8F%8A%E4%B8%BB%E4%BB%8E%E9%85%8D%E7%BD%AE/image-20221126152116977.png"></p><p>把mysql服务拷贝到init目录下 成为系统服务</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">cp <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/mysql8/</span>support-files<span class="hljs-regexp">/mysql.server /</span>etc<span class="hljs-regexp">/init.d/my</span>sql<br></code></pre></td></tr></table></figure><p>修改系统务器中指定的mysql安装目录</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs swift">vim <span class="hljs-regexp">/etc/</span><span class="hljs-keyword">init</span>.d<span class="hljs-operator">/</span>mysql<br></code></pre></td></tr></table></figure><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs abnf"><span class="hljs-attribute">basedir</span><span class="hljs-operator">=/</span>usr/local/mysql8<br><span class="hljs-attribute">datadir</span><span class="hljs-operator">=/</span>usr/local/mysql8/data<br></code></pre></td></tr></table></figure><p><img src="/2023/11/28/MySQL%E5%AE%89%E8%A3%85%E5%8F%8A%E4%B8%BB%E4%BB%8E%E9%85%8D%E7%BD%AE/image-20221126154015038.png"></p><p>创建临时文件夹和日志文件夹 创建一个默认的日志文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> /tmp/mysql<br><span class="hljs-built_in">mkdir</span> /var/log/mariadb<br><span class="hljs-built_in">touch</span> /var/log/mariadb/mariadb.log<br><span class="hljs-built_in">chown</span> -R mysql:root /var   授予mysql用户组访问权限<br></code></pre></td></tr></table></figure><p>设置文件配置 字符集和socket</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">vim</span> /etc/my.<span class="hljs-keyword">cnf</span>.d/mysql-clients.<span class="hljs-keyword">cnf</span><br></code></pre></td></tr></table></figure><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs abnf"><span class="hljs-attribute">default-character-set</span><span class="hljs-operator">=</span>utf8<br><span class="hljs-attribute">socket</span><span class="hljs-operator">=/</span>tmp/mysql/mysql.sock<br></code></pre></td></tr></table></figure><p><img src="/2023/11/28/MySQL%E5%AE%89%E8%A3%85%E5%8F%8A%E4%B8%BB%E4%BB%8E%E9%85%8D%E7%BD%AE/image-20221126154616838.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">chown</span> -R mysql:root /tmp    继续赋予权限<br></code></pre></td></tr></table></figure><blockquote><p>第一次运行 mysql -uroot -p 打不开 执行下面的ln 创建一个软链接（windows中的快捷方式 创建在usr bin 目录中，因为usr&#x2F;bin 在path变量中）</p></blockquote><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">ln -s <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/mysql8/</span>bin<span class="hljs-regexp">/mysql /u</span>sr<span class="hljs-regexp">/bin/</span><br></code></pre></td></tr></table></figure><p>启动</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">service mysql <span class="hljs-literal">start</span><br></code></pre></td></tr></table></figure><h1 id="密码"><a href="#密码" class="headerlink" title="密码"></a>密码</h1><h3 id="免密登陆"><a href="#免密登陆" class="headerlink" title="免密登陆"></a>免密登陆</h3><p>找到mysql配置文件:my.cnf </p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">vim</span> /etc/my.<span class="hljs-keyword">cnf</span><br></code></pre></td></tr></table></figure><p>在【mysqld】模块添加：skip-grant-tables  保存退出</p><p><img src="/2023/11/28/MySQL%E5%AE%89%E8%A3%85%E5%8F%8A%E4%B8%BB%E4%BB%8E%E9%85%8D%E7%BD%AE/image-20221126162719361.png"></p><p>重启mysql服务使配置生效  </p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">service mysql restart</span><br></code></pre></td></tr></table></figure><h2 id="密码置空"><a href="#密码置空" class="headerlink" title="密码置空"></a>密码置空</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">mysql -u root -<span class="hljs-selector-tag">p</span>      <span class="hljs-comment">//提示输入密码时直接敲回车</span><br></code></pre></td></tr></table></figure><p>选择数据库</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf">use mysql<span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure><p>将密码置空   退出数据库</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs n1ql"><span class="hljs-keyword">update</span> <span class="hljs-keyword">user</span> <span class="hljs-keyword">set</span> authentication_string = <span class="hljs-string">&#x27;&#x27;</span> <span class="hljs-keyword">where</span> <span class="hljs-keyword">user</span> = <span class="hljs-string">&#x27;root&#x27;</span>;<br>quit<br></code></pre></td></tr></table></figure><p>去除免密登陆配置</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">vim</span> /etc/my.<span class="hljs-keyword">cnf</span><br></code></pre></td></tr></table></figure><p>注释掉 skip-grant-tables </p><p><img src="/2023/11/28/MySQL%E5%AE%89%E8%A3%85%E5%8F%8A%E4%B8%BB%E4%BB%8E%E9%85%8D%E7%BD%AE/image-20221126163338235.png"></p><p>重启服务</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">service mysql restart</span><br></code></pre></td></tr></table></figure><h2 id="修改密码"><a href="#修改密码" class="headerlink" title="修改密码"></a>修改密码</h2><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs 1c">mysql -u root -p      <span class="hljs-comment">//提示输入密码时直接敲回车</span><br>ALTER USER &#x27;root&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;<span class="hljs-number">123456</span>&#x27;;       <span class="hljs-comment">//修改密码</span><br></code></pre></td></tr></table></figure><blockquote><p>%表示所有地址  localhost 表示本机 如果上方修改密码用的是localhost则需要设置允许远程登录。</p></blockquote><p>允许远程登录</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">#选择数据库<br>use mysql;<br><br>将root用户设置为所有地址可登录  localhost 表示只有本机可登录<br><span class="hljs-keyword">update</span> <span class="hljs-keyword">user</span> <span class="hljs-keyword">set</span> host=<span class="hljs-string">&#x27;%&#x27;</span> <span class="hljs-keyword">where</span> <span class="hljs-keyword">user</span>=<span class="hljs-string">&#x27;root&#x27;</span>; <br><br>将用户root密码设置为用不过期<br><span class="hljs-keyword">alter</span> <span class="hljs-keyword">user</span> <span class="hljs-string">&#x27;root&#x27;</span>@<span class="hljs-string">&#x27;%&#x27;</span> identified <span class="hljs-keyword">by</span> <span class="hljs-string">&#x27;123456&#x27;</span> <span class="hljs-keyword">password</span> expire never;<br><br>修改root用户密码加密方式<br><span class="hljs-keyword">alter</span> <span class="hljs-keyword">user</span> <span class="hljs-string">&#x27;root&#x27;</span>@<span class="hljs-string">&#x27;%&#x27;</span> identified <span class="hljs-keyword">with</span> mysql_native_password <span class="hljs-keyword">by</span> <span class="hljs-string">&#x27;123456&#x27;</span>;<br><br>刷新权限<br>flush <span class="hljs-keyword">privileges</span>;<br></code></pre></td></tr></table></figure><h1 id="MySQL主从"><a href="#MySQL主从" class="headerlink" title="MySQL主从"></a>MySQL主从</h1><blockquote><p>192.168.139.123  &#x2F;&#x2F;主库                192.168.139.122  &#x2F;&#x2F;从库</p></blockquote><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">vi</span> /etc/my.<span class="hljs-keyword">cnf</span><br></code></pre></td></tr></table></figure><p>添加</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-attribute">log-bin</span>=mysql-bin #开启二进制日志<br><span class="hljs-attribute">server-id</span>=1       #主机设置<span class="hljs-attribute">server-id</span>=1 主机设置<span class="hljs-attribute">server-id</span>=2<br></code></pre></td></tr></table></figure><p><img src="/2023/11/28/MySQL%E5%AE%89%E8%A3%85%E5%8F%8A%E4%B8%BB%E4%BB%8E%E9%85%8D%E7%BD%AE/image-20221128112011772.png"></p><p>修改后重启mysql</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">systemctl restart mysql</span><br></code></pre></td></tr></table></figure><h2 id="主库"><a href="#主库" class="headerlink" title="主库"></a>主库</h2><p>给主数据库创建用户并授权：用户：repl 密码：123456  ip填写从库的ip</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">USER</span> <span class="hljs-string">&#x27;repl&#x27;</span>@<span class="hljs-string">&#x27;192.168.139.122&#x27;</span> IDENTIFIED <span class="hljs-keyword">BY</span> <span class="hljs-string">&#x27;123456&#x27;</span>;    //创建用户<br><span class="hljs-keyword">GRANT</span> <span class="hljs-keyword">REPLICATION</span> SLAVE <span class="hljs-keyword">ON</span> *.* <span class="hljs-keyword">TO</span> <span class="hljs-string">&#x27;repl&#x27;</span>@<span class="hljs-string">&#x27;192.168.139.122&#x27;</span>; //授予权限<br>flush <span class="hljs-keyword">privileges</span>;                                          //刷新权限<br></code></pre></td></tr></table></figure><p>查看日志文件的位置和状态</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">SHOW <span class="hljs-keyword">MASTER</span> <span class="hljs-title">STATUS</span>;<br></code></pre></td></tr></table></figure><p><img src="/2023/11/28/MySQL%E5%AE%89%E8%A3%85%E5%8F%8A%E4%B8%BB%E4%BB%8E%E9%85%8D%E7%BD%AE/image-20221128171205911.png"></p><h2 id="从库"><a href="#从库" class="headerlink" title="从库"></a>从库</h2><p>执行同步SQL语句（主库的ip、主机名、登录凭证、二进制文件的名称和位置）</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs routeros">CHANGE MASTER <span class="hljs-keyword">TO</span><br><span class="hljs-attribute">MASTER_HOST</span>=<span class="hljs-string">&#x27;192.168.139.123&#x27;</span>,<br><span class="hljs-attribute">MASTER_USER</span>=<span class="hljs-string">&#x27;repl&#x27;</span>,<br><span class="hljs-attribute">MASTER_PASSWORD</span>=<span class="hljs-string">&#x27;123456&#x27;</span>,<br><span class="hljs-attribute">MASTER_LOG_FILE</span>=<span class="hljs-string">&#x27;mysql-bin.000005&#x27;</span>,<br>MASTER_LOG_POS= 1765;<br></code></pre></td></tr></table></figure><p>启动slave同步进程</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh"><span class="hljs-literal">start</span> <span class="hljs-literal">slave</span>;<br></code></pre></td></tr></table></figure><p><img src="/2023/11/28/MySQL%E5%AE%89%E8%A3%85%E5%8F%8A%E4%B8%BB%E4%BB%8E%E9%85%8D%E7%BD%AE/image-20221128171241003.png"></p><p>查看slave状态</p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs maxima"><span class="hljs-built_in">show</span> slave <span class="hljs-built_in">status</span>\G;<br></code></pre></td></tr></table></figure><p><img src="/2023/11/28/MySQL%E5%AE%89%E8%A3%85%E5%8F%8A%E4%B8%BB%E4%BB%8E%E9%85%8D%E7%BD%AE/image-20221128171147497.png"></p><h1 id="MySQL主主"><a href="#MySQL主主" class="headerlink" title="MySQL主主"></a>MySQL主主</h1><h2 id="192-168-139-122（从库）"><a href="#192-168-139-122（从库）" class="headerlink" title="192.168.139.122（从库）"></a>192.168.139.122（从库）</h2><p>给主数据库创建用户并授权：用户：repl 密码：123456  ip填写从库的ip</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">USER</span> <span class="hljs-string">&#x27;repl&#x27;</span>@<span class="hljs-string">&#x27;192.168.139.123&#x27;</span> IDENTIFIED <span class="hljs-keyword">BY</span> <span class="hljs-string">&#x27;123456&#x27;</span>;    //创建用户<br><span class="hljs-keyword">GRANT</span> <span class="hljs-keyword">REPLICATION</span> SLAVE <span class="hljs-keyword">ON</span> *.* <span class="hljs-keyword">TO</span> <span class="hljs-string">&#x27;repl&#x27;</span>@<span class="hljs-string">&#x27;192.168.139.123&#x27;</span>; //授予权限<br>flush <span class="hljs-keyword">privileges</span>;                                          //刷新权限<br></code></pre></td></tr></table></figure><p>查看日志文件的位置和状态</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">SHOW <span class="hljs-keyword">MASTER</span> <span class="hljs-title">STATUS</span>;<br></code></pre></td></tr></table></figure><p><img src="/2023/11/28/MySQL%E5%AE%89%E8%A3%85%E5%8F%8A%E4%B8%BB%E4%BB%8E%E9%85%8D%E7%BD%AE/image-20221128175541772.png"></p><h2 id="192-168-139-123（主库）"><a href="#192-168-139-123（主库）" class="headerlink" title="192.168.139.123（主库）"></a>192.168.139.123（主库）</h2><p>执行同步SQL语句（主库的ip、主机名、登录凭证、二进制文件的名称和位置）</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs routeros">CHANGE MASTER <span class="hljs-keyword">TO</span><br><span class="hljs-attribute">MASTER_HOST</span>=<span class="hljs-string">&#x27;192.168.139.122&#x27;</span>,<br><span class="hljs-attribute">MASTER_USER</span>=<span class="hljs-string">&#x27;repl&#x27;</span>,<br><span class="hljs-attribute">MASTER_PASSWORD</span>=<span class="hljs-string">&#x27;123456&#x27;</span>,<br><span class="hljs-attribute">MASTER_LOG_FILE</span>=<span class="hljs-string">&#x27;mysql-bin.000001&#x27;</span>,<br>MASTER_LOG_POS= 3941;<br></code></pre></td></tr></table></figure><p>启动slave同步进程</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh"><span class="hljs-literal">start</span> <span class="hljs-literal">slave</span>;<br></code></pre></td></tr></table></figure><p><img src="/2023/11/28/MySQL%E5%AE%89%E8%A3%85%E5%8F%8A%E4%B8%BB%E4%BB%8E%E9%85%8D%E7%BD%AE/image-20221128175706664.png"></p><p>查看slave状态</p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs maxima"><span class="hljs-built_in">show</span> slave <span class="hljs-built_in">status</span>\G;<br></code></pre></td></tr></table></figure><p><img src="/2023/11/28/MySQL%E5%AE%89%E8%A3%85%E5%8F%8A%E4%B8%BB%E4%BB%8E%E9%85%8D%E7%BD%AE/image-20221128180059632.png"></p><h1 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h1><p><img src="/2023/11/28/MySQL%E5%AE%89%E8%A3%85%E5%8F%8A%E4%B8%BB%E4%BB%8E%E9%85%8D%E7%BD%AE/image-20221128171652692.png"></p><blockquote><p>原来是主库repl的plugin是caching_sha2_password 就会导致连接不上，修改为mysql_native_password即可解决。</p></blockquote><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs n1ql"><span class="hljs-keyword">select</span> <span class="hljs-keyword">user</span>,host,password_expired <span class="hljs-keyword">from</span> mysql.<span class="hljs-keyword">user</span>;<br></code></pre></td></tr></table></figure><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs n1ql"><span class="hljs-keyword">SELECT</span> plugin <span class="hljs-keyword">FROM</span> <span class="hljs-symbol">`user`</span> <span class="hljs-keyword">where</span> <span class="hljs-keyword">user</span> = <span class="hljs-string">&#x27;repl&#x27;</span>;<br></code></pre></td></tr></table></figure><p><img src="/2023/11/28/MySQL%E5%AE%89%E8%A3%85%E5%8F%8A%E4%B8%BB%E4%BB%8E%E9%85%8D%E7%BD%AE/image-20221128170747566.png"></p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">USER</span> <span class="hljs-string">&#x27;repl&#x27;</span>@<span class="hljs-string">&#x27;192.168.139.122&#x27;</span> IDENTIFIED <span class="hljs-keyword">WITH</span> mysql_native_password <span class="hljs-keyword">BY</span> <span class="hljs-string">&#x27;123456&#x27;</span>;<br></code></pre></td></tr></table></figure><p><img src="/2023/11/28/MySQL%E5%AE%89%E8%A3%85%E5%8F%8A%E4%B8%BB%E4%BB%8E%E9%85%8D%E7%BD%AE/image-20221128170904840.png"></p>]]></content>
    
    
    <categories>
      
      <category>MySQL</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>MySQL</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Keepalived安装配置</title>
    <link href="/2023/11/23/Keepalived%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/"/>
    <url>/2023/11/23/Keepalived%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><ol><li><p>关闭防火墙</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arduino">systemctl stop firewalld<br></code></pre></td></tr></table></figure></li><li><p>关闭虚拟机内核限制</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs abnf">vi /etc/sysconfig/selinux<br><span class="hljs-attribute">SELINUX</span><span class="hljs-operator">=</span>disabled<br></code></pre></td></tr></table></figure><p><img src="/2023/11/23/Keepalived%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/image-20221122124744680.png"><br>刷新配置 并查看</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">source</span>  /etc/sysconfig/selinux<br>getenforce<br></code></pre></td></tr></table></figure></li></ol><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>上传keepalived 压缩包，解压keepalived</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">tar</span> -zvxf keepalived-<span class="hljs-number">2</span>.<span class="hljs-number">0</span>.<span class="hljs-number">15</span>.tar.gz<br></code></pre></td></tr></table></figure><p>移动keepalived-2.0.15 到&#x2F;usr&#x2F;local目录下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mv</span> keepalived-2.0.15 /usr/local<br><span class="hljs-built_in">mkdir</span> /etc/keepalived<br></code></pre></td></tr></table></figure><p>进入keepalived目录 ,编译、安装</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">cd <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/keepalived-2.0.15/</span><br>.<span class="hljs-regexp">/configure  --prefix=/u</span>sr<span class="hljs-regexp">/local/</span>keepalived<br>make&amp;make install<br></code></pre></td></tr></table></figure><p>keepalived启动脚本变量引用文件，默认文件路径是&#x2F;etc&#x2F;sysconfig&#x2F;，也可以不做软链接，直接修改启动脚本中文件路径即可（安装目录下）</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">cp <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/keepalived/</span>etc<span class="hljs-regexp">/sysconfig/</span>keepalived  <span class="hljs-regexp">/etc/</span>sysconfig/keepalived<br></code></pre></td></tr></table></figure><p>将keepalived主程序加入到环境变量（安装目录下）</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">cp <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/keepalived/</span>sbin<span class="hljs-regexp">/keepalived  /u</span>sr<span class="hljs-regexp">/sbin/</span>keepalived(此命令拷贝的文件为安装目录)<br></code></pre></td></tr></table></figure><p>keepalived启动脚本（源码目录下），放到&#x2F;etc&#x2F;init.d&#x2F;目录下就可以使用service命令便捷调用</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs swift">cp <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/keepalived-2.0.15/</span>keepalived<span class="hljs-regexp">/etc/</span><span class="hljs-keyword">init</span>.d<span class="hljs-regexp">/keepalived /</span>etc<span class="hljs-regexp">/init.d/</span>keepalived   (此命令拷贝的文件为解压目录)<br></code></pre></td></tr></table></figure><p>将配置文件放到默认路径下</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">mkdir <span class="hljs-regexp">/etc/</span>keepalived<br>cp <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/keepalived/</span>etc<span class="hljs-regexp">/keepalived/</span>keepalived.conf <span class="hljs-regexp">/etc/</span>keepalived/keepalived.conf   (此命令拷贝的文件为安装目录)<br></code></pre></td></tr></table></figure><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><p>修改配置文件</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">vi</span> /etc/keepalived/keepalived.<span class="hljs-keyword">conf</span><br></code></pre></td></tr></table></figure><p>修改如下</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><code class="hljs ruby">! <span class="hljs-title class_">Configuration</span> <span class="hljs-title class_">File</span> <span class="hljs-keyword">for</span> keepalived<br><br>global_defs &#123;<br><span class="hljs-comment"># 邮件通知信息</span><br>   notification_email &#123;   <span class="hljs-comment">#定义管理员邮箱信息</span><br>   <span class="hljs-comment"># 定义收件人</span><br>     acassen<span class="hljs-variable">@firewall</span>.loc<br>     failover<span class="hljs-variable">@firewall</span>.loc<br>     sysadmin<span class="hljs-variable">@firewall</span>.loc<br>   &#125;<br>   <span class="hljs-comment"># 定义发件人</span><br>   notification_email_from <span class="hljs-title class_">Alexandre</span>.<span class="hljs-title class_">Cassen</span><span class="hljs-variable">@firewall</span>.loc<br>   <span class="hljs-comment"># SMTP服务器地址</span><br>   smtp_server <span class="hljs-number">192.168</span>.<span class="hljs-number">200.1</span>        <span class="hljs-comment">#定义邮件服务器信息</span><br>   smtp_connect_timeout <span class="hljs-number">30</span><span class="hljs-comment">#定义邮件发送超时时间</span><br>   <span class="hljs-comment"># 路由器标识，一般不用改，也可以写成每个主机自己的主机名 （重点参数）局域网keepalived主机身份标识信息</span><br>   router_id <span class="hljs-variable constant_">LVS_DEVEL</span>           <span class="hljs-comment">#每一个keepalived主机身份标识信息唯一</span><br>   vrrp_skip_check_adv_addr<br>   <span class="hljs-comment">#vrrp_strict   #不注释此处 虚拟机无法Ping通新ip</span><br>   vrrp_garp_interval <span class="hljs-number">0</span><br>   vrrp_gna_interval <span class="hljs-number">0</span><br>&#125;<br><br><span class="hljs-comment"># 一个vrrp_instance就是定义一个虚拟路由器的，实例名称    vrrp协议相关配置（vip地址设置）</span><br>vrrp_instance <span class="hljs-variable constant_">VI_1</span> &#123;   <br>    state <span class="hljs-variable constant_">MASTER</span>      <span class="hljs-comment">#定义初始状态,主节点MASTER备用节点BACKUP</span><br>    interface ens33   <span class="hljs-comment">#和虚拟机网卡一致    表示将生成虚IP地址,设置在指定的网卡上</span><br>    virtual_router_id <span class="hljs-number">51</span><span class="hljs-comment">#表示keepalived家族标识信息</span><br>    priority <span class="hljs-number">100</span>      <span class="hljs-comment">#多个keepalived的优先级   keepalived服务竞选主备服务器优先级设置</span><br>    advert_int <span class="hljs-number">1</span>      <span class="hljs-comment">#通告频率，单位为秒</span><br>    authentication &#123;       <span class="hljs-comment">#主备主机之间通讯认证机制</span><br>        auth_type <span class="hljs-variable constant_">PASS</span>     <span class="hljs-comment">#采用明文认证机制</span><br>        auth_pass <span class="hljs-number">1111</span>     <span class="hljs-comment">#同组的keeplived需要一致   --- 编写明文密码（用于主备认证）</span><br>    &#125;<br>    virtual_ipaddress &#123;<span class="hljs-comment">#设置虚拟IP地址信息</span><br>       <span class="hljs-number">192.168</span>.<span class="hljs-number">110.100</span>     <span class="hljs-comment">#如果和真实机器IP一致不需要配置路由，不一致要配路由</span><br>    &#125;<br>&#125;<br><br>virtual_server <span class="hljs-number">192.168</span>.<span class="hljs-number">110.100</span> <span class="hljs-number">9095</span> &#123;  <span class="hljs-comment">#keepalived ip 端口</span><br>    delay_loop <span class="hljs-number">6</span><br>    lb_algo rr<br>    lb_kind <span class="hljs-variable constant_">NAT</span><br>    persistence_timeout <span class="hljs-number">50</span><br>    protocol <span class="hljs-variable constant_">TCP</span><br>    <br>    <span class="hljs-comment">#sorry_server 192.168.200.200 1358</span><br><br>    real_server <span class="hljs-number">192.168</span>.<span class="hljs-number">139.123</span> <span class="hljs-number">80</span> &#123; <span class="hljs-comment">#虚拟机linux ip  nginx端口</span><br>        weight <span class="hljs-number">1</span><br>        <span class="hljs-variable constant_">HTTP_GET</span> &#123;<br>            url &#123;<br>              path /<br>            &#125;<br>            connect_timeout <span class="hljs-number">3</span><br>            <span class="hljs-keyword">retry</span> <span class="hljs-number">3</span><br>            delay_before_retry <span class="hljs-number">3</span><br>        &#125;<br>    &#125;<br><br>    real_server <span class="hljs-number">192.168</span>.<span class="hljs-number">139.122</span> <span class="hljs-number">80</span> &#123; <span class="hljs-comment">##虚拟机linux ip  nginx端口</span><br>        weight <span class="hljs-number">1</span><br>        <span class="hljs-variable constant_">HTTP_GET</span> &#123;<br>            url &#123;<br>              path /<br>            &#125;<br>            connect_timeout <span class="hljs-number">3</span><br>            <span class="hljs-keyword">retry</span> <span class="hljs-number">3</span><br>            delay_before_retry <span class="hljs-number">3</span><br>        &#125;<br>    &#125;<br></code></pre></td></tr></table></figure><p>启动keepalived  查看keepalived状态</p><figure class="highlight nsis"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs nsis"><span class="hljs-params">system</span>ctl start keepalived<br><span class="hljs-params">system</span>ctl status keepalived<br></code></pre></td></tr></table></figure><p><img src="/2023/11/23/Keepalived%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/image-20221122190548922.png"></p><p>查看keepalived虚拟ip</p><p><img src="/2023/11/23/Keepalived%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/image-20221122174048114.png"></p><p>vip无法ping通 </p><blockquote><p>keepalived.conf中vip配置好后，通过ip addr可以看到vip已经顺利挂载，但是无法ping通，并且防火墙都已关闭，原因是keepalived.conf配置中默认vrrp_strict打开了，需要把它注释掉。重启keepalived即可ping通.</p></blockquote><p>映射端口无法访问 </p><blockquote><p>vip可ping通后，访问vip映射端口无法访问，直接访问real_server的ip和端口可访问。</p></blockquote><p>尝试Ping新ip 192.168.110.100</p><p><img src="/2023/11/23/Keepalived%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/image-20221122174248432.png"></p><p>目前新ip 10.10.10.10 仅限虚拟机本机访问</p><ol><li><p>方式一</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">curl</span> http://<span class="hljs-number">192.168.110.100</span>/<span class="hljs-number">1</span>.txt<br></code></pre></td></tr></table></figure><p><img src="/2023/11/23/Keepalived%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/image-20221123105333874.png"></p></li><li><p>方式二</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx">    <span class="hljs-attribute">links</span> http://192.168.110.100                  <span class="hljs-comment">### links 需要单独下载 yum install links</span><br></code></pre></td></tr></table></figure><p><img src="/2023/11/23/Keepalived%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/image-20221122141528601.png"></p></li></ol><blockquote><p>NAT模式和路由器NAT模式类似,用于访问client和real_server在不同网段实现通信。如果你在一个局域网内做负载均衡选用NAT,那恭喜你,你肯定是无法访问。可以做个NAT模式的测试,需要在keepalived主机上配置双网卡,分别在两个不同网段中,如keepalived主机网卡对client地址为192.168.110.0&#x2F;24,对real_server的地址为192.168.139.0&#x2F;24。vip设置为192.168.110.100，real_server为192.168.139.123,可采用下面的keepalived.conf配置,配置正确后在keepalived主机上执行systemctl restart keepalived.service。从client上执行curl 192.168.110.100发现还是无法访问。这是由于real_server在接收到请求包后找不到路由进行数据返回,此时需要将keepalived主机作为网关,在real_server上添加回程路由route add default gw 192.168.139.123。192.168.139.123即为keepalived主机。考虑keepalived主机一般双机,因此此处可以用keepalived主机的虚拟IP。 现在再执行curl 192.168.110.100就可以正常返回</p></blockquote><h1 id="路由"><a href="#路由" class="headerlink" title="路由"></a>路由</h1><p>想要网络中的机器都能够访问虚拟ip</p><blockquote><p>所有CentOS(Linux)重启 会清空临时路由表，为什么不配置成永久路由，可以讲所有的配置命令 通过shell 编程保存到sh文件中 开机自动运行就重启也能生效，但是不想用了 移除开机自启sh文件即可，而永久路由才要一条一条删。</p></blockquote><h2 id="Linux路由"><a href="#Linux路由" class="headerlink" title="Linux路由"></a>Linux路由</h2><p>开启另外一台虚拟机，尝试ping虚拟ip 这时会发现ping不通</p><p><img src="/2023/11/23/Keepalived%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/image-20221122174616625.png"></p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs cmake">yum <span class="hljs-keyword">install</span> net-tools     <span class="hljs-comment">#如果没有route命令</span><br>route -n                  <span class="hljs-comment">#查看路由表</span><br></code></pre></td></tr></table></figure><p><img src="/2023/11/23/Keepalived%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/image-20221122145128777.png"></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">route</span> add -net <span class="hljs-number">192.168.110.100</span> dev ens33 gw <span class="hljs-number">192.168.139.123</span>                     host 只加主机    net 整个网段<br><span class="hljs-attribute">route</span> add -host <span class="hljs-number">192.168.110.0</span>/<span class="hljs-number">24</span> dev ens33 gw <span class="hljs-number">192.168.139.123</span><br><span class="hljs-comment">### 如果路由加错了 将上面的命令的add 换乘del 就能删除</span><br></code></pre></td></tr></table></figure><p>再次查看路由表，发现出现虚拟ip，尝试ping虚拟ip</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">route</span> -n<br>ping <span class="hljs-number">10.10.10.10</span>                              <br></code></pre></td></tr></table></figure><blockquote><p>意思就是 如果你想找10.10.10.10  你就去找192.168.139.123</p></blockquote><p><img src="/2023/11/23/Keepalived%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/image-20221122175241869.png"></p><h2 id="Windows路由"><a href="#Windows路由" class="headerlink" title="Windows路由"></a>Windows路由</h2><p>以管理员身份打开命令提示符</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">route</span> add <span class="hljs-number">192.168.110.100</span>/<span class="hljs-number">24</span> mask <span class="hljs-number">255.255.255.248</span> <span class="hljs-number">192.168.139.123</span><br><span class="hljs-comment">##delete 删除路由</span><br></code></pre></td></tr></table></figure><p><img src="/2023/11/23/Keepalived%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/image-20221123142355753.png"></p><p>浏览器访问</p><p><img src="/2023/11/23/Keepalived%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/keepalived.gif"></p><h1 id="高可用搭建"><a href="#高可用搭建" class="headerlink" title="高可用搭建"></a>高可用搭建</h1><p>重新找一台虚拟机安装keepalived 修改配置文件如下：#两台虚拟ip统一改为 192.168.139.100 使虚拟ip跟虚拟机的ip在一个网段</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">! Configuration File <span class="hljs-keyword">for</span> keepalived<br><br>global_defs &#123;<br>   notification_email &#123;<br>     <span class="hljs-symbol">acassen@</span>firewall.loc<br>     <span class="hljs-symbol">failover@</span>firewall.loc<br>     <span class="hljs-symbol">sysadmin@</span>firewall.loc<br>   &#125;<br>   notification_email_from Alexandre.<span class="hljs-symbol">Cassen@</span>firewall.loc<br>   smtp_server <span class="hljs-number">192.168</span><span class="hljs-number">.200</span><span class="hljs-number">.1</span><br>   smtp_connect_timeout <span class="hljs-number">30</span><br>   router_id LVS_DEVEL<br>   vrrp_skip_check_adv_addr<br>   #vrrp_strict<br>   vrrp_garp_interval <span class="hljs-number">0</span><br>   vrrp_gna_interval <span class="hljs-number">0</span><br>&#125;<br><br>vrrp_instance VI_1 &#123;<br>    state BACKUP    ##改为BACKUP<br>    <span class="hljs-keyword">interface</span> <span class="hljs-symbol">ens33</span><br>    <span class="hljs-symbol">virtual_router_id</span> <span class="hljs-symbol">51</span><br>    <span class="hljs-symbol">priority</span> <span class="hljs-symbol">60</span>    ##降低优先级<br>    <span class="hljs-symbol">advert_int</span> <span class="hljs-symbol">1</span><br>    <span class="hljs-symbol">authentication</span> &#123;<br>        auth_type PASS<br>        auth_pass <span class="hljs-number">1111</span><br>    &#125;<br>    virtual_ipaddress &#123;<br>        <span class="hljs-number">192.168</span><span class="hljs-number">.139</span><span class="hljs-number">.100</span><br>    &#125;<br>&#125;<br><br>virtual_server <span class="hljs-number">192.168</span><span class="hljs-number">.139</span><span class="hljs-number">.100</span> <span class="hljs-number">80</span> &#123;<br>    delay_loop <span class="hljs-number">6</span><br>    lb_algo rr<br>    lb_kind NAT<br>    persistence_timeout <span class="hljs-number">50</span><br>    protocol TCP<br><br>    #sorry_server <span class="hljs-number">192.168</span><span class="hljs-number">.200</span><span class="hljs-number">.200</span> <span class="hljs-number">1358</span><br><br>    real_server <span class="hljs-number">192.168</span><span class="hljs-number">.139</span><span class="hljs-number">.122</span> <span class="hljs-number">80</span> &#123;<br>        weight <span class="hljs-number">1</span><br>        HTTP_GET &#123;<br>            url &#123;<br>              path /<br>            &#125;<br>            connect_timeout <span class="hljs-number">3</span><br>            retry <span class="hljs-number">3</span><br>            delay_before_retry <span class="hljs-number">3</span><br>        &#125;<br>    &#125;<br><br>    real_server <span class="hljs-number">192.168</span><span class="hljs-number">.139</span><span class="hljs-number">.123</span> <span class="hljs-number">80</span> &#123;<br>        weight <span class="hljs-number">1</span><br>        HTTP_GET &#123;<br>            url &#123;<br>              path /<br>            &#125;<br>            connect_timeout <span class="hljs-number">3</span><br>            retry <span class="hljs-number">3</span><br>            delay_before_retry <span class="hljs-number">3</span><br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>查看第二台的ip   此时第二台没有虚拟ip  虚拟ip在第一台</p><p><img src="/2023/11/23/Keepalived%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/image-20221122160454852.png"></p><p>关闭第一台的keepalived  这时候第一台的虚拟ip没有了 此时的虚拟ip在第二台</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arduino">systemctl stop keepalived<br></code></pre></td></tr></table></figure><p><img src="/2023/11/23/Keepalived%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/image-20221123110347540.png"></p><p>这时候当你访问Tomcat 访问速度就会很慢就需要添加端口转发</p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt;</span><span class="language-bash">windows在keepalived所在的机器没有配置iptables的情况下 看机器性能 网络状态看运气     配置了秒刷</span><br></code></pre></td></tr></table></figure></blockquote><h1 id="端口转发"><a href="#端口转发" class="headerlink" title="端口转发"></a>端口转发</h1><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">yum <span class="hljs-keyword">install</span> iptables-services<br></code></pre></td></tr></table></figure><p>添加对应的ip转发规则</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs css">iptables -t nat -<span class="hljs-selector-tag">A</span> PREROUTING -<span class="hljs-selector-tag">p</span> tcp -d <span class="hljs-number">192.168</span>.<span class="hljs-number">139.100</span> <span class="hljs-attr">--dport</span> <span class="hljs-number">9095</span> -j REDIRECT      添加<br>iptables -t nat -D PREROUTING -<span class="hljs-selector-tag">p</span> tcp -d <span class="hljs-number">192.168</span>.<span class="hljs-number">139.100</span> <span class="hljs-attr">--dport</span> <span class="hljs-number">9095</span> -j REDIRECT      删除<br></code></pre></td></tr></table></figure><p>添加、删除后都需要保存重启服务</p><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs gauss">service iptables <span class="hljs-keyword">save</span><br>systemctl restart iptables.service<br><br>如果新装的centos 需要配置为开机自动运行 并重启虚拟机<br>systemctl <span class="hljs-keyword">enable</span> iptables.service<br></code></pre></td></tr></table></figure><p>第二台虚拟机也需要安装Nginx 安装好之后把第一台Nginx的配置文件拷贝到第二台，并重启Nginx 再到浏览器刷新这时候就可以秒刷了，无论是哪台keepalived都能达到秒刷效果。</p>]]></content>
    
    
    <categories>
      
      <category>中间件</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>Keepalived</tag>
      
      <tag>高可用</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Nginx负载Tomcat</title>
    <link href="/2023/11/14/Nginx%E8%B4%9F%E8%BD%BDTomcat/"/>
    <url>/2023/11/14/Nginx%E8%B4%9F%E8%BD%BDTomcat/</url>
    
    <content type="html"><![CDATA[<h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//</span>www.oracle.com<span class="hljs-regexp">/java/</span>technologies<span class="hljs-regexp">/downloads/</span><br>http:<span class="hljs-regexp">//</span>tomcat.apache.org/<br>http:<span class="hljs-regexp">//</span>nginx.org<span class="hljs-regexp">/download/</span><br></code></pre></td></tr></table></figure><ol><li><p>在 <em>&#x2F;usr</em>  目录下新建一个 ftp 文件夹</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> /usr/ftp<br></code></pre></td></tr></table></figure></li><li><p>把 nginx-1.15.10.tar.gz apache-tomcat-9.0.17.tar.gz jdk-8u181-linux-x64.tar.gz安装包上传到 ftp 目录下                   <a id="环境变量"></a><br><a id="防火墙"></a></p></li><li><p>这里为了后续方便 建议把防火墙关闭</p></li></ol><h2 id="防火墙"><a href="#防火墙" class="headerlink" title="防火墙"></a>防火墙</h2><p>方式一：</p><ul><li>关闭防火墙</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl status firewalld        ====查看防火状态<br>systemctl stop firewalld          ====暂时关闭防火墙<br>systemctl disable firewalld       ====永久关闭防火墙<br>systemctl enable firewalld        ====重启防火墙<br></code></pre></td></tr></table></figure><p>方式二：</p><ul><li>配置防火墙规则</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl start firewalld//启动  <br>systemctl status firewalld //查看状态<br>systemctl stop firewalld //停止<br>systemctl disable firewalld//禁用<br>systemctl enable firewalld.servic//开机自动启动<br>systemctl restart firewalld.service//重启<br>开启某个端口、服务   (--permanent永久生效，没有此参数重启后失效)<br>firewall-cmd --permanent --zone=public --add-port=80/tcp//永久开启80端口<br>firewall-cmd --zone=public --add-port=80/tcp //临时开启80端口<br>firewall-cmd --zone=public --add-service=https //临时<br>firewall-cmd --permanent --zone=public --add-service=https //永久<br>firewall-cmd --zone=public --list-ports//查看开放的端口有哪些<br>firewall-cmd --reload//**重载** 修改配置文件后 使用命令重新加载 更新防火墙规则<br></code></pre></td></tr></table></figure><h1 id="Tomcat安装配置"><a href="#Tomcat安装配置" class="headerlink" title="Tomcat安装配置"></a>Tomcat安装配置</h1><h2 id="JDK安装"><a href="#JDK安装" class="headerlink" title="JDK安装"></a>JDK安装</h2><p>解压</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /usr/ftp<br>tar -zvxf jdk-8u181-linux-x64.tar.gz<br><span class="hljs-built_in">mv</span> jdk1.8.0_181 /usr/local<br></code></pre></td></tr></table></figure><p>把环境变量追加入到  &#x2F;etc&#x2F;profile 下  <strong><a href="#%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F">配置</a></strong></p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">vi</span> /etc/<span class="hljs-keyword">profile</span><br></code></pre></td></tr></table></figure><p>把下方配置追加到 &#x2F;etc&#x2F;profile 尾部 <strong>注意JDK的实际路径</strong></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-built_in">export</span> <span class="hljs-attribute">JAVA_HOME</span>=/usr/local/jdk1.8.0_181<br><span class="hljs-built_in">export</span> <span class="hljs-attribute">JRE_HOME</span>=<span class="hljs-variable">$JAVA_HOME</span>/jre<br><span class="hljs-built_in">export</span> <span class="hljs-attribute">CLASSPATH</span>=<span class="hljs-variable">$CLASSPATH</span>:.:$JRE_HOME/lib:$JAVA_HOME/lib<br><span class="hljs-built_in">export</span> <span class="hljs-attribute">PATH</span>=<span class="hljs-variable">$PATH</span>:$JAVA_HOME/bin:$JRE_HOME/bin<br></code></pre></td></tr></table></figure><p>然后重新配置 profile  使其变量生效</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">source</span> /etc/profile<br></code></pre></td></tr></table></figure><p>输入 java -version 出现如下就说明 JDK 已经配置成功了<br><img src="/2023/11/14/Nginx%E8%B4%9F%E8%BD%BDTomcat/image-20220809163838671.png"></p><h2 id="Tomcat安装"><a href="#Tomcat安装" class="headerlink" title="Tomcat安装"></a>Tomcat安装</h2><p>解压</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">cd</span> /usr/ftp<br><span class="hljs-attribute">tar</span> -zvxf apache-tomcat-<span class="hljs-number">9</span>.<span class="hljs-number">0</span>.<span class="hljs-number">17</span>.tar.gz<br><span class="hljs-attribute">mv</span> apache-tomcat-<span class="hljs-number">9</span>.<span class="hljs-number">0</span>.<span class="hljs-number">17</span> /usr/local/tomcat1  <br></code></pre></td></tr></table></figure><p>把环境变量追加入到  &#x2F;etc&#x2F;profile 下  <strong><a href="#%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F">配置</a></strong></p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">vi</span> /etc/<span class="hljs-keyword">profile</span><br></code></pre></td></tr></table></figure><p>把下方配置追加到 &#x2F;etc&#x2F;profile 尾部 <strong>注意tomcat的实际路径</strong></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-built_in">export</span> <span class="hljs-attribute">CATALINA_BASE</span>=/usr/local/tomcat1<br><span class="hljs-built_in">export</span> <span class="hljs-attribute">CATALINA_HOME</span>=<span class="hljs-variable">$CATALINA_BASE</span><br><span class="hljs-built_in">export</span> <span class="hljs-attribute">TOMCAT_HOME</span>=<span class="hljs-variable">$CATALINA_BASE</span><br></code></pre></td></tr></table></figure><p>然后重新配置 profile  使其变量生效</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">source</span> /etc/profile<br></code></pre></td></tr></table></figure><p>启动 Tomcat<br>如果是在 tomcat 下的 bin 目录下就执行</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm"><span class="hljs-keyword">sh </span>startup.<span class="hljs-keyword">sh </span>                  <br></code></pre></td></tr></table></figure><p>在其他目录下执行</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stata"><span class="hljs-keyword">sh</span> /usr/<span class="hljs-keyword">local</span>/tomcat1/bin/startup.<span class="hljs-keyword">sh</span><br></code></pre></td></tr></table></figure><p>停止运行    同上</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs abnf">sh shutdown.sh<span class="hljs-operator">=</span><span class="hljs-operator">=</span><span class="hljs-operator">=</span><span class="hljs-operator">=</span>bin目录下<br>sh /usr/local/tomcat1/bin/shutdown.sh  <span class="hljs-operator">=</span><span class="hljs-operator">=</span><span class="hljs-operator">=</span><span class="hljs-operator">=</span>其他目录下<br></code></pre></td></tr></table></figure><ul><li>浏览器输入http:&#x2F;&#x2F;【虚拟机ip】:8080 【Tomcat默认端口】 例如<a href="http://192.168.139.123:8080/">http://192.168.139.123:8080</a></li><li>显示如下页面就表示安装成功了</li><li>如果没有 则需要放行 8080 端口 <strong><a href="#%E9%98%B2%E7%81%AB%E5%A2%99">防火墙配置</a></strong><br><img src="/2023/11/14/Nginx%E8%B4%9F%E8%BD%BDTomcat/image-20220809163906881.png"></li></ul><h1 id="Nginx安装配置"><a href="#Nginx安装配置" class="headerlink" title="Nginx安装配置"></a>Nginx安装配置</h1><h2 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h2><p>正式安装Nginx之前需要给操作系统下载好必要的依赖</p><blockquote><p>yum install gcc gcc-c++ openssl automake autoconf make libtool pcre pcre-devel zlib openssl-devel zlib-devel</p></blockquote><h2 id="创建-Nginx-用户组"><a href="#创建-Nginx-用户组" class="headerlink" title="创建 Nginx 用户组"></a>创建 Nginx 用户组</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">groupadd nginx   <br>useradd -m -s <span class="hljs-regexp">/sbin/</span>nologin -g nginx nginx<br></code></pre></td></tr></table></figure><h2 id="安装编译"><a href="#安装编译" class="headerlink" title="安装编译"></a>安装编译</h2><p>进入Nginx解压目录下 安装指定到 &#x2F;usr&#x2F;local&#x2F; 目录下的 nginx-1.15.10、编译</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /usr/ftp<br>tar -zvxf nginx-1.15.10.tar.gz<br><span class="hljs-built_in">mv</span> nginx-1.15.10 /usr/local     <br><span class="hljs-built_in">cd</span> /usr/local/nginx-1.15.10<br>./configure --prefix=/usr/local/nginx <br>make &amp;&amp; make install<br></code></pre></td></tr></table></figure><h2 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h2><p>超级管理员运行 Nginx</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">sudo <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/nginx/</span>sbin/nginx<br>sudo <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/nginx/</span>sbin/nginx -s reload             ---重启<br></code></pre></td></tr></table></figure><ul><li><p>如果报如下错误表示少了 logs 文件夹需要在 <strong>&#x2F;usr&#x2F;local&#x2F;nginx-1.15.10</strong> 创建一个 logs 文件夹 然后再次执行启动命令<br><img src="/2023/11/14/Nginx%E8%B4%9F%E8%BD%BDTomcat/image-20220809163918065.png"></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">mkdir</span> logs                           ###注意是在 /usr/local/nginx-<span class="hljs-number">1</span>.<span class="hljs-number">15</span>.<span class="hljs-number">10</span> 目录下创建<br></code></pre></td></tr></table></figure></li><li><p>浏览器输入http:&#x2F;&#x2F;【虚拟机ip】:80 【nginx默认端口】 显示如下页面就表示安装成功了</p></li><li><p>如果没有 则需要放行 80 端口 <strong><a href="#%E9%98%B2%E7%81%AB%E5%A2%99">防火墙配置</a></strong><br><img src="/2023/11/14/Nginx%E8%B4%9F%E8%BD%BDTomcat/image-20220809163926072.png"></p></li><li><p>配置nginx</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stata">vi /usr/<span class="hljs-keyword">local</span>/nginx/<span class="hljs-keyword">conf</span>/nginx.<span class="hljs-keyword">conf</span><br></code></pre></td></tr></table></figure></li><li><p>端口号配置    默认端口 80<br><img src="/2023/11/14/Nginx%E8%B4%9F%E8%BD%BDTomcat/image-20220809163939897.png"></p></li><li><p>集群配置<br><img src="/2023/11/14/Nginx%E8%B4%9F%E8%BD%BDTomcat/image-20220809163947407.png"></p></li></ul><h1 id="Nginx代理负载Tomcat"><a href="#Nginx代理负载Tomcat" class="headerlink" title="Nginx代理负载Tomcat"></a>Nginx代理负载Tomcat</h1><blockquote><p>负载均衡<br>数以万计算 百万 千万的用户 同时访问同一台服务器，再好的性能也扛不住。<br>负载均衡就是 准备了很多台镜像服务器，但是由一个代理服务器帮助用户选择内容服务器。<br>代理  张三 和李四 都是菜贩 摊位挨着，李四上厕所了，让张三代理一下,有人来买李四的菜吗，拿  李四的 菜 收的钱放李四的盒子  找的钱从李四的盒子 （这些事都是张三代理）</p></blockquote><h2 id="Tomcat配置"><a href="#Tomcat配置" class="headerlink" title="Tomcat配置"></a>Tomcat配置</h2><p>复制多个 tomcat </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /usr/local/<br><span class="hljs-built_in">cp</span> -r tomcat1 tomcat2<br><span class="hljs-built_in">cp</span> -r tomcat1 tomcat3<br></code></pre></td></tr></table></figure><p>加入 tomcat2 tomcat3 的环境变量</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs routeros">vi /etc<span class="hljs-built_in">/profile</span><br><span class="hljs-built_in"></span>在 Tomcat1 下方添加 Tomcat2 Tomcat3<br><span class="hljs-comment">##### Tomcat2 #####</span><br><span class="hljs-built_in">export</span> <span class="hljs-attribute">CATALINA_BASE2</span>=/usr/local/tomcat2<br><span class="hljs-built_in">export</span> <span class="hljs-attribute">CATALINA_HOME2</span>=<span class="hljs-variable">$CATALINA_BASE2</span><br><span class="hljs-built_in">export</span> <span class="hljs-attribute">TOMCAT_HOME2</span>=<span class="hljs-variable">$CATALINA_BASE2</span><br><span class="hljs-comment">##### Tomcat3 #####</span><br><span class="hljs-built_in">export</span> <span class="hljs-attribute">CATALINA_BASE3</span>=/usr/local/tomcat3<br><span class="hljs-built_in">export</span> <span class="hljs-attribute">CATALINA_HOME3</span>=<span class="hljs-variable">$CATALINA_BASE3</span><br><span class="hljs-built_in">export</span> <span class="hljs-attribute">TOMCAT_HOME3</span>=<span class="hljs-variable">$CATALINA_BASE3</span><br></code></pre></td></tr></table></figure><blockquote><p>配置多个tomcat为什么需要在&#x2F;etc&#x2F;profile 修改多个 tomcat 设置</p><p>如果不配置，哪个tomcat先启动就认谁的，例如tomcat1设置为123，tomcat2设置为abc，1先启动显示123 ，2先启动就会显示abc</p><p>shutdown.sh有时候并不能关闭服务器</p><p>ps –ef|grep tomcat &#x3D;&#x3D;ps 查看 grep过滤 tomcat想在进程中查找的程序名</p><p>找到进程号 使用 kill -9 +进程号让其停止运行<br>然后重新配置 profile  使其变量生效</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">source</span> /etc/profile<br></code></pre></td></tr></table></figure><p>修改 tomcat2   tomcat3 server.xml中的端口号<br>tomcat2      如下4处端口依次 +1</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">vi /usr/<span class="hljs-keyword">local</span>/tomcat2/conf/<span class="hljs-keyword">server</span>.xml<br></code></pre></td></tr></table></figure><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">22 </span>&lt;Server port=<span class="hljs-string">&quot;8006&quot;</span> shutdown=<span class="hljs-string">&quot;SHUTDOWN&quot;</span>&gt;             <span class="hljs-number">8005</span>&gt;<span class="hljs-number">8006</span><br><span class="hljs-symbol">69 </span>    &lt;Connector port=<span class="hljs-string">&quot;8081&quot;</span> protocol=<span class="hljs-string">&quot;HTTP/1.1&quot;</span>       <span class="hljs-number">8080</span>&gt;<span class="hljs-number">8081</span><br><span class="hljs-symbol">70 </span>               connectionTimeout=<span class="hljs-string">&quot;20000&quot;</span><br><span class="hljs-symbol">71 </span>               redirectPort=<span class="hljs-string">&quot;8443&quot;</span> /&gt;<br><span class="hljs-symbol">116 </span>    &lt;Connector port=<span class="hljs-string">&quot;8010&quot;</span> protocol=<span class="hljs-string">&quot;AJP/1.3&quot;</span> redirectPort=<span class="hljs-string">&quot;8444&quot;</span> /&gt;  <span class="hljs-number">8009</span>&gt;<span class="hljs-number">8010</span>    <span class="hljs-number">8443</span>&gt;<span class="hljs-number">8444</span><br></code></pre></td></tr></table></figure><p>tomcat3</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">vi /usr/<span class="hljs-keyword">local</span>/tomcat3/conf/<span class="hljs-keyword">server</span>.xml<br></code></pre></td></tr></table></figure><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">22 </span>&lt;Server port=<span class="hljs-string">&quot;8007&quot;</span> shutdown=<span class="hljs-string">&quot;SHUTDOWN&quot;</span>&gt;             <span class="hljs-number">8005</span>&gt;<span class="hljs-number">8007</span><br><span class="hljs-symbol">69 </span>    &lt;Connector port=<span class="hljs-string">&quot;8082&quot;</span> protocol=<span class="hljs-string">&quot;HTTP/1.1&quot;</span>       <span class="hljs-number">8080</span>&gt;<span class="hljs-number">8082</span><br><span class="hljs-symbol">70 </span>               connectionTimeout=<span class="hljs-string">&quot;20000&quot;</span><br><span class="hljs-symbol">71 </span>               redirectPort=<span class="hljs-string">&quot;8443&quot;</span> /&gt;<br><span class="hljs-symbol">116 </span>    &lt;Connector port=<span class="hljs-string">&quot;8011&quot;</span> protocol=<span class="hljs-string">&quot;AJP/1.3&quot;</span> redirectPort=<span class="hljs-string">&quot;8445&quot;</span> /&gt;  <span class="hljs-number">8009</span>&gt;<span class="hljs-number">8011</span>    <span class="hljs-number">8443</span>&gt;<span class="hljs-number">8445</span><br></code></pre></td></tr></table></figure><p>启动 tomcat2  tomcat3</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stata"><span class="hljs-keyword">sh</span> /usr/<span class="hljs-keyword">local</span>/tomcat2/bin/startup.<span class="hljs-keyword">sh</span><br><span class="hljs-keyword">sh</span> /usr/<span class="hljs-keyword">local</span>/tomcat3/bin/startup.<span class="hljs-keyword">sh</span><br></code></pre></td></tr></table></figure><p><strong>注意对应关系</strong><br><img src="/2023/11/14/Nginx%E8%B4%9F%E8%BD%BDTomcat/image-20220809163959404.png"><br><img src="/2023/11/14/Nginx%E8%B4%9F%E8%BD%BDTomcat/image-20220809164010447.png"></p><blockquote><p>如何理解，在没有配置tomcat特殊的系统变量的情况下</p><ol><li><p>先启动tomcat1，再启动tomcat2 ，查看只有tomcat1，如果先启动tomcat2，再启动tomcat 只有 tomcat2（谁先启动，谁的路径就注册成了临时的系统路径）</p></li><li><p>明明tomcat2在执行，执行tomcat1的关闭脚本sh,结果tomcat2被关了</p></li></ol><p>再理解 ，配置profile（系统环境设置）之后，每个tomcat的catalina.sh就不找别人的路径了原因就是因为他找到 了路径</p></blockquote><h2 id="Nginx配置"><a href="#Nginx配置" class="headerlink" title="Nginx配置"></a>Nginx配置</h2><p>找到 Server 修改端口</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">41</span>     server &#123;<br><span class="hljs-attribute">42</span>         listen       <span class="hljs-number">9090</span>;###修改默认端口<span class="hljs-number">80</span>&gt;<span class="hljs-number">9090</span>，也可以不修改<br><span class="hljs-attribute">43</span>         server_name  localhost;<br>       <span class="hljs-comment">#集群配置</span><br><span class="hljs-attribute">35</span>     upstream tomcats &#123;<br><span class="hljs-attribute">36</span>       server <span class="hljs-number">192.168.139.123:8080</span> weight=<span class="hljs-number">1</span>;#服务器集群，weight 权重<br><span class="hljs-attribute">37</span>       server <span class="hljs-number">192.168.139.123:8081</span> weight=<span class="hljs-number">1</span>;<br><span class="hljs-attribute">38</span>       server <span class="hljs-number">192.168.139.123:8082</span> weight=<span class="hljs-number">1</span>;<br><span class="hljs-attribute">39</span>         &#125;<br></code></pre></td></tr></table></figure><p>修改配置文件后<br>在 Server 中的 location &#x2F;中添加  proxy_pass  <a href="http://tomcats/">http://tomcats</a>;  tomcats 和前面的 upstream 的名字相同 配置完效果如下</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-section">location</span> / &#123;<br>    <span class="hljs-comment">#root   html;</span><br>    <span class="hljs-comment">#index  index.html index.htm;</span><br>    <span class="hljs-attribute">proxy_set_header</span> HOST <span class="hljs-variable">$host</span>;<br>    <span class="hljs-attribute">proxy_set_header</span> X-Forwarded-Proto <span class="hljs-variable">$scheme</span>;<br>    <span class="hljs-attribute">proxy_set_header</span> X-Real-IP <span class="hljs-variable">$remote_addr</span>;<br>    <span class="hljs-attribute">proxy_set_header</span> X-Forwarded-For <span class="hljs-variable">$proxy_add_x_forwarded_for</span>;<br>    <span class="hljs-attribute">proxy_pass</span>   http://tomcats;<br>&#125;<br></code></pre></td></tr></table></figure><p>找到在每个tomcat的 webapp文件夹下的ROOT文件夹 新建1.txt文件，并添加上文字</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">echo tomcat1 &gt; <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/tomcat1/</span>webapps<span class="hljs-regexp">/ROOT/</span><span class="hljs-number">1</span>.txt<br>echo tomcat2 &gt; <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/tomcat2/</span>webapps<span class="hljs-regexp">/ROOT/</span><span class="hljs-number">1</span>.txt<br>echo tomcat3 &gt; <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/tomcat3/</span>webapps<span class="hljs-regexp">/ROOT/</span><span class="hljs-number">1</span>.txt<br></code></pre></td></tr></table></figure><p>然后进入浏览器在，浏览器中使用 http:&#x2F;&#x2F;虚拟机IP：修改的Nginx端口&#x2F;1.txt 例如 <a href="http://192.168.139.123:9090/1.txt">http://192.168.139.123:9090/1.txt</a><br><img src="/2023/11/14/Nginx%E8%B4%9F%E8%BD%BDTomcat/%E8%B4%9F%E8%BD%BD.gif"><br>到这里就基本实现了 Nginx 负载多个 Tomcat </p>]]></content>
    
    
    <categories>
      
      <category>中间件</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>Tomcat</tag>
      
      <tag>Nginx</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
