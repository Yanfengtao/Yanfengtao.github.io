<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Docker理解与安装</title>
    <link href="/2022/11/30/Docker%E7%90%86%E8%A7%A3%E4%B8%8E%E5%AE%89%E8%A3%85/"/>
    <url>/2022/11/30/Docker%E7%90%86%E8%A7%A3%E4%B8%8E%E5%AE%89%E8%A3%85/</url>
    
    <content type="html"><![CDATA[<h1 id="什么是Docker"><a href="#什么是Docker" class="headerlink" title="什么是Docker"></a>什么是Docker</h1><blockquote><p>Docker 图标鲸鱼背着集装箱，码头工人，整体搬运，是一种虚拟化技术，虚拟机，通过与操作系统协商独占硬件资源（磁盘内存等）独立一个进程，里面软件需要想普通软件一样安装，所谓运行软件，将文件中的内容搬运到内存中，让cpu进行运算（各个任务之间需要调度），以前虚拟出2个不干扰的程序（2个tomcat），除了tomcat本身需要的资源，还需要虚拟机的操作系统额外占用的资源，将虚拟任务 虚拟成线程让docker管理，真实机器操作系统只需要和docker交互就可以了。</p><p>实现所谓的虚拟技术，就是资源可用， 磁盘可访问（docker安装有自己的文件夹，安装的虚拟线程tomcat 也就在这个文件里面保存文件，cpu 虚拟线程找docker进程协调资源，docker的进程找操作系统协调资源，网络各个虚拟线程和docker进程之间是桥接关系，docker安装完成会装一个虚拟网卡）</p></blockquote><h1 id="Docker安装"><a href="#Docker安装" class="headerlink" title="Docker安装"></a>Docker安装</h1><h2 id="yum-安装"><a href="#yum-安装" class="headerlink" title="yum 安装"></a>yum 安装</h2><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">yum <span class="hljs-keyword">install</span> docker<br></code></pre></td></tr></table></figure><p>启动Docker</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">systemctl <span class="hljs-literal">start</span> docker<br></code></pre></td></tr></table></figure><p>安装好后 配置国内镜像源</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">curl -sSL https:<span class="hljs-regexp">//g</span>et.daocloud.io<span class="hljs-regexp">/daotools/</span>set_mirror.sh | sh -s http:<span class="hljs-regexp">//</span>f1361db2.m.daocloud.io<br></code></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs awk">vi  <span class="hljs-regexp">/etc/</span>docker/daemon.json<br><br>&#123;<br>     <span class="hljs-string">&quot;registry-mirrors&quot;</span>: [<br>         <span class="hljs-string">&quot;https://registry.docker-cn.com&quot;</span>,<br>         <span class="hljs-string">&quot;http://hub-mirror.c.163.com&quot;</span>,<br>         <span class="hljs-string">&quot;https://docker.mirrors.ustc.edu.cn&quot;</span><br>     ]<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/2022/11/30/Docker%E7%90%86%E8%A7%A3%E4%B8%8E%E5%AE%89%E8%A3%85/clip_image002-1712382897721-1.jpg"></p><p> 查看已下载的镜像（就是静态的模板软件）</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">docker images</span><br></code></pre></td></tr></table></figure><p>拉取Redis镜像</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">docker pull redis</span><br></code></pre></td></tr></table></figure><p><img src="/2022/11/30/Docker%E7%90%86%E8%A7%A3%E4%B8%8E%E5%AE%89%E8%A3%85/clip_image004.jpg"></p><blockquote><p>创建一个容器的时候，docker 会自动对它进行命名</p><p><strong>-P</strong> <strong>：</strong>是容器内部端口<strong>随机</strong>映射到主机的端口。</p><p><strong>-p</strong> <strong>：</strong>是容器内部端口绑定到<strong>指定</strong>的主机端口，默认都是绑定 tcp 端口，如果要绑定 UDP 端口，可以在端口后面加上 <strong>&#x2F;udp</strong>。</p><p><strong>–name</strong> <strong>：</strong>命名容器。</p><p><strong>-d</strong>：指定 docker 网络类型，有 bridge、overlay。</p><p>-v $PWD&#x2F;test：&#x2F;test：将主机中当前目录下的test 挂载到容器的 &#x2F;test。</p></blockquote><p>运行Redis容器</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">docker</span> run --name redis -d -p <span class="hljs-number">6379</span>:<span class="hljs-number">6379</span> redis:latest<br></code></pre></td></tr></table></figure><p>查看所有的容器</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">docker ps -<span class="hljs-selector-tag">a</span><br></code></pre></td></tr></table></figure><p>启动Redis容器</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">docker <span class="hljs-literal">start</span> redis<br></code></pre></td></tr></table></figure><p>物理机访问</p><p><img src="/2022/11/30/Docker%E7%90%86%E8%A7%A3%E4%B8%8E%E5%AE%89%E8%A3%85/clip_image006.jpg"></p><p>可以进入 运行中的容器 容器名字 不能进 就使用ID</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker <span class="hljs-built_in">exec</span> -it redis /bin/bash<br></code></pre></td></tr></table></figure><p>进入容器 没有vi命令 编辑需要安装vim</p><p>如果直接敲apt-get install vim命令则会有如下提示</p><p><img src="/2022/11/30/Docker%E7%90%86%E8%A7%A3%E4%B8%8E%E5%AE%89%E8%A3%85/clip_image008.jpg"></p><p>我们需要先敲入apt-get update命令，这个命令的作用是：同步 &#x2F;etc&#x2F;apt&#x2F;sources.list 和 &#x2F;etc&#x2F;apt&#x2F;sources.list.d 中列出的源的索引，这样才能获取到最新的软件包。</p><p><img src="/2022/11/30/Docker%E7%90%86%E8%A7%A3%E4%B8%8E%E5%AE%89%E8%A3%85/clip_image010.jpg"></p><p>然后使用apt-get install vim安装vim。</p><p>海外源 网络慢</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mv</span> /etc/apt/sources.list /etc/apt/sources.list.bak<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;deb http://mirrors.163.com/debian/ jessie main non-free contrib&quot;</span> &gt;&gt;<br>/etc/apt/sources.list<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;deb http://mirrors.163.com/debian/ jessie-proposed-updates main non-free contrib&quot;</span> &gt;&gt;/etc/apt/sources.list<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;deb-src http://mirrors.163.com/debian/ jessie main non-free contrib&quot;</span> &gt;&gt;/etc/apt/sources.list<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;deb-src http://mirrors.163.com/debian/ jessie-proposed-updates main non-free contrib&quot;</span> &gt;&gt;/etc/apt/sources.list<br></code></pre></td></tr></table></figure><p>如果要发布项目 建立好 test 项目与 html 文件 拷贝test目录到docker中的tomcat的webapps中，需要主要查看docker中 tomcat的安装路径（pwd）</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">docker cp <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/tomcat/</span>webapps tomcat:<span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/tomcat/</span>webapps/<br></code></pre></td></tr></table></figure><p><img src="/2022/11/30/Docker%E7%90%86%E8%A7%A3%E4%B8%8E%E5%AE%89%E8%A3%85/image-20221130173819977.png"></p><p>将容器中的文件拷贝出来</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">docker cp nginx:<span class="hljs-regexp">/etc/</span>nginx<span class="hljs-regexp">/nginx.conf /u</span>sr<span class="hljs-regexp">/ftp/</span>nginx.conf<br>docker cp <span class="hljs-regexp">/usr/</span>ftp<span class="hljs-regexp">/nginx.conf nginx:/</span>etc<span class="hljs-regexp">/nginx/</span>nginx.conf<br></code></pre></td></tr></table></figure><h1 id="私服搭建"><a href="#私服搭建" class="headerlink" title="私服搭建"></a>私服搭建</h1><p>为什么要搭建本地仓库？</p><blockquote><p>Docker 运行软件是由镜像 images 产生container 容器来运行，本来是从docker中央仓库或者镜像仓库。</p><p>如果自己在公司局域网中要快速搭建docker环境就需要搭建本地仓库，搭建本地仓库的电脑可以把公共仓库中的镜像直接上传到本地仓库，也可以把自己修改了配置的容器打包成自己的镜像上传到本地仓库就大大节约了下载和每一台都要重新配置的时间</p></blockquote><p>docker下载registry软件</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">docker pull daocloud.io<span class="hljs-regexp">/library/</span>registry:latest<br></code></pre></td></tr></table></figure><p>查看镜像</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">docker images</span><br></code></pre></td></tr></table></figure><p>生成容器和端口映射</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">docker <span class="hljs-built_in">run</span> -d -p 5000:5000 <span class="hljs-attribute">--restart</span>=always --name myregistry daocloud.io/library/registry:latest<br></code></pre></td></tr></table></figure><p>将容器打包贴自己的标签 例如 我设置自定义名字为 redis 标tag也可以理解为版本号my</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim">docker <span class="hljs-keyword">tag</span> docker.io/tomca<span class="hljs-variable">t:latest</span> localhos<span class="hljs-variable">t:5000</span>/<span class="hljs-keyword">redi</span><span class="hljs-variable">s:my</span><br></code></pre></td></tr></table></figure><p>推送到指定仓库</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim">docker push localhos<span class="hljs-variable">t:5000</span>/<span class="hljs-keyword">redi</span><span class="hljs-variable">s:my</span><br></code></pre></td></tr></table></figure><p>查看指定仓库的资源 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl http://localhost:5000/v2/_catalog<br></code></pre></td></tr></table></figure><p><img src="/2022/11/30/Docker%E7%90%86%E8%A7%A3%E4%B8%8E%E5%AE%89%E8%A3%85/clip_image012.jpg"></p><p>查看指定镜像的版本</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">curl http:<span class="hljs-regexp">//</span><span class="hljs-number">192.168</span>.<span class="hljs-number">139.123</span>:<span class="hljs-number">5000</span><span class="hljs-regexp">/v2/</span>redis<span class="hljs-regexp">/tags/</span>list<br></code></pre></td></tr></table></figure><p><img src="/2022/11/30/Docker%E7%90%86%E8%A7%A3%E4%B8%8E%E5%AE%89%E8%A3%85/clip_image014.jpg"></p><p>其他电脑如何获取资源</p><p>其他机器要从指定的仓库拉取镜像，首先要保证上述的网址能够打开</p><p><a href="http://192.168.139.123:5000/v2/redis/tags/list">http://192.168.139.123:5000/v2/redis/tags/list</a></p><p>修改本地docker deamon.json</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">vi <span class="hljs-regexp">/etc/</span>docker/daemon.json<br></code></pre></td></tr></table></figure><p>在默认资源的后面添加指定仓库</p><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs prolog">&#123;<br><span class="hljs-string">&quot;registry-mirrors&quot;</span>: [<br><span class="hljs-string">&quot;https://registry.docker-cn.com&quot;</span>,<br><span class="hljs-string">&quot;http://hub-mirror.c.163.com&quot;</span>,<br><span class="hljs-string">&quot;https://docker.mirrors.ustc.edu.cn&quot;</span><br>],<br><span class="hljs-string">&quot;insecure-registries&quot;</span>:[<span class="hljs-string">&quot;192.168.139.123:5000&quot;</span>]<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/2022/11/30/Docker%E7%90%86%E8%A7%A3%E4%B8%8E%E5%AE%89%E8%A3%85/clip_image016.jpg"></p><p>从指定仓库拉取 指定版本的指定镜像 ，名称要全部正确</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">docker</span> pull <span class="hljs-number">192.168.139.123</span>/redis:my<br></code></pre></td></tr></table></figure><p><strong>配置</strong> <strong>DNS</strong></p><p>我们可以在宿主机的 &#x2F;etc&#x2F;docker&#x2F;daemon.json 文件中增加以下内容来设置全部容器的 DNS：</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs ada">&#123;<br> <span class="hljs-string">&quot;dns&quot;</span> : [<br> <span class="hljs-string">&quot;114.114.114.114&quot;</span>,<br>  <span class="hljs-string">&quot;8.8.8.8&quot;</span><br> ]<br>&#125;<br></code></pre></td></tr></table></figure><p>设置后，启动容器的 DNS 会自动配置为 114.114.114.114 和 8.8.8.8。</p><p>配置完，需要重启 docker 才能生效。</p><p>查看容器的 DNS 是否生效可以使用以下命令，它会输出容器的 DNS 信息：</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile">docker <span class="hljs-keyword">run</span><span class="language-bash"> -it --<span class="hljs-built_in">rm</span> centos <span class="hljs-built_in">cat</span> etc/resolv.conf</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>运维</tag>
      
      <tag>Docker</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Elasticsearch安装配置</title>
    <link href="/2022/11/29/Elasticsearch%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/"/>
    <url>/2022/11/29/Elasticsearch%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><p>上传 elasticsearch-7.9.3-linux-x86_64.tar 解压</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">tar</span> -zvxf elasticsearch-<span class="hljs-number">7</span>.<span class="hljs-number">9</span>.<span class="hljs-number">3</span>-linux-x86_64.tar.gz<br></code></pre></td></tr></table></figure><p>拷贝到 &#x2F;usr&#x2F;local&#x2F;es 目录下 </p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">cp</span> -r /usr/ftp/elasticsearch-<span class="hljs-number">7</span>.<span class="hljs-number">9</span>.<span class="hljs-number">3</span> /usr/local/es<br></code></pre></td></tr></table></figure><h1 id="安装配置"><a href="#安装配置" class="headerlink" title="安装配置"></a>安装配置</h1><p>修改配置</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">vi</span> /usr/local/es/elasticsearch-<span class="hljs-number">7</span>.<span class="hljs-number">9</span>.<span class="hljs-number">3</span>/config/elasticsearch.yml<br></code></pre></td></tr></table></figure><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">cluster.name:</span> my-ess <span class="hljs-meta">#修改集群名称</span><br><span class="hljs-symbol">node.name:</span> es<span class="hljs-number">-1</span> <span class="hljs-meta">#修改节点名称</span><br><span class="hljs-symbol">path.data:</span> /usr/local/es/elasticsearch<span class="hljs-number">-7.9</span><span class="hljs-number">.3</span>/data <span class="hljs-meta">#数据存储路径</span><br><span class="hljs-symbol">path.logs:</span> /usr/local/es/elasticsearch<span class="hljs-number">-7.9</span><span class="hljs-number">.3</span>/logs <span class="hljs-meta">#日志存储路径</span><br><span class="hljs-symbol">network.host:</span> <span class="hljs-number">0.0</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span> <span class="hljs-meta">#允许任意主机访问</span><br><span class="hljs-symbol">http.port:</span> <span class="hljs-number">9200</span> <span class="hljs-meta">#web访问端口</span><br><span class="hljs-symbol">discovery.seed_hosts:</span> [<span class="hljs-string">&quot;es-1&quot;</span>] <span class="hljs-meta">#发现的主机</span><br><span class="hljs-symbol">cluster.initial_master_nodes:</span> [<span class="hljs-string">&quot;es-1&quot;</span>] <span class="hljs-meta">#初始化主节点</span><br></code></pre></td></tr></table></figure><p>es为了安全考虑不允许使用root账号 或者root身份登录 所以需单独创建账号</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs x86asm">useradd <span class="hljs-built_in">es</span><br>passwd <span class="hljs-built_in">es</span><br></code></pre></td></tr></table></figure><p>修改es文件目录的所有者为es</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs x86asm">chown -R <span class="hljs-built_in">es</span>:<span class="hljs-built_in">es</span> /usr/local/<span class="hljs-built_in">es</span><br>su <span class="hljs-built_in">es</span><br></code></pre></td></tr></table></figure><p>启动程序</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/es/</span>elasticsearch-<span class="hljs-number">7.9</span>.<span class="hljs-number">3</span><span class="hljs-regexp">/bin/</span>elasticsearch<br></code></pre></td></tr></table></figure><p>需要选保证jdk正确安装     启动出现  低于最低大小配置</p><p><img src="/2022/11/29/Elasticsearch%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/image-20221129111307162.png"></p><p>切回root用户 编辑 &#x2F;etc&#x2F;security&#x2F;limits.conf，追加以下内容</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs stata">vi /etc/security/limits.<span class="hljs-keyword">conf</span><br><br><span class="hljs-comment">* soft nofile 65536</span><br><span class="hljs-comment">* hard nofile 65536</span><br></code></pre></td></tr></table></figure><p>此文件修改后需要重新登录用户，才会生效</p><p>编辑 &#x2F;etc&#x2F;sysctl.conf，追加以下内容</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">vi</span> /etc/sysctl.<span class="hljs-keyword">conf</span><br><br><span class="hljs-keyword">vm</span>.max_map_count=<span class="hljs-number">655360</span><br></code></pre></td></tr></table></figure><p>修改完成重启虚拟机   切换es用户启动</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/es/</span>elasticsearch-<span class="hljs-number">7.9</span>.<span class="hljs-number">3</span><span class="hljs-regexp">/bin/</span>elasticsearch -d<br></code></pre></td></tr></table></figure><p><img src="/2022/11/29/Elasticsearch%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/image-20221129112508345.png"></p><p>浏览器访问</p><p><img src="/2022/11/29/Elasticsearch%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/image-20221129112544470.png"></p><blockquote><p>Windows 谷歌浏览器安装head-master（需要去下载ocr文件，修改 headmaster_head文件夹中 vendor.js文件中关于请求方式从form 修改为 application&#x2F;json,具体修改位置见文末）插件方便查看json格式的查询结果</p></blockquote><h1 id="Windows插件安装"><a href="#Windows插件安装" class="headerlink" title="Windows插件安装"></a>Windows插件安装</h1><p>安装插件 谷歌浏览器设置  更多工具 扩展程序 添加插件</p><p><img src="/2022/11/29/Elasticsearch%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/image-20221129115009185.png"></p><p>可以使用图形界面或者命令添加索引 格式是索引&#x2F;类型 也可以在linux中使用  Curl命令来添加内容 添加使用的提交类型是POST</p><figure class="highlight scilab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs scilab">curl -H <span class="hljs-string">&quot;Content-Type: application/json&quot;</span> -XPOST <span class="hljs-string">&#x27;localhost:9200/team/player/1&#x27;</span> -d <span class="hljs-string">&#x27;</span><br><span class="hljs-string">&#123;</span><br><span class="hljs-string">    &quot;</span>name<span class="hljs-string">&quot;:&quot;</span>zs<span class="hljs-string">&quot;,</span><br><span class="hljs-string">    &quot;</span>high<span class="hljs-string">&quot;:&quot;</span><span class="hljs-number">175</span><span class="hljs-string">&quot;,</span><br><span class="hljs-string">    &quot;</span>val<span class="hljs-string">&quot;:90</span><br><span class="hljs-string">&#125;&#x27;</span><br>curl -H <span class="hljs-string">&quot;Content-Type: application/json&quot;</span> -XPOST <span class="hljs-string">&#x27;localhost:9200/team/player/2&#x27;</span> -d <span class="hljs-string">&#x27;</span><br><span class="hljs-string">&#123;</span><br><span class="hljs-string">    &quot;</span>name<span class="hljs-string">&quot;:&quot;</span>ls<span class="hljs-string">&quot;,</span><br><span class="hljs-string">    &quot;</span>high<span class="hljs-string">&quot;:&quot;</span><span class="hljs-number">166</span><span class="hljs-string">&quot;,</span><br><span class="hljs-string">    &quot;</span>val<span class="hljs-string">&quot;:85</span><br><span class="hljs-string">&#125;&#x27;</span><br>curl -H <span class="hljs-string">&quot;Content-Type: application/json&quot;</span> -XPOST <span class="hljs-string">&#x27;localhost:9200/team/player/3&#x27;</span> -d <span class="hljs-string">&#x27;</span><br><span class="hljs-string">&#123;</span><br><span class="hljs-string">    &quot;</span>name<span class="hljs-string">&quot;:&quot;</span>ww<span class="hljs-string">&quot;,</span><br><span class="hljs-string">    &quot;</span>high<span class="hljs-string">&quot;:&quot;</span><span class="hljs-number">180</span><span class="hljs-string">&quot;,</span><br><span class="hljs-string">    &quot;</span>val<span class="hljs-string">&quot;:77</span><br><span class="hljs-string">&#125;&#x27;</span><br></code></pre></td></tr></table></figure><p>执行完上面内容 插入 一个索引为球队 类型为球员的 三条数据</p><p><img src="/2022/11/29/Elasticsearch%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/image-20221129115633286.png"></p><p>查看可以使用图形界面也可以使用命令</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs ada">curl -XGET <span class="hljs-symbol">&#x27;http</span>://localhost:<span class="hljs-number">9200</span>/team/_search?pretty&#x27; -H <span class="hljs-symbol">&#x27;content</span>-<span class="hljs-keyword">Type</span>:application/json&#x27; -d &#x27;<br>&#123;<br>    <span class="hljs-string">&quot;query&quot;</span>: &#123;<br>        <span class="hljs-string">&quot;match_all&quot;</span>: &#123;&#125;<br>    &#125;<br>&#125;&#x27;<br></code></pre></td></tr></table></figure><p><img src="/2022/11/29/Elasticsearch%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/image-20221129120159174.png"></p><p><img src="/2022/11/29/Elasticsearch%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/image-20221129120321365.png"></p><p><img src="/2022/11/29/Elasticsearch%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/image-20221129120552869.png"></p><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs prolog">&#123;<br>  <span class="hljs-string">&quot;query&quot;</span>: &#123;<br>    <span class="hljs-string">&quot;bool&quot;</span>: &#123;<br>      <span class="hljs-string">&quot;must&quot;</span>: [<br>        &#123;<br>          <span class="hljs-string">&quot;query_string&quot;</span>: &#123;<br>            <span class="hljs-string">&quot;default_field&quot;</span>: <span class="hljs-string">&quot;high.keyword&quot;</span>,<br>            <span class="hljs-string">&quot;query&quot;</span>: <span class="hljs-string">&quot;&gt;170&quot;</span><br>          &#125;<br>        &#125;<br>      ],<br>      <span class="hljs-string">&quot;must_not&quot;</span>: [],<br>      <span class="hljs-string">&quot;should&quot;</span>: []<br>    &#125;<br>  &#125;,<br>  <span class="hljs-string">&quot;from&quot;</span>: <span class="hljs-number">0</span>,<br>  <span class="hljs-string">&quot;size&quot;</span>: <span class="hljs-number">10</span>,<br>  <span class="hljs-string">&quot;sort&quot;</span>: [],<br>  <span class="hljs-string">&quot;aggs&quot;</span>: &#123;&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/2022/11/29/Elasticsearch%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/image-20221129120606494.png"></p><h3 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h3><p>{“error”:”Content-Type header [application&#x2F;x-www-form-urlencoded] is not supported”,”status”:406}</p><p>解决办法：</p><p>进入head安装目录；</p><p>编辑vendor.js 共有两处</p><p>　　　　　　①、6886行  contentType: “application&#x2F;x-www-form-urlencoded，改成：contentType: “application&#x2F;json;charset&#x3D;UTF-8”</p><p>　　　　　　②、7574行 var inspectData &#x3D; s.contentType &#x3D;&#x3D;&#x3D; “application&#x2F;x-www-form-urlencoded” &amp;&amp;，改成：var inspectData &#x3D; s.contentType &#x3D;&#x3D;&#x3D; “application&#x2F;json;charset&#x3D;UTF-8” &amp;&amp;</p><p>原因2：在curl中，是在报文Content-type的参数：application&#x2F;x-www-form-urlencoded不支持Json发送。需要改成application&#x2F;Json。所以需要添加参数 ; -H ‘Content-Type: application&#x2F;json’或者直接在终端操作命令时修改操作命令</p><p>原命令：</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">curl -<span class="hljs-type">XGET</span> <span class="hljs-symbol">&#x27;http</span>:<span class="hljs-comment">//localhost:9200/_count?pretty&#x27; -d &#x27;</span><br>&#123;<br>    <span class="hljs-string">&quot;query&quot;</span>: &#123;<br>        <span class="hljs-string">&quot;match_all&quot;</span>: &#123;&#125;<br>    &#125;<br>&#125;<span class="hljs-string">&#x27;</span><br></code></pre></td></tr></table></figure><p>修改后命令：</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs ada">curl -XGET <span class="hljs-symbol">&#x27;localhost</span>:<span class="hljs-number">9200</span>/_count?pretty&#x27; -H <span class="hljs-symbol">&#x27;content</span>-<span class="hljs-keyword">Type</span>:application/json&#x27; -d &#x27;<br><br>&#123;<br><br><span class="hljs-string">&quot;query&quot;</span>:&#123;<br><br><span class="hljs-string">&quot;match_all&quot;</span>:&#123;&#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><p>或：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">curl</span> -H <span class="hljs-string">&quot;Content-Type: application/json&quot;</span> http://localhost:<span class="hljs-number">9200</span>/tmdb/_search?pretty -d &#x27; &#123;<span class="hljs-string">&quot;query&quot;</span>: &#123;<span class="hljs-string">&quot;match_all&quot;</span>: &#123;&#125;&#125;&#125;&#x27;<br></code></pre></td></tr></table></figure><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs ada">curl -XGET <span class="hljs-symbol">&#x27;http</span>://localhost:<span class="hljs-number">9200</span>/team/_search?pretty&#x27; -H <span class="hljs-symbol">&#x27;content</span>-<span class="hljs-keyword">Type</span>:application/json&#x27; -d &#x27;<br>&#123;<br>    <span class="hljs-string">&quot;query&quot;</span>: &#123;<br>        <span class="hljs-string">&quot;match_all&quot;</span>: &#123;&#125;<br>    &#125;<br>&#125;&#x27;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>运维</tag>
      
      <tag>Easticsearch</tag>
      
      <tag>ELK</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MySQL安装及主从配置</title>
    <link href="/2022/11/28/MySQL%E5%AE%89%E8%A3%85%E5%8F%8A%E4%B8%BB%E4%BB%8E%E9%85%8D%E7%BD%AE/"/>
    <url>/2022/11/28/MySQL%E5%AE%89%E8%A3%85%E5%8F%8A%E4%B8%BB%E4%BB%8E%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><p>将mysql tar包上传到ftp 目录后解压，因为不是用zip算法压缩的所以不支持参数 z</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">tar</span> -vxf mysql-<span class="hljs-number">8</span>.<span class="hljs-number">0</span>.<span class="hljs-number">27</span>-linux-glibc2.<span class="hljs-number">17</span>-x86_64-minimal.tar<br></code></pre></td></tr></table></figure><p>解压后得到三个压缩文件，分别是主程序、、route路由、测试test</p><p><img src="/2022/11/28/MySQL%E5%AE%89%E8%A3%85%E5%8F%8A%E4%B8%BB%E4%BB%8E%E9%85%8D%E7%BD%AE/image-20221126143807259.png"></p><p>解压主程序</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">tar</span> -vxf mysql-<span class="hljs-number">8</span>.<span class="hljs-number">0</span>.<span class="hljs-number">27</span>-linux-glibc2.<span class="hljs-number">17</span>-x86_64-minimal.tar.xz<br></code></pre></td></tr></table></figure><p>得到解压后文件就是 已编译好的程序</p><p>在bin 目录中可以看见和window版本一一致的主程序 mysqld 和客户端程序 mysql</p><p><img src="/2022/11/28/MySQL%E5%AE%89%E8%A3%85%E5%8F%8A%E4%B8%BB%E4%BB%8E%E9%85%8D%E7%BD%AE/image-20221126144135187.png"></p><h1 id="安装配置"><a href="#安装配置" class="headerlink" title="安装配置"></a>安装配置</h1><p>将解压好的的mysql拷贝到local目录下重命名 并进入</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">cp -r <span class="hljs-regexp">/usr/</span>ftp<span class="hljs-regexp">/mysql-8.0.27-linux-glibc2.17-x86_64-minimal /u</span>sr<span class="hljs-regexp">/local/my</span>sql8<br>cd <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/mysql8/</span><br></code></pre></td></tr></table></figure><p>创建mysql用户</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs less"><span class="hljs-selector-tag">useradd</span> <span class="hljs-selector-tag">-r</span> <span class="hljs-selector-tag">-g</span> <span class="hljs-selector-tag">root</span> <span class="hljs-selector-tag">mysql</span><br><span class="hljs-selector-id">#chown</span> <span class="hljs-selector-tag">-R</span> <span class="hljs-selector-tag">mysql</span><span class="hljs-selector-pseudo">:root</span> ./<br></code></pre></td></tr></table></figure><p>修改mysql的安装目录设置</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">vim</span> /etc/my.<span class="hljs-keyword">cnf</span><br></code></pre></td></tr></table></figure><p>加入</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs abnf"><span class="hljs-attribute">basedir</span><span class="hljs-operator">=/</span>usr/local/mysql8<br><span class="hljs-attribute">datadir</span><span class="hljs-operator">=/</span>usr/local/mysql8/data<br><span class="hljs-attribute">socket</span><span class="hljs-operator">=/</span>tmp/mysql/mysql.sock<br></code></pre></td></tr></table></figure><p><img src="/2022/11/28/MySQL%E5%AE%89%E8%A3%85%E5%8F%8A%E4%B8%BB%E4%BB%8E%E9%85%8D%E7%BD%AE/image-20221126145142791.png"></p><p>进入local 下mysql 的安装目录 执行mysql主程序的初始化参数 指定数据目录 注意root@localhost后的密码</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros">./bin/mysqld --initialize <span class="hljs-attribute">--user</span>=mysql <span class="hljs-attribute">--basedir</span>=/usr/local/mysql8 <span class="hljs-attribute">--datadir</span>=/usr/local/mysql8/data<br>./bin/mysql_ssl_rsa_setup <span class="hljs-attribute">--datadir</span>=/usr/local/mysql8/data<br></code></pre></td></tr></table></figure><p><img src="/2022/11/28/MySQL%E5%AE%89%E8%A3%85%E5%8F%8A%E4%B8%BB%E4%BB%8E%E9%85%8D%E7%BD%AE/image-20221126152116977.png"></p><p>把mysql服务拷贝到init目录下 成为系统服务</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">cp <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/mysql8/</span>support-files<span class="hljs-regexp">/mysql.server /</span>etc<span class="hljs-regexp">/init.d/my</span>sql<br></code></pre></td></tr></table></figure><p>修改系统务器中指定的mysql安装目录</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs swift">vim <span class="hljs-regexp">/etc/</span><span class="hljs-keyword">init</span>.d<span class="hljs-operator">/</span>mysql<br></code></pre></td></tr></table></figure><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs abnf"><span class="hljs-attribute">basedir</span><span class="hljs-operator">=/</span>usr/local/mysql8<br><span class="hljs-attribute">datadir</span><span class="hljs-operator">=/</span>usr/local/mysql8/data<br></code></pre></td></tr></table></figure><p><img src="/2022/11/28/MySQL%E5%AE%89%E8%A3%85%E5%8F%8A%E4%B8%BB%E4%BB%8E%E9%85%8D%E7%BD%AE/image-20221126154015038.png"></p><p>创建临时文件夹和日志文件夹 创建一个默认的日志文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> /tmp/mysql<br><span class="hljs-built_in">mkdir</span> /var/log/mariadb<br><span class="hljs-built_in">touch</span> /var/log/mariadb/mariadb.log<br><span class="hljs-built_in">chown</span> -R mysql:root /var   授予mysql用户组访问权限<br></code></pre></td></tr></table></figure><p>设置文件配置 字符集和socket</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">vim</span> /etc/my.<span class="hljs-keyword">cnf</span>.d/mysql-clients.<span class="hljs-keyword">cnf</span><br></code></pre></td></tr></table></figure><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs abnf"><span class="hljs-attribute">default-character-set</span><span class="hljs-operator">=</span>utf8<br><span class="hljs-attribute">socket</span><span class="hljs-operator">=/</span>tmp/mysql/mysql.sock<br></code></pre></td></tr></table></figure><p><img src="/2022/11/28/MySQL%E5%AE%89%E8%A3%85%E5%8F%8A%E4%B8%BB%E4%BB%8E%E9%85%8D%E7%BD%AE/image-20221126154616838.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">chown</span> -R mysql:root /tmp    继续赋予权限<br></code></pre></td></tr></table></figure><blockquote><p>第一次运行 mysql -uroot -p 打不开 执行下面的ln 创建一个软链接（windows中的快捷方式 创建在usr bin 目录中，因为usr&#x2F;bin 在path变量中）</p></blockquote><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">ln -s <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/mysql8/</span>bin<span class="hljs-regexp">/mysql /u</span>sr<span class="hljs-regexp">/bin/</span><br></code></pre></td></tr></table></figure><p>启动</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">service mysql <span class="hljs-literal">start</span><br></code></pre></td></tr></table></figure><h1 id="密码"><a href="#密码" class="headerlink" title="密码"></a>密码</h1><h3 id="免密登陆"><a href="#免密登陆" class="headerlink" title="免密登陆"></a>免密登陆</h3><p>找到mysql配置文件:my.cnf </p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">vim</span> /etc/my.<span class="hljs-keyword">cnf</span><br></code></pre></td></tr></table></figure><p>在【mysqld】模块添加：skip-grant-tables  保存退出</p><p><img src="/2022/11/28/MySQL%E5%AE%89%E8%A3%85%E5%8F%8A%E4%B8%BB%E4%BB%8E%E9%85%8D%E7%BD%AE/image-20221126162719361.png"></p><p>重启mysql服务使配置生效  </p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">service mysql restart</span><br></code></pre></td></tr></table></figure><h2 id="密码置空"><a href="#密码置空" class="headerlink" title="密码置空"></a>密码置空</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">mysql -u root -<span class="hljs-selector-tag">p</span>      <span class="hljs-comment">//提示输入密码时直接敲回车</span><br></code></pre></td></tr></table></figure><p>选择数据库</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf">use mysql<span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure><p>将密码置空   退出数据库</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs n1ql"><span class="hljs-keyword">update</span> <span class="hljs-keyword">user</span> <span class="hljs-keyword">set</span> authentication_string = <span class="hljs-string">&#x27;&#x27;</span> <span class="hljs-keyword">where</span> <span class="hljs-keyword">user</span> = <span class="hljs-string">&#x27;root&#x27;</span>;<br>quit<br></code></pre></td></tr></table></figure><p>去除免密登陆配置</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">vim</span> /etc/my.<span class="hljs-keyword">cnf</span><br></code></pre></td></tr></table></figure><p>注释掉 skip-grant-tables </p><p><img src="/2022/11/28/MySQL%E5%AE%89%E8%A3%85%E5%8F%8A%E4%B8%BB%E4%BB%8E%E9%85%8D%E7%BD%AE/image-20221126163338235.png"></p><p>重启服务</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">service mysql restart</span><br></code></pre></td></tr></table></figure><h2 id="修改密码"><a href="#修改密码" class="headerlink" title="修改密码"></a>修改密码</h2><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs 1c">mysql -u root -p      <span class="hljs-comment">//提示输入密码时直接敲回车</span><br>ALTER USER &#x27;root&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;<span class="hljs-number">123456</span>&#x27;;       <span class="hljs-comment">//修改密码</span><br></code></pre></td></tr></table></figure><blockquote><p>%表示所有地址  localhost 表示本机 如果上方修改密码用的是localhost则需要设置允许远程登录。</p></blockquote><p>允许远程登录</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">#选择数据库<br>use mysql;<br><br>将root用户设置为所有地址可登录  localhost 表示只有本机可登录<br><span class="hljs-keyword">update</span> <span class="hljs-keyword">user</span> <span class="hljs-keyword">set</span> host=<span class="hljs-string">&#x27;%&#x27;</span> <span class="hljs-keyword">where</span> <span class="hljs-keyword">user</span>=<span class="hljs-string">&#x27;root&#x27;</span>; <br><br>将用户root密码设置为用不过期<br><span class="hljs-keyword">alter</span> <span class="hljs-keyword">user</span> <span class="hljs-string">&#x27;root&#x27;</span>@<span class="hljs-string">&#x27;%&#x27;</span> identified <span class="hljs-keyword">by</span> <span class="hljs-string">&#x27;123456&#x27;</span> <span class="hljs-keyword">password</span> expire never;<br><br>修改root用户密码加密方式<br><span class="hljs-keyword">alter</span> <span class="hljs-keyword">user</span> <span class="hljs-string">&#x27;root&#x27;</span>@<span class="hljs-string">&#x27;%&#x27;</span> identified <span class="hljs-keyword">with</span> mysql_native_password <span class="hljs-keyword">by</span> <span class="hljs-string">&#x27;123456&#x27;</span>;<br><br>刷新权限<br>flush <span class="hljs-keyword">privileges</span>;<br></code></pre></td></tr></table></figure><h1 id="MySQL主从"><a href="#MySQL主从" class="headerlink" title="MySQL主从"></a>MySQL主从</h1><blockquote><p>192.168.139.123  &#x2F;&#x2F;主库                192.168.139.122  &#x2F;&#x2F;从库</p></blockquote><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">vi</span> /etc/my.<span class="hljs-keyword">cnf</span><br></code></pre></td></tr></table></figure><p>添加</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-attribute">log-bin</span>=mysql-bin #开启二进制日志<br><span class="hljs-attribute">server-id</span>=1       #主机设置<span class="hljs-attribute">server-id</span>=1 主机设置<span class="hljs-attribute">server-id</span>=2<br></code></pre></td></tr></table></figure><p><img src="/2022/11/28/MySQL%E5%AE%89%E8%A3%85%E5%8F%8A%E4%B8%BB%E4%BB%8E%E9%85%8D%E7%BD%AE/image-20221128112011772.png"></p><p>修改后重启mysql</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">systemctl restart mysql</span><br></code></pre></td></tr></table></figure><h2 id="主库"><a href="#主库" class="headerlink" title="主库"></a>主库</h2><p>给主数据库创建用户并授权：用户：repl 密码：123456  ip填写从库的ip</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">USER</span> <span class="hljs-string">&#x27;repl&#x27;</span>@<span class="hljs-string">&#x27;192.168.139.122&#x27;</span> IDENTIFIED <span class="hljs-keyword">BY</span> <span class="hljs-string">&#x27;123456&#x27;</span>;    //创建用户<br><span class="hljs-keyword">GRANT</span> <span class="hljs-keyword">REPLICATION</span> SLAVE <span class="hljs-keyword">ON</span> *.* <span class="hljs-keyword">TO</span> <span class="hljs-string">&#x27;repl&#x27;</span>@<span class="hljs-string">&#x27;192.168.139.122&#x27;</span>; //授予权限<br>flush <span class="hljs-keyword">privileges</span>;                                          //刷新权限<br></code></pre></td></tr></table></figure><p>查看日志文件的位置和状态</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">SHOW <span class="hljs-keyword">MASTER</span> <span class="hljs-title">STATUS</span>;<br></code></pre></td></tr></table></figure><p><img src="/2022/11/28/MySQL%E5%AE%89%E8%A3%85%E5%8F%8A%E4%B8%BB%E4%BB%8E%E9%85%8D%E7%BD%AE/image-20221128171205911.png"></p><h2 id="从库"><a href="#从库" class="headerlink" title="从库"></a>从库</h2><p>执行同步SQL语句（主库的ip、主机名、登录凭证、二进制文件的名称和位置）</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs routeros">CHANGE MASTER <span class="hljs-keyword">TO</span><br><span class="hljs-attribute">MASTER_HOST</span>=<span class="hljs-string">&#x27;192.168.139.123&#x27;</span>,<br><span class="hljs-attribute">MASTER_USER</span>=<span class="hljs-string">&#x27;repl&#x27;</span>,<br><span class="hljs-attribute">MASTER_PASSWORD</span>=<span class="hljs-string">&#x27;123456&#x27;</span>,<br><span class="hljs-attribute">MASTER_LOG_FILE</span>=<span class="hljs-string">&#x27;mysql-bin.000005&#x27;</span>,<br>MASTER_LOG_POS= 1765;<br></code></pre></td></tr></table></figure><p>启动slave同步进程</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh"><span class="hljs-literal">start</span> <span class="hljs-literal">slave</span>;<br></code></pre></td></tr></table></figure><p><img src="/2022/11/28/MySQL%E5%AE%89%E8%A3%85%E5%8F%8A%E4%B8%BB%E4%BB%8E%E9%85%8D%E7%BD%AE/image-20221128171241003.png"></p><p>查看slave状态</p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs maxima"><span class="hljs-built_in">show</span> slave <span class="hljs-built_in">status</span>\G;<br></code></pre></td></tr></table></figure><p><img src="/2022/11/28/MySQL%E5%AE%89%E8%A3%85%E5%8F%8A%E4%B8%BB%E4%BB%8E%E9%85%8D%E7%BD%AE/image-20221128171147497.png"></p><h1 id="MySQL主主"><a href="#MySQL主主" class="headerlink" title="MySQL主主"></a>MySQL主主</h1><h2 id="192-168-139-122（从库）"><a href="#192-168-139-122（从库）" class="headerlink" title="192.168.139.122（从库）"></a>192.168.139.122（从库）</h2><p>给主数据库创建用户并授权：用户：repl 密码：123456  ip填写从库的ip</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">USER</span> <span class="hljs-string">&#x27;repl&#x27;</span>@<span class="hljs-string">&#x27;192.168.139.123&#x27;</span> IDENTIFIED <span class="hljs-keyword">BY</span> <span class="hljs-string">&#x27;123456&#x27;</span>;    //创建用户<br><span class="hljs-keyword">GRANT</span> <span class="hljs-keyword">REPLICATION</span> SLAVE <span class="hljs-keyword">ON</span> *.* <span class="hljs-keyword">TO</span> <span class="hljs-string">&#x27;repl&#x27;</span>@<span class="hljs-string">&#x27;192.168.139.123&#x27;</span>; //授予权限<br>flush <span class="hljs-keyword">privileges</span>;                                          //刷新权限<br></code></pre></td></tr></table></figure><p>查看日志文件的位置和状态</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">SHOW <span class="hljs-keyword">MASTER</span> <span class="hljs-title">STATUS</span>;<br></code></pre></td></tr></table></figure><p><img src="/2022/11/28/MySQL%E5%AE%89%E8%A3%85%E5%8F%8A%E4%B8%BB%E4%BB%8E%E9%85%8D%E7%BD%AE/image-20221128175541772.png"></p><h2 id="192-168-139-123（主库）"><a href="#192-168-139-123（主库）" class="headerlink" title="192.168.139.123（主库）"></a>192.168.139.123（主库）</h2><p>执行同步SQL语句（主库的ip、主机名、登录凭证、二进制文件的名称和位置）</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs routeros">CHANGE MASTER <span class="hljs-keyword">TO</span><br><span class="hljs-attribute">MASTER_HOST</span>=<span class="hljs-string">&#x27;192.168.139.122&#x27;</span>,<br><span class="hljs-attribute">MASTER_USER</span>=<span class="hljs-string">&#x27;repl&#x27;</span>,<br><span class="hljs-attribute">MASTER_PASSWORD</span>=<span class="hljs-string">&#x27;123456&#x27;</span>,<br><span class="hljs-attribute">MASTER_LOG_FILE</span>=<span class="hljs-string">&#x27;mysql-bin.000001&#x27;</span>,<br>MASTER_LOG_POS= 3941;<br></code></pre></td></tr></table></figure><p>启动slave同步进程</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh"><span class="hljs-literal">start</span> <span class="hljs-literal">slave</span>;<br></code></pre></td></tr></table></figure><p><img src="/2022/11/28/MySQL%E5%AE%89%E8%A3%85%E5%8F%8A%E4%B8%BB%E4%BB%8E%E9%85%8D%E7%BD%AE/image-20221128175706664.png"></p><p>查看slave状态</p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs maxima"><span class="hljs-built_in">show</span> slave <span class="hljs-built_in">status</span>\G;<br></code></pre></td></tr></table></figure><p><img src="/2022/11/28/MySQL%E5%AE%89%E8%A3%85%E5%8F%8A%E4%B8%BB%E4%BB%8E%E9%85%8D%E7%BD%AE/image-20221128180059632.png"></p><h1 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h1><p><img src="/2022/11/28/MySQL%E5%AE%89%E8%A3%85%E5%8F%8A%E4%B8%BB%E4%BB%8E%E9%85%8D%E7%BD%AE/image-20221128171652692.png"></p><blockquote><p>原来是主库repl的plugin是caching_sha2_password 就会导致连接不上，修改为mysql_native_password即可解决。</p></blockquote><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs n1ql"><span class="hljs-keyword">select</span> <span class="hljs-keyword">user</span>,host,password_expired <span class="hljs-keyword">from</span> mysql.<span class="hljs-keyword">user</span>;<br></code></pre></td></tr></table></figure><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs n1ql"><span class="hljs-keyword">SELECT</span> plugin <span class="hljs-keyword">FROM</span> <span class="hljs-symbol">`user`</span> <span class="hljs-keyword">where</span> <span class="hljs-keyword">user</span> = <span class="hljs-string">&#x27;repl&#x27;</span>;<br></code></pre></td></tr></table></figure><p><img src="/2022/11/28/MySQL%E5%AE%89%E8%A3%85%E5%8F%8A%E4%B8%BB%E4%BB%8E%E9%85%8D%E7%BD%AE/image-20221128170747566.png"></p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">USER</span> <span class="hljs-string">&#x27;repl&#x27;</span>@<span class="hljs-string">&#x27;192.168.139.122&#x27;</span> IDENTIFIED <span class="hljs-keyword">WITH</span> mysql_native_password <span class="hljs-keyword">BY</span> <span class="hljs-string">&#x27;123456&#x27;</span>;<br></code></pre></td></tr></table></figure><p><img src="/2022/11/28/MySQL%E5%AE%89%E8%A3%85%E5%8F%8A%E4%B8%BB%E4%BB%8E%E9%85%8D%E7%BD%AE/image-20221128170904840.png"></p>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
      <category>MySQL</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>运维</tag>
      
      <tag>MySQL</tag>
      
      <tag>主从同步</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Keepalived安装配置</title>
    <link href="/2022/11/23/Keepalived%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/"/>
    <url>/2022/11/23/Keepalived%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><ol><li><p>关闭防火墙</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arduino">systemctl stop firewalld<br></code></pre></td></tr></table></figure></li><li><p>关闭虚拟机内核限制</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs abnf">vi /etc/sysconfig/selinux<br><span class="hljs-attribute">SELINUX</span><span class="hljs-operator">=</span>disabled<br></code></pre></td></tr></table></figure><p><img src="/2022/11/23/Keepalived%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/image-20221122124744680.png"><br>刷新配置 并查看</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">source</span>  /etc/sysconfig/selinux<br>getenforce<br></code></pre></td></tr></table></figure></li></ol><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>上传keepalived 压缩包，解压keepalived</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">tar</span> -zvxf keepalived-<span class="hljs-number">2</span>.<span class="hljs-number">0</span>.<span class="hljs-number">15</span>.tar.gz<br></code></pre></td></tr></table></figure><p>移动keepalived-2.0.15 到&#x2F;usr&#x2F;local目录下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mv</span> keepalived-2.0.15 /usr/local<br><span class="hljs-built_in">mkdir</span> /etc/keepalived<br></code></pre></td></tr></table></figure><p>进入keepalived目录 ,编译、安装</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">cd <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/keepalived-2.0.15/</span><br>.<span class="hljs-regexp">/configure  --prefix=/u</span>sr<span class="hljs-regexp">/local/</span>keepalived<br>make&amp;make install<br></code></pre></td></tr></table></figure><p>keepalived启动脚本变量引用文件，默认文件路径是&#x2F;etc&#x2F;sysconfig&#x2F;，也可以不做软链接，直接修改启动脚本中文件路径即可（安装目录下）</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">cp <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/keepalived/</span>etc<span class="hljs-regexp">/sysconfig/</span>keepalived  <span class="hljs-regexp">/etc/</span>sysconfig/keepalived<br></code></pre></td></tr></table></figure><p>将keepalived主程序加入到环境变量（安装目录下）</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">cp <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/keepalived/</span>sbin<span class="hljs-regexp">/keepalived  /u</span>sr<span class="hljs-regexp">/sbin/</span>keepalived(此命令拷贝的文件为安装目录)<br></code></pre></td></tr></table></figure><p>keepalived启动脚本（源码目录下），放到&#x2F;etc&#x2F;init.d&#x2F;目录下就可以使用service命令便捷调用</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs swift">cp <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/keepalived-2.0.15/</span>keepalived<span class="hljs-regexp">/etc/</span><span class="hljs-keyword">init</span>.d<span class="hljs-regexp">/keepalived /</span>etc<span class="hljs-regexp">/init.d/</span>keepalived   (此命令拷贝的文件为解压目录)<br></code></pre></td></tr></table></figure><p>将配置文件放到默认路径下</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">mkdir <span class="hljs-regexp">/etc/</span>keepalived<br>cp <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/keepalived/</span>etc<span class="hljs-regexp">/keepalived/</span>keepalived.conf <span class="hljs-regexp">/etc/</span>keepalived/keepalived.conf   (此命令拷贝的文件为安装目录)<br></code></pre></td></tr></table></figure><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><p>修改配置文件</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">vi</span> /etc/keepalived/keepalived.<span class="hljs-keyword">conf</span><br></code></pre></td></tr></table></figure><p>修改如下</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><code class="hljs ruby">! <span class="hljs-title class_">Configuration</span> <span class="hljs-title class_">File</span> <span class="hljs-keyword">for</span> keepalived<br><br>global_defs &#123;<br><span class="hljs-comment"># 邮件通知信息</span><br>   notification_email &#123;   <span class="hljs-comment">#定义管理员邮箱信息</span><br>   <span class="hljs-comment"># 定义收件人</span><br>     acassen<span class="hljs-variable">@firewall</span>.loc<br>     failover<span class="hljs-variable">@firewall</span>.loc<br>     sysadmin<span class="hljs-variable">@firewall</span>.loc<br>   &#125;<br>   <span class="hljs-comment"># 定义发件人</span><br>   notification_email_from <span class="hljs-title class_">Alexandre</span>.<span class="hljs-title class_">Cassen</span><span class="hljs-variable">@firewall</span>.loc<br>   <span class="hljs-comment"># SMTP服务器地址</span><br>   smtp_server <span class="hljs-number">192.168</span>.<span class="hljs-number">200.1</span>        <span class="hljs-comment">#定义邮件服务器信息</span><br>   smtp_connect_timeout <span class="hljs-number">30</span><span class="hljs-comment">#定义邮件发送超时时间</span><br>   <span class="hljs-comment"># 路由器标识，一般不用改，也可以写成每个主机自己的主机名 （重点参数）局域网keepalived主机身份标识信息</span><br>   router_id <span class="hljs-variable constant_">LVS_DEVEL</span>           <span class="hljs-comment">#每一个keepalived主机身份标识信息唯一</span><br>   vrrp_skip_check_adv_addr<br>   <span class="hljs-comment">#vrrp_strict   #不注释此处 虚拟机无法Ping通新ip</span><br>   vrrp_garp_interval <span class="hljs-number">0</span><br>   vrrp_gna_interval <span class="hljs-number">0</span><br>&#125;<br><br><span class="hljs-comment"># 一个vrrp_instance就是定义一个虚拟路由器的，实例名称    vrrp协议相关配置（vip地址设置）</span><br>vrrp_instance <span class="hljs-variable constant_">VI_1</span> &#123;   <br>    state <span class="hljs-variable constant_">MASTER</span>      <span class="hljs-comment">#定义初始状态,主节点MASTER备用节点BACKUP</span><br>    interface ens33   <span class="hljs-comment">#和虚拟机网卡一致    表示将生成虚IP地址,设置在指定的网卡上</span><br>    virtual_router_id <span class="hljs-number">51</span><span class="hljs-comment">#表示keepalived家族标识信息</span><br>    priority <span class="hljs-number">100</span>      <span class="hljs-comment">#多个keepalived的优先级   keepalived服务竞选主备服务器优先级设置</span><br>    advert_int <span class="hljs-number">1</span>      <span class="hljs-comment">#通告频率，单位为秒</span><br>    authentication &#123;       <span class="hljs-comment">#主备主机之间通讯认证机制</span><br>        auth_type <span class="hljs-variable constant_">PASS</span>     <span class="hljs-comment">#采用明文认证机制</span><br>        auth_pass <span class="hljs-number">1111</span>     <span class="hljs-comment">#同组的keeplived需要一致   --- 编写明文密码（用于主备认证）</span><br>    &#125;<br>    virtual_ipaddress &#123;<span class="hljs-comment">#设置虚拟IP地址信息</span><br>       <span class="hljs-number">192.168</span>.<span class="hljs-number">110.100</span>     <span class="hljs-comment">#如果和真实机器IP一致不需要配置路由，不一致要配路由</span><br>    &#125;<br>&#125;<br><br>virtual_server <span class="hljs-number">192.168</span>.<span class="hljs-number">110.100</span> <span class="hljs-number">9095</span> &#123;  <span class="hljs-comment">#keepalived ip 端口</span><br>    delay_loop <span class="hljs-number">6</span><br>    lb_algo rr<br>    lb_kind <span class="hljs-variable constant_">NAT</span><br>    persistence_timeout <span class="hljs-number">50</span><br>    protocol <span class="hljs-variable constant_">TCP</span><br>    <br>    <span class="hljs-comment">#sorry_server 192.168.200.200 1358</span><br><br>    real_server <span class="hljs-number">192.168</span>.<span class="hljs-number">139.123</span> <span class="hljs-number">80</span> &#123; <span class="hljs-comment">#虚拟机linux ip  nginx端口</span><br>        weight <span class="hljs-number">1</span><br>        <span class="hljs-variable constant_">HTTP_GET</span> &#123;<br>            url &#123;<br>              path /<br>            &#125;<br>            connect_timeout <span class="hljs-number">3</span><br>            <span class="hljs-keyword">retry</span> <span class="hljs-number">3</span><br>            delay_before_retry <span class="hljs-number">3</span><br>        &#125;<br>    &#125;<br><br>    real_server <span class="hljs-number">192.168</span>.<span class="hljs-number">139.122</span> <span class="hljs-number">80</span> &#123; <span class="hljs-comment">##虚拟机linux ip  nginx端口</span><br>        weight <span class="hljs-number">1</span><br>        <span class="hljs-variable constant_">HTTP_GET</span> &#123;<br>            url &#123;<br>              path /<br>            &#125;<br>            connect_timeout <span class="hljs-number">3</span><br>            <span class="hljs-keyword">retry</span> <span class="hljs-number">3</span><br>            delay_before_retry <span class="hljs-number">3</span><br>        &#125;<br>    &#125;<br></code></pre></td></tr></table></figure><p>启动keepalived  查看keepalived状态</p><figure class="highlight nsis"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs nsis"><span class="hljs-params">system</span>ctl start keepalived<br><span class="hljs-params">system</span>ctl status keepalived<br></code></pre></td></tr></table></figure><p><img src="/2022/11/23/Keepalived%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/image-20221122190548922.png"></p><p>查看keepalived虚拟ip</p><p><img src="/2022/11/23/Keepalived%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/image-20221122174048114.png"></p><p>vip无法ping通 </p><blockquote><p>keepalived.conf中vip配置好后，通过ip addr可以看到vip已经顺利挂载，但是无法ping通，并且防火墙都已关闭，原因是keepalived.conf配置中默认vrrp_strict打开了，需要把它注释掉。重启keepalived即可ping通.</p></blockquote><p>映射端口无法访问 </p><blockquote><p>vip可ping通后，访问vip映射端口无法访问，直接访问real_server的ip和端口可访问。</p></blockquote><p>尝试Ping新ip 192.168.110.100</p><p><img src="/2022/11/23/Keepalived%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/image-20221122174248432.png"></p><p>目前新ip 10.10.10.10 仅限虚拟机本机访问</p><ol><li><p>方式一</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">curl</span> http://<span class="hljs-number">192.168.110.100</span>/<span class="hljs-number">1</span>.txt<br></code></pre></td></tr></table></figure><p><img src="/2022/11/23/Keepalived%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/image-20221123105333874.png"></p></li><li><p>方式二</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx">    <span class="hljs-attribute">links</span> http://192.168.110.100                  <span class="hljs-comment">### links 需要单独下载 yum install links</span><br></code></pre></td></tr></table></figure><p><img src="/2022/11/23/Keepalived%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/image-20221122141528601.png"></p></li></ol><blockquote><p>NAT模式和路由器NAT模式类似,用于访问client和real_server在不同网段实现通信。如果你在一个局域网内做负载均衡选用NAT,那恭喜你,你肯定是无法访问。可以做个NAT模式的测试,需要在keepalived主机上配置双网卡,分别在两个不同网段中,如keepalived主机网卡对client地址为192.168.110.0&#x2F;24,对real_server的地址为192.168.139.0&#x2F;24。vip设置为192.168.110.100，real_server为192.168.139.123,可采用下面的keepalived.conf配置,配置正确后在keepalived主机上执行systemctl restart keepalived.service。从client上执行curl 192.168.110.100发现还是无法访问。这是由于real_server在接收到请求包后找不到路由进行数据返回,此时需要将keepalived主机作为网关,在real_server上添加回程路由route add default gw 192.168.139.123。192.168.139.123即为keepalived主机。考虑keepalived主机一般双机,因此此处可以用keepalived主机的虚拟IP。 现在再执行curl 192.168.110.100就可以正常返回</p></blockquote><h1 id="路由"><a href="#路由" class="headerlink" title="路由"></a>路由</h1><p>想要网络中的机器都能够访问虚拟ip</p><blockquote><p>所有CentOS(Linux)重启 会清空临时路由表，为什么不配置成永久路由，可以讲所有的配置命令 通过shell 编程保存到sh文件中 开机自动运行就重启也能生效，但是不想用了 移除开机自启sh文件即可，而永久路由才要一条一条删。</p></blockquote><h2 id="Linux路由"><a href="#Linux路由" class="headerlink" title="Linux路由"></a>Linux路由</h2><p>开启另外一台虚拟机，尝试ping虚拟ip 这时会发现ping不通</p><p><img src="/2022/11/23/Keepalived%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/image-20221122174616625.png"></p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs cmake">yum <span class="hljs-keyword">install</span> net-tools     <span class="hljs-comment">#如果没有route命令</span><br>route -n                  <span class="hljs-comment">#查看路由表</span><br></code></pre></td></tr></table></figure><p><img src="/2022/11/23/Keepalived%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/image-20221122145128777.png"></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">route</span> add -net <span class="hljs-number">192.168.110.100</span> dev ens33 gw <span class="hljs-number">192.168.139.123</span>                     host 只加主机    net 整个网段<br><span class="hljs-attribute">route</span> add -host <span class="hljs-number">192.168.110.0</span>/<span class="hljs-number">24</span> dev ens33 gw <span class="hljs-number">192.168.139.123</span><br><span class="hljs-comment">### 如果路由加错了 将上面的命令的add 换乘del 就能删除</span><br></code></pre></td></tr></table></figure><p>再次查看路由表，发现出现虚拟ip，尝试ping虚拟ip</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">route</span> -n<br>ping <span class="hljs-number">10.10.10.10</span>                              <br></code></pre></td></tr></table></figure><blockquote><p>意思就是 如果你想找10.10.10.10  你就去找192.168.139.123</p></blockquote><p><img src="/2022/11/23/Keepalived%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/image-20221122175241869.png"></p><h2 id="Windows路由"><a href="#Windows路由" class="headerlink" title="Windows路由"></a>Windows路由</h2><p>以管理员身份打开命令提示符</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">route</span> add <span class="hljs-number">192.168.110.100</span>/<span class="hljs-number">24</span> mask <span class="hljs-number">255.255.255.248</span> <span class="hljs-number">192.168.139.123</span><br><span class="hljs-comment">##delete 删除路由</span><br></code></pre></td></tr></table></figure><p><img src="/2022/11/23/Keepalived%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/image-20221123142355753.png"></p><p>浏览器访问</p><p><img src="/2022/11/23/Keepalived%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/keepalived.gif"></p><h1 id="高可用搭建"><a href="#高可用搭建" class="headerlink" title="高可用搭建"></a>高可用搭建</h1><p>重新找一台虚拟机安装keepalived 修改配置文件如下：#两台虚拟ip统一改为 192.168.139.100 使虚拟ip跟虚拟机的ip在一个网段</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">! Configuration File <span class="hljs-keyword">for</span> keepalived<br><br>global_defs &#123;<br>   notification_email &#123;<br>     <span class="hljs-symbol">acassen@</span>firewall.loc<br>     <span class="hljs-symbol">failover@</span>firewall.loc<br>     <span class="hljs-symbol">sysadmin@</span>firewall.loc<br>   &#125;<br>   notification_email_from Alexandre.<span class="hljs-symbol">Cassen@</span>firewall.loc<br>   smtp_server <span class="hljs-number">192.168</span><span class="hljs-number">.200</span><span class="hljs-number">.1</span><br>   smtp_connect_timeout <span class="hljs-number">30</span><br>   router_id LVS_DEVEL<br>   vrrp_skip_check_adv_addr<br>   #vrrp_strict<br>   vrrp_garp_interval <span class="hljs-number">0</span><br>   vrrp_gna_interval <span class="hljs-number">0</span><br>&#125;<br><br>vrrp_instance VI_1 &#123;<br>    state BACKUP    ##改为BACKUP<br>    <span class="hljs-keyword">interface</span> <span class="hljs-symbol">ens33</span><br>    <span class="hljs-symbol">virtual_router_id</span> <span class="hljs-symbol">51</span><br>    <span class="hljs-symbol">priority</span> <span class="hljs-symbol">60</span>    ##降低优先级<br>    <span class="hljs-symbol">advert_int</span> <span class="hljs-symbol">1</span><br>    <span class="hljs-symbol">authentication</span> &#123;<br>        auth_type PASS<br>        auth_pass <span class="hljs-number">1111</span><br>    &#125;<br>    virtual_ipaddress &#123;<br>        <span class="hljs-number">192.168</span><span class="hljs-number">.139</span><span class="hljs-number">.100</span><br>    &#125;<br>&#125;<br><br>virtual_server <span class="hljs-number">192.168</span><span class="hljs-number">.139</span><span class="hljs-number">.100</span> <span class="hljs-number">80</span> &#123;<br>    delay_loop <span class="hljs-number">6</span><br>    lb_algo rr<br>    lb_kind NAT<br>    persistence_timeout <span class="hljs-number">50</span><br>    protocol TCP<br><br>    #sorry_server <span class="hljs-number">192.168</span><span class="hljs-number">.200</span><span class="hljs-number">.200</span> <span class="hljs-number">1358</span><br><br>    real_server <span class="hljs-number">192.168</span><span class="hljs-number">.139</span><span class="hljs-number">.122</span> <span class="hljs-number">80</span> &#123;<br>        weight <span class="hljs-number">1</span><br>        HTTP_GET &#123;<br>            url &#123;<br>              path /<br>            &#125;<br>            connect_timeout <span class="hljs-number">3</span><br>            retry <span class="hljs-number">3</span><br>            delay_before_retry <span class="hljs-number">3</span><br>        &#125;<br>    &#125;<br><br>    real_server <span class="hljs-number">192.168</span><span class="hljs-number">.139</span><span class="hljs-number">.123</span> <span class="hljs-number">80</span> &#123;<br>        weight <span class="hljs-number">1</span><br>        HTTP_GET &#123;<br>            url &#123;<br>              path /<br>            &#125;<br>            connect_timeout <span class="hljs-number">3</span><br>            retry <span class="hljs-number">3</span><br>            delay_before_retry <span class="hljs-number">3</span><br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>查看第二台的ip   此时第二台没有虚拟ip  虚拟ip在第一台</p><p><img src="/2022/11/23/Keepalived%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/image-20221122160454852.png"></p><p>关闭第一台的keepalived  这时候第一台的虚拟ip没有了 此时的虚拟ip在第二台</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arduino">systemctl stop keepalived<br></code></pre></td></tr></table></figure><p><img src="/2022/11/23/Keepalived%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/image-20221123110347540.png"></p><p>这时候当你访问Tomcat 访问速度就会很慢就需要添加端口转发</p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt;</span><span class="language-bash">windows在keepalived所在的机器没有配置iptables的情况下 看机器性能 网络状态看运气     配置了秒刷</span><br></code></pre></td></tr></table></figure></blockquote><h1 id="端口转发"><a href="#端口转发" class="headerlink" title="端口转发"></a>端口转发</h1><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">yum <span class="hljs-keyword">install</span> iptables-services<br></code></pre></td></tr></table></figure><p>添加对应的ip转发规则</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs css">iptables -t nat -<span class="hljs-selector-tag">A</span> PREROUTING -<span class="hljs-selector-tag">p</span> tcp -d <span class="hljs-number">192.168</span>.<span class="hljs-number">139.100</span> <span class="hljs-attr">--dport</span> <span class="hljs-number">9095</span> -j REDIRECT      添加<br>iptables -t nat -D PREROUTING -<span class="hljs-selector-tag">p</span> tcp -d <span class="hljs-number">192.168</span>.<span class="hljs-number">139.100</span> <span class="hljs-attr">--dport</span> <span class="hljs-number">9095</span> -j REDIRECT      删除<br></code></pre></td></tr></table></figure><p>添加、删除后都需要保存重启服务</p><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs gauss">service iptables <span class="hljs-keyword">save</span><br>systemctl restart iptables.service<br><br>如果新装的centos 需要配置为开机自动运行 并重启虚拟机<br>systemctl <span class="hljs-keyword">enable</span> iptables.service<br></code></pre></td></tr></table></figure><p>第二台虚拟机也需要安装Nginx 安装好之后把第一台Nginx的配置文件拷贝到第二台，并重启Nginx 再到浏览器刷新这时候就可以秒刷了，无论是哪台keepalived都能达到秒刷效果。</p>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>运维</tag>
      
      <tag>Keepalived</tag>
      
      <tag>高可用</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Nginx负载Tomcat</title>
    <link href="/2022/11/14/Nginx%E8%B4%9F%E8%BD%BDTomcat/"/>
    <url>/2022/11/14/Nginx%E8%B4%9F%E8%BD%BDTomcat/</url>
    
    <content type="html"><![CDATA[<h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//</span>www.oracle.com<span class="hljs-regexp">/java/</span>technologies<span class="hljs-regexp">/downloads/</span><br>http:<span class="hljs-regexp">//</span>tomcat.apache.org/<br>http:<span class="hljs-regexp">//</span>nginx.org<span class="hljs-regexp">/download/</span><br></code></pre></td></tr></table></figure><ol><li><p>在 <em>&#x2F;usr</em>  目录下新建一个 ftp 文件夹</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> /usr/ftp<br></code></pre></td></tr></table></figure></li><li><p>把 nginx-1.15.10.tar.gz apache-tomcat-9.0.17.tar.gz jdk-8u181-linux-x64.tar.gz安装包上传到 ftp 目录下                   <a id="环境变量"></a><br><a id="防火墙"></a></p></li><li><p>这里为了后续方便 建议把防火墙关闭</p></li></ol><h2 id="防火墙"><a href="#防火墙" class="headerlink" title="防火墙"></a>防火墙</h2><p>方式一：</p><ul><li>关闭防火墙</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl status firewalld        ====查看防火状态<br>systemctl stop firewalld          ====暂时关闭防火墙<br>systemctl disable firewalld       ====永久关闭防火墙<br>systemctl enable firewalld        ====重启防火墙<br></code></pre></td></tr></table></figure><p>方式二：</p><ul><li>配置防火墙规则</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl start firewalld//启动  <br>systemctl status firewalld //查看状态<br>systemctl stop firewalld //停止<br>systemctl disable firewalld//禁用<br>systemctl enable firewalld.servic//开机自动启动<br>systemctl restart firewalld.service//重启<br>开启某个端口、服务   (--permanent永久生效，没有此参数重启后失效)<br>firewall-cmd --permanent --zone=public --add-port=80/tcp//永久开启80端口<br>firewall-cmd --zone=public --add-port=80/tcp //临时开启80端口<br>firewall-cmd --zone=public --add-service=https //临时<br>firewall-cmd --permanent --zone=public --add-service=https //永久<br>firewall-cmd --zone=public --list-ports//查看开放的端口有哪些<br>firewall-cmd --reload//**重载** 修改配置文件后 使用命令重新加载 更新防火墙规则<br></code></pre></td></tr></table></figure><h1 id="Tomcat安装配置"><a href="#Tomcat安装配置" class="headerlink" title="Tomcat安装配置"></a>Tomcat安装配置</h1><h2 id="JDK安装"><a href="#JDK安装" class="headerlink" title="JDK安装"></a>JDK安装</h2><p>解压</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /usr/ftp<br>tar -zvxf jdk-8u181-linux-x64.tar.gz<br><span class="hljs-built_in">mv</span> jdk1.8.0_181 /usr/local<br></code></pre></td></tr></table></figure><p>把环境变量追加入到  &#x2F;etc&#x2F;profile 下  <strong><a href="#%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F">配置</a></strong></p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">vi</span> /etc/<span class="hljs-keyword">profile</span><br></code></pre></td></tr></table></figure><p>把下方配置追加到 &#x2F;etc&#x2F;profile 尾部 <strong>注意JDK的实际路径</strong></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-built_in">export</span> <span class="hljs-attribute">JAVA_HOME</span>=/usr/local/jdk1.8.0_181<br><span class="hljs-built_in">export</span> <span class="hljs-attribute">JRE_HOME</span>=<span class="hljs-variable">$JAVA_HOME</span>/jre<br><span class="hljs-built_in">export</span> <span class="hljs-attribute">CLASSPATH</span>=<span class="hljs-variable">$CLASSPATH</span>:.:$JRE_HOME/lib:$JAVA_HOME/lib<br><span class="hljs-built_in">export</span> <span class="hljs-attribute">PATH</span>=<span class="hljs-variable">$PATH</span>:$JAVA_HOME/bin:$JRE_HOME/bin<br></code></pre></td></tr></table></figure><p>然后重新配置 profile  使其变量生效</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">source</span> /etc/profile<br></code></pre></td></tr></table></figure><p>输入 java -version 出现如下就说明 JDK 已经配置成功了<br><img src="/2022/11/14/Nginx%E8%B4%9F%E8%BD%BDTomcat/image-20220809163838671.png"></p><h2 id="Tomcat安装"><a href="#Tomcat安装" class="headerlink" title="Tomcat安装"></a>Tomcat安装</h2><p>解压</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">cd</span> /usr/ftp<br><span class="hljs-attribute">tar</span> -zvxf apache-tomcat-<span class="hljs-number">9</span>.<span class="hljs-number">0</span>.<span class="hljs-number">17</span>.tar.gz<br><span class="hljs-attribute">mv</span> apache-tomcat-<span class="hljs-number">9</span>.<span class="hljs-number">0</span>.<span class="hljs-number">17</span> /usr/local/tomcat1  <br></code></pre></td></tr></table></figure><p>把环境变量追加入到  &#x2F;etc&#x2F;profile 下  <strong><a href="#%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F">配置</a></strong></p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">vi</span> /etc/<span class="hljs-keyword">profile</span><br></code></pre></td></tr></table></figure><p>把下方配置追加到 &#x2F;etc&#x2F;profile 尾部 <strong>注意tomcat的实际路径</strong></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-built_in">export</span> <span class="hljs-attribute">CATALINA_BASE</span>=/usr/local/tomcat1<br><span class="hljs-built_in">export</span> <span class="hljs-attribute">CATALINA_HOME</span>=<span class="hljs-variable">$CATALINA_BASE</span><br><span class="hljs-built_in">export</span> <span class="hljs-attribute">TOMCAT_HOME</span>=<span class="hljs-variable">$CATALINA_BASE</span><br></code></pre></td></tr></table></figure><p>然后重新配置 profile  使其变量生效</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">source</span> /etc/profile<br></code></pre></td></tr></table></figure><p>启动 Tomcat<br>如果是在 tomcat 下的 bin 目录下就执行</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm"><span class="hljs-keyword">sh </span>startup.<span class="hljs-keyword">sh </span>                  <br></code></pre></td></tr></table></figure><p>在其他目录下执行</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stata"><span class="hljs-keyword">sh</span> /usr/<span class="hljs-keyword">local</span>/tomcat1/bin/startup.<span class="hljs-keyword">sh</span><br></code></pre></td></tr></table></figure><p>停止运行    同上</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs abnf">sh shutdown.sh<span class="hljs-operator">=</span><span class="hljs-operator">=</span><span class="hljs-operator">=</span><span class="hljs-operator">=</span>bin目录下<br>sh /usr/local/tomcat1/bin/shutdown.sh  <span class="hljs-operator">=</span><span class="hljs-operator">=</span><span class="hljs-operator">=</span><span class="hljs-operator">=</span>其他目录下<br></code></pre></td></tr></table></figure><ul><li>浏览器输入http:&#x2F;&#x2F;【虚拟机ip】:8080 【Tomcat默认端口】 例如<a href="http://192.168.139.123:8080/">http://192.168.139.123:8080</a></li><li>显示如下页面就表示安装成功了</li><li>如果没有 则需要放行 8080 端口 <strong><a href="#%E9%98%B2%E7%81%AB%E5%A2%99">防火墙配置</a></strong><br><img src="/2022/11/14/Nginx%E8%B4%9F%E8%BD%BDTomcat/image-20220809163906881.png"></li></ul><h1 id="Nginx安装配置"><a href="#Nginx安装配置" class="headerlink" title="Nginx安装配置"></a>Nginx安装配置</h1><h2 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h2><p>正式安装Nginx之前需要给操作系统下载好必要的依赖</p><blockquote><p>yum install gcc gcc-c++ openssl automake autoconf make libtool pcre pcre-devel zlib openssl-devel zlib-devel</p></blockquote><h2 id="创建-Nginx-用户组"><a href="#创建-Nginx-用户组" class="headerlink" title="创建 Nginx 用户组"></a>创建 Nginx 用户组</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">groupadd nginx   <br>useradd -m -s <span class="hljs-regexp">/sbin/</span>nologin -g nginx nginx<br></code></pre></td></tr></table></figure><h2 id="安装编译"><a href="#安装编译" class="headerlink" title="安装编译"></a>安装编译</h2><p>进入Nginx解压目录下 安装指定到 &#x2F;usr&#x2F;local&#x2F; 目录下的 nginx-1.15.10、编译</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /usr/ftp<br>tar -zvxf nginx-1.15.10.tar.gz<br><span class="hljs-built_in">mv</span> nginx-1.15.10 /usr/local     <br><span class="hljs-built_in">cd</span> /usr/local/nginx-1.15.10<br>./configure --prefix=/usr/local/nginx <br>make &amp;&amp; make install<br></code></pre></td></tr></table></figure><h2 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h2><p>超级管理员运行 Nginx</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">sudo <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/nginx/</span>sbin/nginx<br>sudo <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/nginx/</span>sbin/nginx -s reload             ---重启<br></code></pre></td></tr></table></figure><ul><li><p>如果报如下错误表示少了 logs 文件夹需要在 <strong>&#x2F;usr&#x2F;local&#x2F;nginx-1.15.10</strong> 创建一个 logs 文件夹 然后再次执行启动命令<br><img src="/2022/11/14/Nginx%E8%B4%9F%E8%BD%BDTomcat/image-20220809163918065.png"></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">mkdir</span> logs                           ###注意是在 /usr/local/nginx-<span class="hljs-number">1</span>.<span class="hljs-number">15</span>.<span class="hljs-number">10</span> 目录下创建<br></code></pre></td></tr></table></figure></li><li><p>浏览器输入http:&#x2F;&#x2F;【虚拟机ip】:80 【nginx默认端口】 显示如下页面就表示安装成功了</p></li><li><p>如果没有 则需要放行 80 端口 <strong><a href="#%E9%98%B2%E7%81%AB%E5%A2%99">防火墙配置</a></strong><br><img src="/2022/11/14/Nginx%E8%B4%9F%E8%BD%BDTomcat/image-20220809163926072.png"></p></li><li><p>配置nginx</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stata">vi /usr/<span class="hljs-keyword">local</span>/nginx/<span class="hljs-keyword">conf</span>/nginx.<span class="hljs-keyword">conf</span><br></code></pre></td></tr></table></figure></li><li><p>端口号配置    默认端口 80<br><img src="/2022/11/14/Nginx%E8%B4%9F%E8%BD%BDTomcat/image-20220809163939897.png"></p></li><li><p>集群配置<br><img src="/2022/11/14/Nginx%E8%B4%9F%E8%BD%BDTomcat/image-20220809163947407.png"></p></li></ul><h1 id="Nginx代理负载Tomcat"><a href="#Nginx代理负载Tomcat" class="headerlink" title="Nginx代理负载Tomcat"></a>Nginx代理负载Tomcat</h1><blockquote><p>负载均衡<br>数以万计算 百万 千万的用户 同时访问同一台服务器，再好的性能也扛不住。<br>负载均衡就是 准备了很多台镜像服务器，但是由一个代理服务器帮助用户选择内容服务器。<br>代理  张三 和李四 都是菜贩 摊位挨着，李四上厕所了，让张三代理一下,有人来买李四的菜吗，拿  李四的 菜 收的钱放李四的盒子  找的钱从李四的盒子 （这些事都是张三代理）</p></blockquote><h2 id="Tomcat配置"><a href="#Tomcat配置" class="headerlink" title="Tomcat配置"></a>Tomcat配置</h2><p>复制多个 tomcat </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /usr/local/<br><span class="hljs-built_in">cp</span> -r tomcat1 tomcat2<br><span class="hljs-built_in">cp</span> -r tomcat1 tomcat3<br></code></pre></td></tr></table></figure><p>加入 tomcat2 tomcat3 的环境变量</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs routeros">vi /etc<span class="hljs-built_in">/profile</span><br><span class="hljs-built_in"></span>在 Tomcat1 下方添加 Tomcat2 Tomcat3<br><span class="hljs-comment">##### Tomcat2 #####</span><br><span class="hljs-built_in">export</span> <span class="hljs-attribute">CATALINA_BASE2</span>=/usr/local/tomcat2<br><span class="hljs-built_in">export</span> <span class="hljs-attribute">CATALINA_HOME2</span>=<span class="hljs-variable">$CATALINA_BASE2</span><br><span class="hljs-built_in">export</span> <span class="hljs-attribute">TOMCAT_HOME2</span>=<span class="hljs-variable">$CATALINA_BASE2</span><br><span class="hljs-comment">##### Tomcat3 #####</span><br><span class="hljs-built_in">export</span> <span class="hljs-attribute">CATALINA_BASE3</span>=/usr/local/tomcat3<br><span class="hljs-built_in">export</span> <span class="hljs-attribute">CATALINA_HOME3</span>=<span class="hljs-variable">$CATALINA_BASE3</span><br><span class="hljs-built_in">export</span> <span class="hljs-attribute">TOMCAT_HOME3</span>=<span class="hljs-variable">$CATALINA_BASE3</span><br></code></pre></td></tr></table></figure><blockquote><p>配置多个tomcat为什么需要在&#x2F;etc&#x2F;profile 修改多个 tomcat 设置</p><p>如果不配置，哪个tomcat先启动就认谁的，例如tomcat1设置为123，tomcat2设置为abc，1先启动显示123 ，2先启动就会显示abc</p><p>shutdown.sh有时候并不能关闭服务器</p><p>ps –ef|grep tomcat &#x3D;&#x3D;ps 查看 grep过滤 tomcat想在进程中查找的程序名</p><p>找到进程号 使用 kill -9 +进程号让其停止运行<br>然后重新配置 profile  使其变量生效</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">source</span> /etc/profile<br></code></pre></td></tr></table></figure><p>修改 tomcat2   tomcat3 server.xml中的端口号<br>tomcat2      如下4处端口依次 +1</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">vi /usr/<span class="hljs-keyword">local</span>/tomcat2/conf/<span class="hljs-keyword">server</span>.xml<br></code></pre></td></tr></table></figure><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">22 </span>&lt;Server port=<span class="hljs-string">&quot;8006&quot;</span> shutdown=<span class="hljs-string">&quot;SHUTDOWN&quot;</span>&gt;             <span class="hljs-number">8005</span>&gt;<span class="hljs-number">8006</span><br><span class="hljs-symbol">69 </span>    &lt;Connector port=<span class="hljs-string">&quot;8081&quot;</span> protocol=<span class="hljs-string">&quot;HTTP/1.1&quot;</span>       <span class="hljs-number">8080</span>&gt;<span class="hljs-number">8081</span><br><span class="hljs-symbol">70 </span>               connectionTimeout=<span class="hljs-string">&quot;20000&quot;</span><br><span class="hljs-symbol">71 </span>               redirectPort=<span class="hljs-string">&quot;8443&quot;</span> /&gt;<br><span class="hljs-symbol">116 </span>    &lt;Connector port=<span class="hljs-string">&quot;8010&quot;</span> protocol=<span class="hljs-string">&quot;AJP/1.3&quot;</span> redirectPort=<span class="hljs-string">&quot;8444&quot;</span> /&gt;  <span class="hljs-number">8009</span>&gt;<span class="hljs-number">8010</span>    <span class="hljs-number">8443</span>&gt;<span class="hljs-number">8444</span><br></code></pre></td></tr></table></figure><p>tomcat3</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">vi /usr/<span class="hljs-keyword">local</span>/tomcat3/conf/<span class="hljs-keyword">server</span>.xml<br></code></pre></td></tr></table></figure><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">22 </span>&lt;Server port=<span class="hljs-string">&quot;8007&quot;</span> shutdown=<span class="hljs-string">&quot;SHUTDOWN&quot;</span>&gt;             <span class="hljs-number">8005</span>&gt;<span class="hljs-number">8007</span><br><span class="hljs-symbol">69 </span>    &lt;Connector port=<span class="hljs-string">&quot;8082&quot;</span> protocol=<span class="hljs-string">&quot;HTTP/1.1&quot;</span>       <span class="hljs-number">8080</span>&gt;<span class="hljs-number">8082</span><br><span class="hljs-symbol">70 </span>               connectionTimeout=<span class="hljs-string">&quot;20000&quot;</span><br><span class="hljs-symbol">71 </span>               redirectPort=<span class="hljs-string">&quot;8443&quot;</span> /&gt;<br><span class="hljs-symbol">116 </span>    &lt;Connector port=<span class="hljs-string">&quot;8011&quot;</span> protocol=<span class="hljs-string">&quot;AJP/1.3&quot;</span> redirectPort=<span class="hljs-string">&quot;8445&quot;</span> /&gt;  <span class="hljs-number">8009</span>&gt;<span class="hljs-number">8011</span>    <span class="hljs-number">8443</span>&gt;<span class="hljs-number">8445</span><br></code></pre></td></tr></table></figure><p>启动 tomcat2  tomcat3</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stata"><span class="hljs-keyword">sh</span> /usr/<span class="hljs-keyword">local</span>/tomcat2/bin/startup.<span class="hljs-keyword">sh</span><br><span class="hljs-keyword">sh</span> /usr/<span class="hljs-keyword">local</span>/tomcat3/bin/startup.<span class="hljs-keyword">sh</span><br></code></pre></td></tr></table></figure><p><strong>注意对应关系</strong><br><img src="/2022/11/14/Nginx%E8%B4%9F%E8%BD%BDTomcat/image-20220809163959404.png"><br><img src="/2022/11/14/Nginx%E8%B4%9F%E8%BD%BDTomcat/image-20220809164010447.png"></p><blockquote><p>如何理解，在没有配置tomcat特殊的系统变量的情况下</p><ol><li><p>先启动tomcat1，再启动tomcat2 ，查看只有tomcat1，如果先启动tomcat2，再启动tomcat 只有 tomcat2（谁先启动，谁的路径就注册成了临时的系统路径）</p></li><li><p>明明tomcat2在执行，执行tomcat1的关闭脚本sh,结果tomcat2被关了</p></li></ol><p>再理解 ，配置profile（系统环境设置）之后，每个tomcat的catalina.sh就不找别人的路径了原因就是因为他找到 了路径</p></blockquote><h2 id="Nginx配置"><a href="#Nginx配置" class="headerlink" title="Nginx配置"></a>Nginx配置</h2><p>找到 Server 修改端口</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">41</span>     server &#123;<br><span class="hljs-attribute">42</span>         listen       <span class="hljs-number">9090</span>;###修改默认端口<span class="hljs-number">80</span>&gt;<span class="hljs-number">9090</span>，也可以不修改<br><span class="hljs-attribute">43</span>         server_name  localhost;<br>       <span class="hljs-comment">#集群配置</span><br><span class="hljs-attribute">35</span>     upstream tomcats &#123;<br><span class="hljs-attribute">36</span>       server <span class="hljs-number">192.168.139.123:8080</span> weight=<span class="hljs-number">1</span>;#服务器集群，weight 权重<br><span class="hljs-attribute">37</span>       server <span class="hljs-number">192.168.139.123:8081</span> weight=<span class="hljs-number">1</span>;<br><span class="hljs-attribute">38</span>       server <span class="hljs-number">192.168.139.123:8082</span> weight=<span class="hljs-number">1</span>;<br><span class="hljs-attribute">39</span>         &#125;<br></code></pre></td></tr></table></figure><p>修改配置文件后<br>在 Server 中的 location &#x2F;中添加  proxy_pass  <a href="http://tomcats/">http://tomcats</a>;  tomcats 和前面的 upstream 的名字相同 配置完效果如下</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-section">location</span> / &#123;<br>    <span class="hljs-comment">#root   html;</span><br>    <span class="hljs-comment">#index  index.html index.htm;</span><br>    <span class="hljs-attribute">proxy_set_header</span> HOST <span class="hljs-variable">$host</span>;<br>    <span class="hljs-attribute">proxy_set_header</span> X-Forwarded-Proto <span class="hljs-variable">$scheme</span>;<br>    <span class="hljs-attribute">proxy_set_header</span> X-Real-IP <span class="hljs-variable">$remote_addr</span>;<br>    <span class="hljs-attribute">proxy_set_header</span> X-Forwarded-For <span class="hljs-variable">$proxy_add_x_forwarded_for</span>;<br>    <span class="hljs-attribute">proxy_pass</span>   http://tomcats;<br>&#125;<br></code></pre></td></tr></table></figure><p>找到在每个tomcat的 webapp文件夹下的ROOT文件夹 新建1.txt文件，并添加上文字</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">echo tomcat1 &gt; <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/tomcat1/</span>webapps<span class="hljs-regexp">/ROOT/</span><span class="hljs-number">1</span>.txt<br>echo tomcat2 &gt; <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/tomcat2/</span>webapps<span class="hljs-regexp">/ROOT/</span><span class="hljs-number">1</span>.txt<br>echo tomcat3 &gt; <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/tomcat3/</span>webapps<span class="hljs-regexp">/ROOT/</span><span class="hljs-number">1</span>.txt<br></code></pre></td></tr></table></figure><p>然后进入浏览器在，浏览器中使用 http:&#x2F;&#x2F;虚拟机IP：修改的Nginx端口&#x2F;1.txt 例如 <a href="http://192.168.139.123:9090/1.txt">http://192.168.139.123:9090/1.txt</a><br><img src="/2022/11/14/Nginx%E8%B4%9F%E8%BD%BDTomcat/%E8%B4%9F%E8%BD%BD.gif"><br>到这里就基本实现了 Nginx 负载多个 Tomcat </p>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>运维</tag>
      
      <tag>Tomcat</tag>
      
      <tag>Nginx</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
